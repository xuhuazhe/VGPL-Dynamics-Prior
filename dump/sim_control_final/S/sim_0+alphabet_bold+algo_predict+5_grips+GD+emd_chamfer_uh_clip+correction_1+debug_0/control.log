ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.209950 (s), 4314.76 (MB) / 4314.76 (MB) / 4336 (MB)
[Open3D DEBUG] #     Got normal field: 0.0920849 (s), 4320.81 (MB) / 4320.81 (MB) / 4336 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048149e-05 / 8.944268e-01
[Open3D DEBUG] #       Finalized tree: 0.980728 (s), 4322.33 (MB) / 4322.33 (MB) / 4336 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.81322 (s), 4322.33 (MB) / 4322.33 (MB) / 4336 (MB)
[Open3D DEBUG] #Set point constraints: 0.557113 (s), 4322.33 (MB) / 4322.33 (MB) / 4336 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4322.328 MB
[Open3D DEBUG] # Linear system solved: 6.75236 (s), 4322.33 (MB) / 4322.33 (MB) / 4336 (MB)
[Open3D DEBUG] Got average: 0.289249 (s), 4322.33 (MB) / 4322.33 (MB) / 4336 (MB)
[Open3D DEBUG] Iso-Value: 5.039394e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      49.3 (s),    4332.1 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0358, mean: -0.0404, std: 0.0022
Selected top reward seqs: tensor([-0.0376, -0.0374, -0.0373, -0.0371, -0.0371, -0.0370, -0.0369, -0.0369,
        -0.0368, -0.0368, -0.0368, -0.0367, -0.0366, -0.0365, -0.0364, -0.0364,
        -0.0362, -0.0361, -0.0358, -0.0358])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 5 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 15 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 6 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 27 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 3 iterations: tensor([-0.0350], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 22 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 16 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 4 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Loss: 0.03495536744594574
Optimal set of params:
mid_point: tensor([[0.5234, 0.1400, 0.4916],
        [0.5185, 0.1400, 0.5073]])
angle: tensor([0.4407, 2.8086], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1616, 0.1400, 0.6622, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8965, 0.1400, 0.6380, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44224 / 38555
[Open3D DEBUG] #   Got kernel density: 0.228481 (s), 5616.4 (MB) / 5616.4 (MB) / 5647 (MB)
[Open3D DEBUG] #     Got normal field: 0.154739 (s), 5626.91 (MB) / 5626.91 (MB) / 5647 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.868867e-05 / 2.595448e+00
[Open3D DEBUG] #       Finalized tree: 1.30644 (s), 5627.95 (MB) / 5627.95 (MB) / 5647 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.06568 (s), 5627.95 (MB) / 5627.95 (MB) / 5647 (MB)
[Open3D DEBUG] #Set point constraints: 1.09413 (s), 5627.95 (MB) / 5627.95 (MB) / 5647 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 502489 / 456360 / 117913
[Open3D DEBUG] Memory Usage: 5627.949 MB
[Open3D DEBUG] # Linear system solved: 9.03252 (s), 5628.61 (MB) / 5628.61 (MB) / 5647 (MB)
[Open3D DEBUG] Got average: 0.308315 (s), 5628.61 (MB) / 5628.61 (MB) / 5647 (MB)
[Open3D DEBUG] Iso-Value: 5.011487e-01 = 2.216280e+04 / 4.422400e+04
[Open3D DEBUG] #          Total Solve:      57.8 (s),    5641.0 (MB)
TriangleMesh with 69668 points and 139264 triangles.
EMD: tensor([0.0291], dtype=torch.float64)
Chamfer: tensor([0.0371], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0350]); sim_loss: tensor([0.0299], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44987 / 23471
[Open3D DEBUG] #   Got kernel density: 0.077322 (s), 5633.69 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] #     Got normal field: 0.0666921 (s), 5634.8 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.322499e-05 / 5.949528e-01
[Open3D DEBUG] #       Finalized tree: 0.764661 (s), 5634.82 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.52275 (s), 5635.04 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] #Set point constraints: 0.416925 (s), 5635.04 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 240640 / 274984 / 33
[Open3D DEBUG] Memory Usage: 5635.043 MB
[Open3D DEBUG] # Linear system solved: 5.5689 (s), 5635.6 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] Got average: 0.180929 (s), 5635.6 (MB) / 5640.99 (MB) / 5665 (MB)
[Open3D DEBUG] Iso-Value: 5.097677e-01 = 2.293292e+04 / 4.498700e+04
[Open3D DEBUG] #          Total Solve:      42.9 (s),    5641.0 (MB)
TriangleMesh with 31986 points and 63960 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0348, mean: -0.0403, std: 0.0023
Selected top reward seqs: tensor([-0.0372, -0.0370, -0.0369, -0.0369, -0.0367, -0.0367, -0.0366, -0.0365,
        -0.0364, -0.0364, -0.0364, -0.0363, -0.0362, -0.0360, -0.0356, -0.0356,
        -0.0354, -0.0351, -0.0350, -0.0348])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0371], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 27 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0368], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0359], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 15 iterations: tensor([-0.0368], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 17 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 7 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Loss: 0.034494176506996155
Optimal set of params:
mid_point: tensor([[0.5743, 0.1400, 0.5723],
        [0.5751, 0.1400, 0.4766]])
angle: tensor([0.5337, 3.0870], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2300, 0.1400, 0.7758, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9745, 0.1400, 0.4984, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 42861 / 36747
[Open3D DEBUG] #   Got kernel density: 0.375584 (s), 5702.11 (MB) / 5702.11 (MB) / 5734 (MB)
[Open3D DEBUG] #     Got normal field: 0.232614 (s), 5704.76 (MB) / 5704.76 (MB) / 5734 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.283912e-05 / 2.264738e+00
[Open3D DEBUG] #       Finalized tree: 1.40691 (s), 5704.76 (MB) / 5704.76 (MB) / 5734 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.02673 (s), 5704.76 (MB) / 5704.76 (MB) / 5734 (MB)
[Open3D DEBUG] #Set point constraints: 0.925349 (s), 5704.76 (MB) / 5704.76 (MB) / 5734 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 460643 / 421864 / 104585
[Open3D DEBUG] Memory Usage: 5704.758 MB
[Open3D DEBUG] # Linear system solved: 8.60756 (s), 5704.8 (MB) / 5704.8 (MB) / 5734 (MB)
[Open3D DEBUG] Got average: 0.272787 (s), 5704.8 (MB) / 5704.8 (MB) / 5734 (MB)
[Open3D DEBUG] Iso-Value: 5.050790e-01 = 2.164819e+04 / 4.286100e+04
[Open3D DEBUG] #          Total Solve:      54.9 (s),    5709.3 (MB)
TriangleMesh with 62441 points and 124764 triangles.
EMD: tensor([0.0354], dtype=torch.float64)
Chamfer: tensor([0.0418], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0345]); sim_loss: tensor([0.0361], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44058 / 23712
[Open3D DEBUG] #   Got kernel density: 0.198217 (s), 5702.62 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] #     Got normal field: 0.0505731 (s), 5702.93 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.474158e-05 / 6.494843e-01
[Open3D DEBUG] #       Finalized tree: 0.862492 (s), 5702.98 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.5358 (s), 5702.98 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] #Set point constraints: 0.431251 (s), 5702.98 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 242425 / 276608 / 449
[Open3D DEBUG] Memory Usage: 5702.984 MB
[Open3D DEBUG] # Linear system solved: 5.56289 (s), 5702.98 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] Got average: 0.259529 (s), 5702.98 (MB) / 5709.32 (MB) / 5778 (MB)
[Open3D DEBUG] Iso-Value: 5.094272e-01 = 2.244434e+04 / 4.405800e+04
[Open3D DEBUG] #          Total Solve:      44.2 (s),    5709.3 (MB)
TriangleMesh with 33749 points and 67486 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0348, mean: -0.0407, std: 0.0023
Selected top reward seqs: tensor([-0.0375, -0.0373, -0.0373, -0.0373, -0.0371, -0.0371, -0.0371, -0.0370,
        -0.0367, -0.0366, -0.0366, -0.0366, -0.0366, -0.0365, -0.0359, -0.0358,
        -0.0358, -0.0354, -0.0353, -0.0348])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0388], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 6 iterations: tensor([-0.0371], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 3 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 17 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 28 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Loss: 0.03494606539607048
Optimal set of params:
mid_point: tensor([[0.4746, 0.1400, 0.4449],
        [0.5574, 0.1400, 0.4981]])
angle: tensor([2.1583, 2.8585], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6963, 0.1400, 0.7778, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9415, 0.1400, 0.6099, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 42668 / 36777
[Open3D DEBUG] #   Got kernel density: 0.250048 (s), 5753.16 (MB) / 5753.16 (MB) / 5785 (MB)
[Open3D DEBUG] #     Got normal field: 0.206729 (s), 5755.05 (MB) / 5755.05 (MB) / 5785 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.618453e-05 / 2.397282e+00
[Open3D DEBUG] #       Finalized tree: 1.20027 (s), 5755.07 (MB) / 5755.07 (MB) / 5785 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.83635 (s), 5755.07 (MB) / 5755.07 (MB) / 5785 (MB)
[Open3D DEBUG] #Set point constraints: 0.919238 (s), 5755.07 (MB) / 5755.07 (MB) / 5785 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 470891 / 427320 / 110841
[Open3D DEBUG] Memory Usage: 5755.070 MB
[Open3D DEBUG] # Linear system solved: 8.48758 (s), 5755.07 (MB) / 5755.07 (MB) / 5785 (MB)
[Open3D DEBUG] Got average: 0.359581 (s), 5755.07 (MB) / 5755.07 (MB) / 5785 (MB)
[Open3D DEBUG] Iso-Value: 5.007981e-01 = 2.136805e+04 / 4.266800e+04
[Open3D DEBUG] #          Total Solve:      53.7 (s),    5756.4 (MB)
TriangleMesh with 64062 points and 128006 triangles.
EMD: tensor([0.0336], dtype=torch.float64)
Chamfer: tensor([0.0418], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0349]); sim_loss: tensor([0.0344], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44376 / 25138
[Open3D DEBUG] #   Got kernel density: 0.340349 (s), 5748.7 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] #     Got normal field: 0.387543 (s), 5749.73 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.586304e-05 / 7.039382e-01
[Open3D DEBUG] #       Finalized tree: 1.00263 (s), 5749.76 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.48767 (s), 5749.76 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] #Set point constraints: 0.467166 (s), 5749.76 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 258406 / 294752 / 569
[Open3D DEBUG] Memory Usage: 5749.762 MB
[Open3D DEBUG] # Linear system solved: 6.03681 (s), 5749.76 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] Got average: 0.240849 (s), 5749.76 (MB) / 5756.36 (MB) / 5918 (MB)
[Open3D DEBUG] Iso-Value: 5.035378e-01 = 2.234499e+04 / 4.437600e+04
[Open3D DEBUG] #          Total Solve:      49.0 (s),    5756.4 (MB)
TriangleMesh with 36700 points and 73388 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0350, mean: -0.0405, std: 0.0025
Selected top reward seqs: tensor([-0.0369, -0.0369, -0.0369, -0.0369, -0.0368, -0.0368, -0.0367, -0.0367,
        -0.0367, -0.0366, -0.0366, -0.0366, -0.0365, -0.0362, -0.0362, -0.0362,
        -0.0358, -0.0358, -0.0352, -0.0350])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0369], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 4 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0369], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 21 iterations: tensor([-0.0357], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 18 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 27 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 16 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 25 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 4 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 19 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0369], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 5 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 15 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Loss: 0.03464072197675705
Optimal set of params:
mid_point: tensor([[0.4663, 0.1400, 0.4576],
        [0.5630, 0.1400, 0.4829]])
angle: tensor([0.2158, 3.0119], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0095], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0756, 0.1400, 0.5433, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9597, 0.1400, 0.5346, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 45115 / 21612
[Open3D DEBUG] #   Got kernel density: 0.132202 (s), 5855.34 (MB) / 5855.34 (MB) / 5918 (MB)
[Open3D DEBUG] #     Got normal field: 0.0718679 (s), 5855.88 (MB) / 5855.88 (MB) / 5918 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.147751e-05 / 5.178081e-01
[Open3D DEBUG] #       Finalized tree: 0.696263 (s), 5855.88 (MB) / 5855.88 (MB) / 5918 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.58001 (s), 5855.88 (MB) / 5855.88 (MB) / 5918 (MB)
[Open3D DEBUG] #Set point constraints: 0.333981 (s), 5855.89 (MB) / 5855.89 (MB) / 5918 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 211821 / 242048 / 33
[Open3D DEBUG] Memory Usage: 5855.887 MB
[Open3D DEBUG] # Linear system solved: 4.51296 (s), 5855.89 (MB) / 5855.89 (MB) / 5918 (MB)
[Open3D DEBUG] Got average: 0.238328 (s), 5855.89 (MB) / 5855.89 (MB) / 5918 (MB)
[Open3D DEBUG] Iso-Value: 5.118016e-01 = 2.308993e+04 / 4.511500e+04
[Open3D DEBUG] #          Total Solve:      37.9 (s),    5856.5 (MB)
TriangleMesh with 28355 points and 56698 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0347, mean: -0.0395, std: 0.0023
Selected top reward seqs: tensor([-0.0365, -0.0365, -0.0364, -0.0363, -0.0362, -0.0362, -0.0360, -0.0358,
        -0.0358, -0.0357, -0.0357, -0.0356, -0.0355, -0.0353, -0.0352, -0.0350,
        -0.0349, -0.0349, -0.0348, -0.0347])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 23 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 16 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 28 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0358], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 17 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0359], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 24 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 20 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 6 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Loss: 0.03430645167827606
Optimal set of params:
mid_point: tensor([[0.5790, 0.1400, 0.4285]])
angle: tensor([0.2226], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1889, 0.1400, 0.5168, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 43235 / 37108
[Open3D DEBUG] #   Got kernel density: 0.215204 (s), 5868.84 (MB) / 5868.84 (MB) / 5918 (MB)
[Open3D DEBUG] #     Got normal field: 0.103920 (s), 5869.38 (MB) / 5869.38 (MB) / 5918 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.389351e-05 / 2.330086e+00
[Open3D DEBUG] #       Finalized tree: 1.26356 (s), 5869.55 (MB) / 5869.55 (MB) / 5918 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.04044 (s), 5869.55 (MB) / 5869.55 (MB) / 5918 (MB)
[Open3D DEBUG] #Set point constraints: 0.982339 (s), 5869.55 (MB) / 5869.55 (MB) / 5918 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 475847 / 436096 / 107729
[Open3D DEBUG] Memory Usage: 5869.547 MB
[Open3D DEBUG] # Linear system solved: 8.04736 (s), 5869.55 (MB) / 5869.55 (MB) / 5918 (MB)
[Open3D DEBUG] Got average: 0.336316 (s), 5869.55 (MB) / 5869.55 (MB) / 5918 (MB)
[Open3D DEBUG] Iso-Value: 5.049536e-01 = 2.183167e+04 / 4.323500e+04
[Open3D DEBUG] #          Total Solve:      54.9 (s),    5873.6 (MB)
TriangleMesh with 64815 points and 129532 triangles.
EMD: tensor([0.0344], dtype=torch.float64)
Chamfer: tensor([0.0405], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0343]); sim_loss: tensor([0.0350], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.1616, 0.1400, 0.6622, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8965, 0.1400, 0.6380, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0350]); Best sim loss: tensor([0.0299], dtype=torch.float64)
Wrote profile results to control.py.lprof
