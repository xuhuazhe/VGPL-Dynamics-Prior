ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.015471 (s), 5143.2 (MB) / 5143.2 (MB) / 5193 (MB)
[Open3D DEBUG] #     Got normal field: 0.0773861 (s), 5147.75 (MB) / 5147.75 (MB) / 5193 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048152e-05 / 8.944279e-01
[Open3D DEBUG] #       Finalized tree: 0.0750501 (s), 5149.75 (MB) / 5149.75 (MB) / 5193 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.350472 (s), 5149.75 (MB) / 5149.75 (MB) / 5193 (MB)
[Open3D DEBUG] #Set point constraints: 0.0357089 (s), 5149.75 (MB) / 5149.75 (MB) / 5193 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 5149.754 MB
[Open3D DEBUG] # Linear system solved: 4.07978 (s), 5149.75 (MB) / 5149.75 (MB) / 5193 (MB)
[Open3D DEBUG] Got average: 0.0165801 (s), 5149.75 (MB) / 5149.75 (MB) / 5193 (MB)
[Open3D DEBUG] Iso-Value: 5.039395e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:       7.3 (s),    5167.3 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0419, mean: -0.0480, std: 0.0026
Selected top reward seqs: tensor([-0.0441, -0.0441, -0.0441, -0.0440, -0.0440, -0.0439, -0.0438, -0.0437,
        -0.0437, -0.0436, -0.0434, -0.0434, -0.0434, -0.0434, -0.0433, -0.0433,
        -0.0433, -0.0432, -0.0422, -0.0419])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 13 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 3 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 5 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0444], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 3 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 13 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0426], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 3 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 34 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 27 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 29 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Loss: 0.04204832762479782
Optimal set of params:
mid_point: tensor([[0.4489, 0.1400, 0.5109],
        [0.5316, 0.1400, 0.4676]])
angle: tensor([2.8761, 2.9041], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0100, 0.0111], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8349, 0.1400, 0.6158, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9204, 0.1400, 0.5617, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44784 / 38721
[Open3D DEBUG] #   Got kernel density: 0.0268869 (s), 6137.53 (MB) / 6137.53 (MB) / 6168 (MB)
[Open3D DEBUG] #     Got normal field: 0.107550 (s), 6137.55 (MB) / 6137.55 (MB) / 6168 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.436652e-05 / 2.434750e+00
[Open3D DEBUG] #       Finalized tree: 0.121431 (s), 6137.86 (MB) / 6137.86 (MB) / 6168 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.430759 (s), 6137.86 (MB) / 6137.86 (MB) / 6168 (MB)
[Open3D DEBUG] #Set point constraints: 0.0523179 (s), 6137.86 (MB) / 6137.86 (MB) / 6168 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 491282 / 449760 / 111705
[Open3D DEBUG] Memory Usage: 6137.863 MB
[Open3D DEBUG] # Linear system solved: 4.75817 (s), 6138.09 (MB) / 6138.09 (MB) / 6168 (MB)
[Open3D DEBUG] Got average: 0.0252030 (s), 6138.09 (MB) / 6138.09 (MB) / 6168 (MB)
[Open3D DEBUG] Iso-Value: 5.029523e-01 = 2.252422e+04 / 4.478400e+04
[Open3D DEBUG] #          Total Solve:       8.5 (s),    6148.9 (MB)
TriangleMesh with 68711 points and 137330 triangles.
EMD: tensor([0.0358], dtype=torch.float64)
Chamfer: tensor([0.0451], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0420]); sim_loss: tensor([0.0368], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43550 / 35498
[Open3D DEBUG] #   Got kernel density: 0.022794 (s), 6148.08 (MB) / 6148.9 (MB) / 6180 (MB)
[Open3D DEBUG] #     Got normal field: 0.09448 (s), 6149.22 (MB) / 6149.22 (MB) / 6180 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.252104e-05 / 1.851791e+00
[Open3D DEBUG] #       Finalized tree: 0.101300 (s), 6149.23 (MB) / 6149.23 (MB) / 6180 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.408553 (s), 6149.23 (MB) / 6149.23 (MB) / 6180 (MB)
[Open3D DEBUG] #Set point constraints: 0.045476 (s), 6149.23 (MB) / 6149.23 (MB) / 6180 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 438292 / 429432 / 71473
[Open3D DEBUG] Memory Usage: 6149.230 MB
[Open3D DEBUG] # Linear system solved: 4.13852 (s), 6149.73 (MB) / 6149.73 (MB) / 6180 (MB)
[Open3D DEBUG] Got average: 0.023375 (s), 6149.73 (MB) / 6149.73 (MB) / 6180 (MB)
[Open3D DEBUG] Iso-Value: 5.031083e-01 = 2.191037e+04 / 4.355000e+04
[Open3D DEBUG] #          Total Solve:       7.5 (s),    6156.1 (MB)
TriangleMesh with 63051 points and 126066 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0406, mean: -0.0472, std: 0.0029
Selected top reward seqs: tensor([-0.0429, -0.0428, -0.0428, -0.0427, -0.0427, -0.0427, -0.0427, -0.0426,
        -0.0425, -0.0423, -0.0422, -0.0422, -0.0421, -0.0419, -0.0416, -0.0415,
        -0.0413, -0.0413, -0.0411, -0.0406])
Batch 0/20:
reward seqs after 11 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 26 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 20 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 5 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 16 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 15 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 18 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 20 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 24 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Loss: 0.04009125381708145
Optimal set of params:
mid_point: tensor([[0.5526, 0.1400, 0.5084],
        [0.5692, 0.1400, 0.4607]])
angle: tensor([2.6917, 1.9377], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9128, 0.1400, 0.6823, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7127, 0.1400, 0.8341, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46460 / 24631
[Open3D DEBUG] #   Got kernel density: 0.00806904 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] #     Got normal field: 0.051115 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.371711e-05 / 6.372970e-01
[Open3D DEBUG] #       Finalized tree: 0.0561678 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.276065 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] #Set point constraints: 0.027899 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 252246 / 287832 / 449
[Open3D DEBUG] Memory Usage: 6232.742 MB
[Open3D DEBUG] # Linear system solved: 3.58963 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] Got average: 0.0154059 (s), 6232.74 (MB) / 6232.74 (MB) / 6265 (MB)
[Open3D DEBUG] Iso-Value: 5.066680e-01 = 2.353980e+04 / 4.646000e+04
[Open3D DEBUG] #          Total Solve:       6.4 (s),    6236.5 (MB)
TriangleMesh with 36577 points and 73142 triangles.
EMD: tensor([0.0377], dtype=torch.float64)
Chamfer: tensor([0.0450], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0401]); sim_loss: tensor([0.0384], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43779 / 38834
[Open3D DEBUG] #   Got kernel density: 0.029228 (s), 6232.75 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] #     Got normal field: 0.107333 (s), 6232.75 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.469766e-05 / 2.832399e+00
[Open3D DEBUG] #       Finalized tree: 0.114876 (s), 6232.87 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.472766 (s), 6232.87 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] #Set point constraints: 0.05636 (s), 6232.87 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 527367 / 476672 / 126033
[Open3D DEBUG] Memory Usage: 6232.871 MB
[Open3D DEBUG] # Linear system solved: 5.11127 (s), 6233.18 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] Got average: 0.028193 (s), 6233.18 (MB) / 6236.49 (MB) / 6294 (MB)
[Open3D DEBUG] Iso-Value: 5.016246e-01 = 2.196062e+04 / 4.377900e+04
[Open3D DEBUG] #          Total Solve:       9.0 (s),    6243.5 (MB)
TriangleMesh with 74558 points and 148906 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0394, mean: -0.0459, std: 0.0028
Selected top reward seqs: tensor([-0.0421, -0.0421, -0.0420, -0.0420, -0.0420, -0.0419, -0.0419, -0.0416,
        -0.0415, -0.0413, -0.0412, -0.0411, -0.0410, -0.0410, -0.0410, -0.0409,
        -0.0409, -0.0401, -0.0395, -0.0394])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 23 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 16 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 15 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 21 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 27 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 4 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Loss: 0.039156556129455566
Optimal set of params:
mid_point: tensor([[0.5757, 0.1400, 0.5019],
        [0.4505, 0.1400, 0.4409]])
angle: tensor([2.9003, 2.7058], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9642, 0.1400, 0.5975, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8131, 0.1400, 0.6098, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 47479 / 42417
[Open3D DEBUG] #   Got kernel density: 0.0331361 (s), 6283.59 (MB) / 6283.59 (MB) / 6326 (MB)
[Open3D DEBUG] #     Got normal field: 0.116761 (s), 6283.59 (MB) / 6283.59 (MB) / 6326 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.375525e-05 / 3.027035e+00
[Open3D DEBUG] #       Finalized tree: 0.131042 (s), 6283.9 (MB) / 6283.9 (MB) / 6326 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.531069 (s), 6283.9 (MB) / 6283.9 (MB) / 6326 (MB)
[Open3D DEBUG] #Set point constraints: 0.059864 (s), 6283.9 (MB) / 6283.9 (MB) / 6326 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 585201 / 538232 / 130569
[Open3D DEBUG] Memory Usage: 6283.898 MB
[Open3D DEBUG] # Linear system solved: 5.85408 (s), 6283.9 (MB) / 6283.9 (MB) / 6326 (MB)
[Open3D DEBUG] Got average: 0.027952 (s), 6283.9 (MB) / 6283.9 (MB) / 6326 (MB)
[Open3D DEBUG] Iso-Value: 5.011886e-01 = 2.379593e+04 / 4.747900e+04
[Open3D DEBUG] #          Total Solve:      10.4 (s),    6295.0 (MB)
TriangleMesh with 88073 points and 175872 triangles.
EMD: tensor([0.0388], dtype=torch.float64)
Chamfer: tensor([0.0456], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0392]); sim_loss: tensor([0.0394], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44959 / 38993
[Open3D DEBUG] #   Got kernel density: 0.027431 (s), 6295.39 (MB) / 6295.39 (MB) / 6459 (MB)
[Open3D DEBUG] #     Got normal field: 0.106240 (s), 6295.39 (MB) / 6295.39 (MB) / 6459 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.367448e-05 / 2.413151e+00
[Open3D DEBUG] #       Finalized tree: 0.114129 (s), 6295.4 (MB) / 6295.4 (MB) / 6459 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.452994 (s), 6295.4 (MB) / 6295.4 (MB) / 6459 (MB)
[Open3D DEBUG] #Set point constraints: 0.0537591 (s), 6295.4 (MB) / 6295.4 (MB) / 6459 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 501558 / 466832 / 106377
[Open3D DEBUG] Memory Usage: 6295.398 MB
[Open3D DEBUG] # Linear system solved: 4.95863 (s), 6295.57 (MB) / 6295.57 (MB) / 6459 (MB)
[Open3D DEBUG] Got average: 0.0272689 (s), 6295.57 (MB) / 6295.57 (MB) / 6459 (MB)
[Open3D DEBUG] Iso-Value: 5.022069e-01 = 2.257872e+04 / 4.495900e+04
[Open3D DEBUG] #          Total Solve:       8.8 (s),    6302.2 (MB)
TriangleMesh with 72006 points and 143916 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0388, mean: -0.0451, std: 0.0028
Selected top reward seqs: tensor([-0.0410, -0.0410, -0.0409, -0.0408, -0.0407, -0.0405, -0.0403, -0.0400,
        -0.0399, -0.0399, -0.0398, -0.0395, -0.0395, -0.0395, -0.0393, -0.0393,
        -0.0391, -0.0390, -0.0389, -0.0388])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 14 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 21 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 32 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 18 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 27 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 19 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 17 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Loss: 0.037660256028175354
Optimal set of params:
mid_point: tensor([[0.4533, 0.1400, 0.4389],
        [0.5065, 0.1400, 0.5790]])
angle: tensor([2.9133, 0.6120], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8430, 0.1400, 0.5294, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1791, 0.1400, 0.8088, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 48105 / 42575
[Open3D DEBUG] #   Got kernel density: 0.0293338 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] #     Got normal field: 0.130489 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.778926e-05 / 2.779953e+00
[Open3D DEBUG] #       Finalized tree: 0.140915 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.527955 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] #Set point constraints: 0.0613642 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 565776 / 530368 / 116233
[Open3D DEBUG] Memory Usage: 6399.105 MB
[Open3D DEBUG] # Linear system solved: 5.74191 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] Got average: 0.0281401 (s), 6399.11 (MB) / 6399.11 (MB) / 6459 (MB)
[Open3D DEBUG] Iso-Value: 5.036051e-01 = 2.422592e+04 / 4.810500e+04
[Open3D DEBUG] #          Total Solve:      10.1 (s),    6406.6 (MB)
TriangleMesh with 84370 points and 168662 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0377, mean: -0.0444, std: 0.0037
Selected top reward seqs: tensor([-0.0399, -0.0397, -0.0395, -0.0394, -0.0392, -0.0391, -0.0391, -0.0390,
        -0.0390, -0.0390, -0.0389, -0.0386, -0.0386, -0.0386, -0.0385, -0.0383,
        -0.0383, -0.0380, -0.0379, -0.0377])
Batch 0/20:
reward seqs after 11 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 22 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 15 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0396], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 16 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 21 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 27 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 21 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Loss: 0.0372573547065258
Optimal set of params:
mid_point: tensor([[0.5637, 0.1400, 0.5054]])
angle: tensor([2.2915], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8276, 0.1400, 0.8059, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46921 / 42987
[Open3D DEBUG] #   Got kernel density: 0.0367911 (s), 6424.47 (MB) / 6424.47 (MB) / 6466 (MB)
[Open3D DEBUG] #     Got normal field: 0.135641 (s), 6426.52 (MB) / 6426.52 (MB) / 6466 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 7.794063e-05 / 3.657053e+00
[Open3D DEBUG] #       Finalized tree: 0.143396 (s), 6426.58 (MB) / 6426.58 (MB) / 6466 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.540400 (s), 6426.82 (MB) / 6426.82 (MB) / 6466 (MB)
[Open3D DEBUG] #Set point constraints: 0.067543 (s), 6426.82 (MB) / 6426.82 (MB) / 6466 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 635587 / 573456 / 152929
[Open3D DEBUG] Memory Usage: 6426.820 MB
[Open3D DEBUG] # Linear system solved: 5.6735 (s), 6426.82 (MB) / 6426.82 (MB) / 6466 (MB)
[Open3D DEBUG] Got average: 0.0306840 (s), 6426.82 (MB) / 6426.82 (MB) / 6466 (MB)
[Open3D DEBUG] Iso-Value: 5.021845e-01 = 2.356300e+04 / 4.692100e+04
[Open3D DEBUG] #          Total Solve:      10.1 (s),    6433.2 (MB)
TriangleMesh with 95502 points and 190670 triangles.
EMD: tensor([0.0557], dtype=torch.float64)
Chamfer: tensor([0.0565], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0373]); sim_loss: tensor([0.0558], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.8349, 0.1400, 0.6158, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9204, 0.1400, 0.5617, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0420]); Best sim loss: tensor([0.0368], dtype=torch.float64)
Wrote profile results to control.py.lprof
