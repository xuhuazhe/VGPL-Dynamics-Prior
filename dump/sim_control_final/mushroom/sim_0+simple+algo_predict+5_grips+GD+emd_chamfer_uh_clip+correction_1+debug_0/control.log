ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.289234 (s), 4430.21 (MB) / 4430.21 (MB) / 4470 (MB)
[Open3D DEBUG] #     Got normal field: 0.610151 (s), 4439.18 (MB) / 4439.18 (MB) / 4470 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997651e-05 / 9.944908e-01
[Open3D DEBUG] #       Finalized tree: 1.35131 (s), 4440.89 (MB) / 4440.89 (MB) / 4470 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.45713 (s), 4440.89 (MB) / 4440.89 (MB) / 4470 (MB)
[Open3D DEBUG] #Set point constraints: 1.33922 (s), 4440.89 (MB) / 4440.89 (MB) / 4470 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4441.152 MB
[Open3D DEBUG] # Linear system solved: 11.859 (s), 4441.15 (MB) / 4441.15 (MB) / 4470 (MB)
[Open3D DEBUG] Got average: 0.262133 (s), 4441.15 (MB) / 4441.15 (MB) / 4470 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      72.1 (s),    4455.0 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0257, mean: -0.0330, std: 0.0033
Selected top reward seqs: tensor([-0.0290, -0.0289, -0.0289, -0.0289, -0.0289, -0.0289, -0.0281, -0.0281,
        -0.0280, -0.0279, -0.0277, -0.0276, -0.0272, -0.0272, -0.0270, -0.0270,
        -0.0265, -0.0259, -0.0258, -0.0257])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 35 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 27 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 3 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 15 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 23 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 15 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 7 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Loss: 0.024741917848587036
Optimal set of params:
mid_point: tensor([[0.4076, 0.1400, 0.4972],
        [0.4437, 0.1400, 0.4860]])
angle: tensor([0.5675, 0.2682], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0089], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0703, 0.1400, 0.7122, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0580, 0.1400, 0.5920, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50186 / 38520
[Open3D DEBUG] #   Got kernel density: 0.283394 (s), 6370.6 (MB) / 6370.6 (MB) / 6407 (MB)
[Open3D DEBUG] #     Got normal field: 0.233732 (s), 6381.05 (MB) / 6381.05 (MB) / 6407 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.170335e-05 / 1.591064e+00
[Open3D DEBUG] #       Finalized tree: 1.58369 (s), 6381.88 (MB) / 6381.88 (MB) / 6407 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.43264 (s), 6381.88 (MB) / 6381.88 (MB) / 6407 (MB)
[Open3D DEBUG] #Set point constraints: 1.64462 (s), 6381.88 (MB) / 6381.88 (MB) / 6407 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 472816 / 522736 / 17625
[Open3D DEBUG] Memory Usage: 6381.879 MB
[Open3D DEBUG] # Linear system solved: 14.0144 (s), 6382.4 (MB) / 6382.4 (MB) / 6407 (MB)
[Open3D DEBUG] Got average: 0.401079 (s), 6382.4 (MB) / 6382.4 (MB) / 6407 (MB)
[Open3D DEBUG] Iso-Value: 5.055854e-01 = 2.537331e+04 / 5.018600e+04
[Open3D DEBUG] #          Total Solve:      76.5 (s),    6396.9 (MB)
TriangleMesh with 77191 points and 154358 triangles.
EMD: tensor([0.0239], dtype=torch.float64)
Chamfer: tensor([0.0358], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0247]); sim_loss: tensor([0.0251], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51853 / 27870
[Open3D DEBUG] #   Got kernel density: 0.0880520 (s), 6380.14 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] #     Got normal field: 0.153755 (s), 6382.64 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.424703e-05 / 7.387511e-01
[Open3D DEBUG] #       Finalized tree: 1.22213 (s), 6382.67 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.04202 (s), 6382.67 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] #Set point constraints: 0.515293 (s), 6382.67 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 274541 / 313272 / 489
[Open3D DEBUG] Memory Usage: 6382.672 MB
[Open3D DEBUG] # Linear system solved: 10.2197 (s), 6382.9 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] Got average: 0.296029 (s), 6382.9 (MB) / 6396.92 (MB) / 6417 (MB)
[Open3D DEBUG] Iso-Value: 5.059710e-01 = 2.623611e+04 / 5.185300e+04
[Open3D DEBUG] #          Total Solve:      63.9 (s),    6396.9 (MB)
TriangleMesh with 38837 points and 77662 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0253, mean: -0.0330, std: 0.0036
Selected top reward seqs: tensor([-0.0284, -0.0282, -0.0281, -0.0281, -0.0280, -0.0279, -0.0279, -0.0276,
        -0.0273, -0.0271, -0.0269, -0.0268, -0.0268, -0.0265, -0.0262, -0.0262,
        -0.0261, -0.0259, -0.0256, -0.0253])
Batch 0/20:
reward seqs after 11 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 20 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 6 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 17 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 24 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 27 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 6 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 21 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 8 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 7 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Loss: 0.024959489703178406
Optimal set of params:
mid_point: tensor([[0.4284, 0.1400, 0.4784],
        [0.4428, 0.1400, 0.4203]])
angle: tensor([0.1488, 0.4815], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0092, 0.0104], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0329, 0.1400, 0.5376, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0882, 0.1400, 0.6055, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50748 / 43806
[Open3D DEBUG] #   Got kernel density: 0.457723 (s), 6693.84 (MB) / 6693.84 (MB) / 6725 (MB)
[Open3D DEBUG] #     Got normal field: 0.410007 (s), 6698.22 (MB) / 6698.22 (MB) / 6725 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.015914e-05 / 2.545476e+00
[Open3D DEBUG] #       Finalized tree: 1.99612 (s), 6699.17 (MB) / 6699.17 (MB) / 6725 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.35983 (s), 6699.17 (MB) / 6699.17 (MB) / 6725 (MB)
[Open3D DEBUG] #Set point constraints: 1.32455 (s), 6699.17 (MB) / 6699.17 (MB) / 6725 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 552532 / 523576 / 107889
[Open3D DEBUG] Memory Usage: 6699.172 MB
[Open3D DEBUG] # Linear system solved: 16.1913 (s), 6699.51 (MB) / 6699.51 (MB) / 6725 (MB)
[Open3D DEBUG] Got average: 0.418814 (s), 6699.51 (MB) / 6699.51 (MB) / 6725 (MB)
[Open3D DEBUG] Iso-Value: 5.043071e-01 = 2.559258e+04 / 5.074800e+04
[Open3D DEBUG] #          Total Solve:      85.8 (s),    6712.0 (MB)
TriangleMesh with 80167 points and 160254 triangles.
EMD: tensor([0.0343], dtype=torch.float64)
Chamfer: tensor([0.0390], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0250]); sim_loss: tensor([0.0348], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50531 / 39202
[Open3D DEBUG] #   Got kernel density: 0.239737 (s), 6711.18 (MB) / 6711.97 (MB) / 6743 (MB)
[Open3D DEBUG] #     Got normal field: 0.224547 (s), 6715.27 (MB) / 6715.27 (MB) / 6743 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.252427e-05 / 1.643484e+00
[Open3D DEBUG] #       Finalized tree: 1.67582 (s), 6715.91 (MB) / 6715.91 (MB) / 6743 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.16798 (s), 6715.91 (MB) / 6715.91 (MB) / 6743 (MB)
[Open3D DEBUG] #Set point constraints: 1.49245 (s), 6715.91 (MB) / 6715.91 (MB) / 6743 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 491716 / 542856 / 19105
[Open3D DEBUG] Memory Usage: 6715.910 MB
[Open3D DEBUG] # Linear system solved: 14.8136 (s), 6716.0 (MB) / 6716.0 (MB) / 6743 (MB)
[Open3D DEBUG] Got average: 0.390965 (s), 6716.0 (MB) / 6716.0 (MB) / 6743 (MB)
[Open3D DEBUG] Iso-Value: 5.048035e-01 = 2.550823e+04 / 5.053100e+04
[Open3D DEBUG] #          Total Solve:      74.6 (s),    6729.4 (MB)
TriangleMesh with 80818 points and 161640 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0245, mean: -0.0324, std: 0.0036
Selected top reward seqs: tensor([-0.0277, -0.0276, -0.0276, -0.0276, -0.0275, -0.0275, -0.0274, -0.0274,
        -0.0272, -0.0270, -0.0269, -0.0267, -0.0264, -0.0262, -0.0261, -0.0260,
        -0.0256, -0.0255, -0.0252, -0.0245])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 6 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 6 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 5 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 4 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 20 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 30 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Loss: 0.023284493014216423
Optimal set of params:
mid_point: tensor([[0.4321, 0.1400, 0.4269],
        [0.4667, 0.1400, 0.5747]])
angle: tensor([2.9805, 2.0653], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0085, 0.0090], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8269, 0.1400, 0.4910, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6565, 0.1400, 0.9268, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 49355 / 40627
[Open3D DEBUG] #   Got kernel density: 0.248879 (s), 6730.09 (MB) / 6730.09 (MB) / 6762 (MB)
[Open3D DEBUG] #     Got normal field: 0.231919 (s), 6733.62 (MB) / 6733.62 (MB) / 6762 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.135235e-05 / 2.040945e+00
[Open3D DEBUG] #       Finalized tree: 1.73579 (s), 6733.76 (MB) / 6733.76 (MB) / 6762 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.50376 (s), 6733.76 (MB) / 6733.76 (MB) / 6762 (MB)
[Open3D DEBUG] #Set point constraints: 2.06091 (s), 6733.76 (MB) / 6733.76 (MB) / 6762 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 515404 / 530024 / 59009
[Open3D DEBUG] Memory Usage: 6733.758 MB
[Open3D DEBUG] # Linear system solved: 16.0513 (s), 6733.76 (MB) / 6733.76 (MB) / 6762 (MB)
[Open3D DEBUG] Got average: 0.405454 (s), 6733.76 (MB) / 6733.76 (MB) / 6762 (MB)
[Open3D DEBUG] Iso-Value: 5.022131e-01 = 2.478673e+04 / 4.935500e+04
[Open3D DEBUG] #          Total Solve:      86.4 (s),    6734.9 (MB)
TriangleMesh with 81436 points and 162880 triangles.
EMD: tensor([0.0259], dtype=torch.float64)
Chamfer: tensor([0.0360], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0233]); sim_loss: tensor([0.0269], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51190 / 38629
[Open3D DEBUG] #   Got kernel density: 0.273206 (s), 6740.96 (MB) / 6740.96 (MB) / 6772 (MB)
[Open3D DEBUG] #     Got normal field: 0.204299 (s), 6743.38 (MB) / 6743.38 (MB) / 6772 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.977104e-05 / 1.523979e+00
[Open3D DEBUG] #       Finalized tree: 1.56618 (s), 6744.91 (MB) / 6744.91 (MB) / 6772 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.46351 (s), 6744.91 (MB) / 6744.91 (MB) / 6772 (MB)
[Open3D DEBUG] #Set point constraints: 1.50162 (s), 6744.91 (MB) / 6744.91 (MB) / 6772 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 464934 / 518888 / 12465
[Open3D DEBUG] Memory Usage: 6744.910 MB
[Open3D DEBUG] # Linear system solved: 13.7284 (s), 6744.97 (MB) / 6744.97 (MB) / 6772 (MB)
[Open3D DEBUG] Got average: 0.466322 (s), 6744.97 (MB) / 6744.97 (MB) / 6772 (MB)
[Open3D DEBUG] Iso-Value: 5.039567e-01 = 2.579754e+04 / 5.119000e+04
[Open3D DEBUG] #          Total Solve:      75.4 (s),    6754.1 (MB)
TriangleMesh with 76390 points and 152772 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0245, mean: -0.0321, std: 0.0034
Selected top reward seqs: tensor([-0.0276, -0.0276, -0.0276, -0.0275, -0.0275, -0.0273, -0.0273, -0.0273,
        -0.0271, -0.0271, -0.0270, -0.0270, -0.0267, -0.0266, -0.0264, -0.0256,
        -0.0255, -0.0247, -0.0247, -0.0245])
Batch 0/20:
reward seqs after 11 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 30 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 14 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 3 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 23 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 16 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 4 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 7 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 26 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 6 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Loss: 0.02334749884903431
Optimal set of params:
mid_point: tensor([[0.4661, 0.1400, 0.5165],
        [0.5347, 0.1400, 0.4819]])
angle: tensor([1.4565, 2.8539], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0087, 0.0088], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4205, 0.1400, 0.9139, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9183, 0.1400, 0.5954, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 49678 / 38307
[Open3D DEBUG] #   Got kernel density: 0.237194 (s), 6806.15 (MB) / 6806.15 (MB) / 6865 (MB)
[Open3D DEBUG] #     Got normal field: 0.312873 (s), 6809.27 (MB) / 6809.27 (MB) / 6865 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.134933e-05 / 1.557372e+00
[Open3D DEBUG] #       Finalized tree: 1.75469 (s), 6810.71 (MB) / 6810.71 (MB) / 6865 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.2287 (s), 6810.71 (MB) / 6810.71 (MB) / 6865 (MB)
[Open3D DEBUG] #Set point constraints: 1.33005 (s), 6810.71 (MB) / 6810.71 (MB) / 6865 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 463905 / 509768 / 20409
[Open3D DEBUG] Memory Usage: 6810.711 MB
[Open3D DEBUG] # Linear system solved: 13.5124 (s), 6810.71 (MB) / 6810.71 (MB) / 6865 (MB)
[Open3D DEBUG] Got average: 0.400213 (s), 6810.71 (MB) / 6810.71 (MB) / 6865 (MB)
[Open3D DEBUG] Iso-Value: 5.039209e-01 = 2.503378e+04 / 4.967800e+04
[Open3D DEBUG] #          Total Solve:      82.3 (s),    6816.6 (MB)
TriangleMesh with 74945 points and 149874 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0239, mean: -0.0319, std: 0.0038
Selected top reward seqs: tensor([-0.0271, -0.0270, -0.0269, -0.0268, -0.0266, -0.0265, -0.0259, -0.0258,
        -0.0258, -0.0257, -0.0255, -0.0252, -0.0251, -0.0250, -0.0248, -0.0247,
        -0.0245, -0.0242, -0.0240, -0.0239])
Batch 0/20:
reward seqs after 17 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 28 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 24 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 15 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 17 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 22 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 19 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Loss: 0.023463739082217216
Optimal set of params:
mid_point: tensor([[0.5714, 0.1400, 0.4950]])
angle: tensor([2.8371], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0079], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9530, 0.1400, 0.6149, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51038 / 39100
[Open3D DEBUG] #   Got kernel density: 0.43663 (s), 6858.27 (MB) / 6858.27 (MB) / 6891 (MB)
[Open3D DEBUG] #     Got normal field: 0.456041 (s), 6858.97 (MB) / 6858.97 (MB) / 6891 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.981807e-05 / 1.521855e+00
[Open3D DEBUG] #       Finalized tree: 1.37219 (s), 6859.23 (MB) / 6859.23 (MB) / 6891 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.07755 (s), 6859.23 (MB) / 6859.23 (MB) / 6891 (MB)
[Open3D DEBUG] #Set point constraints: 1.85176 (s), 6859.23 (MB) / 6859.23 (MB) / 6891 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 473649 / 530256 / 11057
[Open3D DEBUG] Memory Usage: 6859.227 MB
[Open3D DEBUG] # Linear system solved: 13.3692 (s), 6859.23 (MB) / 6859.23 (MB) / 6891 (MB)
[Open3D DEBUG] Got average: 0.436473 (s), 6859.23 (MB) / 6859.23 (MB) / 6891 (MB)
[Open3D DEBUG] Iso-Value: 5.039426e-01 = 2.572022e+04 / 5.103800e+04
[Open3D DEBUG] #          Total Solve:      74.6 (s),    6862.0 (MB)
TriangleMesh with 78623 points and 157258 triangles.
EMD: tensor([0.0277], dtype=torch.float64)
Chamfer: tensor([0.0383], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0235]); sim_loss: tensor([0.0288], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.0703, 0.1400, 0.7122, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0580, 0.1400, 0.5920, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0247]); Best sim loss: tensor([0.0251], dtype=torch.float64)
Wrote profile results to control.py.lprof
