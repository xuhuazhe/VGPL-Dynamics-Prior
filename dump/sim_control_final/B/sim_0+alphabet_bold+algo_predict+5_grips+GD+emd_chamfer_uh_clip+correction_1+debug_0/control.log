ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.0105159 (s), 4444.1 (MB) / 4444.1 (MB) / 4488 (MB)
[Open3D DEBUG] #     Got normal field: 0.113798 (s), 4445.37 (MB) / 4445.37 (MB) / 4488 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997653e-05 / 9.944915e-01
[Open3D DEBUG] #       Finalized tree: 0.187685 (s), 4445.61 (MB) / 4445.61 (MB) / 4488 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.205816 (s), 4445.61 (MB) / 4445.61 (MB) / 4488 (MB)
[Open3D DEBUG] #Set point constraints: 0.0591249 (s), 4445.61 (MB) / 4445.61 (MB) / 4488 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4445.613 MB
[Open3D DEBUG] # Linear system solved: 0.91121 (s), 4445.61 (MB) / 4445.61 (MB) / 4488 (MB)
[Open3D DEBUG] Got average: 0.00989819 (s), 4445.61 (MB) / 4445.61 (MB) / 4488 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      15.5 (s),    4469.5 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0302, mean: -0.0368, std: 0.0028
Selected top reward seqs: tensor([-0.0334, -0.0334, -0.0333, -0.0332, -0.0330, -0.0328, -0.0327, -0.0324,
        -0.0323, -0.0320, -0.0320, -0.0319, -0.0317, -0.0312, -0.0311, -0.0310,
        -0.0309, -0.0307, -0.0306, -0.0302])
Batch 0/20:
reward seqs after 3 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 28 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 28 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Loss: 0.030038636177778244
Optimal set of params:
mid_point: tensor([[0.4569, 0.1400, 0.5275],
        [0.5481, 0.1400, 0.4485]])
angle: tensor([0.0619, 2.0507], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0100, 0.0075], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0577, 0.1400, 0.5522, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7328, 0.1400, 0.8034, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52313 / 40396
[Open3D DEBUG] #   Got kernel density: 0.0505311 (s), 6251.19 (MB) / 6251.19 (MB) / 6278 (MB)
[Open3D DEBUG] #     Got normal field: 0.180508 (s), 6253.37 (MB) / 6253.37 (MB) / 6278 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.177708e-05 / 1.662355e+00
[Open3D DEBUG] #       Finalized tree: 0.374618 (s), 6253.71 (MB) / 6253.71 (MB) / 6278 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.305510 (s), 6253.71 (MB) / 6253.71 (MB) / 6278 (MB)
[Open3D DEBUG] #Set point constraints: 0.0942841 (s), 6253.71 (MB) / 6253.71 (MB) / 6278 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 500494 / 556624 / 15369
[Open3D DEBUG] Memory Usage: 6253.711 MB
[Open3D DEBUG] # Linear system solved: 1.30014 (s), 6253.76 (MB) / 6253.76 (MB) / 6278 (MB)
[Open3D DEBUG] Got average: 0.0162709 (s), 6253.76 (MB) / 6253.76 (MB) / 6278 (MB)
[Open3D DEBUG] Iso-Value: 5.024857e-01 = 2.628653e+04 / 5.231300e+04
[Open3D DEBUG] #          Total Solve:      14.3 (s),    6266.9 (MB)
TriangleMesh with 82576 points and 165140 triangles.
EMD: tensor([0.0295], dtype=torch.float64)
Chamfer: tensor([0.0415], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0300]); sim_loss: tensor([0.0307], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50806 / 40606
[Open3D DEBUG] #   Got kernel density: 0.0535669 (s), 6276.2 (MB) / 6276.2 (MB) / 6305 (MB)
[Open3D DEBUG] #     Got normal field: 0.182035 (s), 6276.66 (MB) / 6276.66 (MB) / 6305 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.727748e-05 / 1.893920e+00
[Open3D DEBUG] #       Finalized tree: 0.396583 (s), 6277.07 (MB) / 6277.07 (MB) / 6305 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.352082 (s), 6277.07 (MB) / 6277.07 (MB) / 6305 (MB)
[Open3D DEBUG] #Set point constraints: 0.106584 (s), 6277.07 (MB) / 6277.07 (MB) / 6305 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 516349 / 550816 / 39297
[Open3D DEBUG] Memory Usage: 6277.070 MB
[Open3D DEBUG] # Linear system solved: 1.22231 (s), 6277.07 (MB) / 6277.07 (MB) / 6305 (MB)
[Open3D DEBUG] Got average: 0.033144 (s), 6277.07 (MB) / 6277.07 (MB) / 6305 (MB)
[Open3D DEBUG] Iso-Value: 5.019178e-01 = 2.550044e+04 / 5.080600e+04
[Open3D DEBUG] #          Total Solve:      15.4 (s),    6292.7 (MB)
TriangleMesh with 82938 points and 165880 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0303, mean: -0.0364, std: 0.0023
Selected top reward seqs: tensor([-0.0335, -0.0334, -0.0334, -0.0333, -0.0333, -0.0332, -0.0332, -0.0331,
        -0.0330, -0.0329, -0.0329, -0.0327, -0.0327, -0.0324, -0.0322, -0.0320,
        -0.0319, -0.0318, -0.0313, -0.0303])
Batch 0/20:
reward seqs after 23 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 19 iterations: tensor([-0.0322], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0294], grad_fn=<CatBackward>)
Loss: 0.029152046889066696
Optimal set of params:
mid_point: tensor([[0.4769, 0.1400, 0.4202],
        [0.5261, 0.1400, 0.4568]])
angle: tensor([0.8731, 0.4364], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0060, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2200, 0.1400, 0.7267, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1636, 0.1400, 0.6259, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53425 / 28422
[Open3D DEBUG] #   Got kernel density: 0.025286 (s), 6775.12 (MB) / 6775.12 (MB) / 6814 (MB)
[Open3D DEBUG] #     Got normal field: 0.104026 (s), 6776.71 (MB) / 6776.71 (MB) / 6814 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.361240e-05 / 7.272424e-01
[Open3D DEBUG] #       Finalized tree: 0.122709 (s), 6776.71 (MB) / 6776.71 (MB) / 6814 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.178335 (s), 6776.71 (MB) / 6776.71 (MB) / 6814 (MB)
[Open3D DEBUG] #Set point constraints: 0.029969 (s), 6776.71 (MB) / 6776.71 (MB) / 6814 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 278552 / 318024 / 321
[Open3D DEBUG] Memory Usage: 6776.707 MB
[Open3D DEBUG] # Linear system solved: 0.929521 (s), 6776.71 (MB) / 6776.71 (MB) / 6814 (MB)
[Open3D DEBUG] Got average: 0.0213139 (s), 6776.71 (MB) / 6776.71 (MB) / 6814 (MB)
[Open3D DEBUG] Iso-Value: 5.075543e-01 = 2.711609e+04 / 5.342500e+04
[Open3D DEBUG] #          Total Solve:      10.6 (s),    6778.8 (MB)
TriangleMesh with 40512 points and 81012 triangles.
EMD: tensor([0.0303], dtype=torch.float64)
Chamfer: tensor([0.0406], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0292]); sim_loss: tensor([0.0313], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 52736 / 41438
[Open3D DEBUG] #   Got kernel density: 0.039659 (s), 6785.41 (MB) / 6785.41 (MB) / 6824 (MB)
[Open3D DEBUG] #     Got normal field: 0.186727 (s), 6786.15 (MB) / 6786.15 (MB) / 6824 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.401830e-05 / 1.793989e+00
[Open3D DEBUG] #       Finalized tree: 0.403135 (s), 6786.23 (MB) / 6786.23 (MB) / 6824 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.266565 (s), 6786.23 (MB) / 6786.23 (MB) / 6824 (MB)
[Open3D DEBUG] #Set point constraints: 0.116932 (s), 6786.23 (MB) / 6786.23 (MB) / 6824 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 525428 / 575336 / 25153
[Open3D DEBUG] Memory Usage: 6786.234 MB
[Open3D DEBUG] # Linear system solved: 1.40966 (s), 6786.35 (MB) / 6786.35 (MB) / 6824 (MB)
[Open3D DEBUG] Got average: 0.0195301 (s), 6786.35 (MB) / 6786.35 (MB) / 6824 (MB)
[Open3D DEBUG] Iso-Value: 5.035871e-01 = 2.655717e+04 / 5.273600e+04
[Open3D DEBUG] #          Total Solve:      16.8 (s),    6796.1 (MB)
TriangleMesh with 85377 points and 170738 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0314, mean: -0.0368, std: 0.0023
Selected top reward seqs: tensor([-0.0341, -0.0340, -0.0340, -0.0339, -0.0339, -0.0338, -0.0337, -0.0336,
        -0.0335, -0.0335, -0.0333, -0.0332, -0.0330, -0.0330, -0.0330, -0.0328,
        -0.0325, -0.0320, -0.0315, -0.0314])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 14 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0322], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 5 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Loss: 0.03048187866806984
Optimal set of params:
mid_point: tensor([[0.5617, 0.1400, 0.4524],
        [0.5478, 0.1400, 0.5745]])
angle: tensor([1.1892, 0.6973], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0082], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4128, 0.1400, 0.8236, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.1400, 0.8313, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51042 / 42284
[Open3D DEBUG] #   Got kernel density: 0.0478411 (s), 6798.01 (MB) / 6798.01 (MB) / 6836 (MB)
[Open3D DEBUG] #     Got normal field: 0.166749 (s), 6800.09 (MB) / 6800.09 (MB) / 6836 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.489931e-05 / 2.291750e+00
[Open3D DEBUG] #       Finalized tree: 0.410890 (s), 6800.09 (MB) / 6800.09 (MB) / 6836 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.367248 (s), 6800.09 (MB) / 6800.09 (MB) / 6836 (MB)
[Open3D DEBUG] #Set point constraints: 0.139549 (s), 6800.09 (MB) / 6800.09 (MB) / 6836 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 531959 / 523160 / 84793
[Open3D DEBUG] Memory Usage: 6800.086 MB
[Open3D DEBUG] # Linear system solved: 1.61132 (s), 6800.09 (MB) / 6800.09 (MB) / 6836 (MB)
[Open3D DEBUG] Got average: 0.0271108 (s), 6800.09 (MB) / 6800.09 (MB) / 6836 (MB)
[Open3D DEBUG] Iso-Value: 5.054234e-01 = 2.579782e+04 / 5.104200e+04
[Open3D DEBUG] #          Total Solve:      18.0 (s),    6804.3 (MB)
TriangleMesh with 79352 points and 158640 triangles.
EMD: tensor([0.0301], dtype=torch.float64)
Chamfer: tensor([0.0416], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0305]); sim_loss: tensor([0.0313], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51679 / 26662
[Open3D DEBUG] #   Got kernel density: 0.0157139 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] #     Got normal field: 0.0827091 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.311562e-05 / 6.778024e-01
[Open3D DEBUG] #       Finalized tree: 0.15532 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.172191 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] #Set point constraints: 0.036793 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 261199 / 297880 / 633
[Open3D DEBUG] Memory Usage: 6811.582 MB
[Open3D DEBUG] # Linear system solved: 0.855203 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] Got average: 0.0174849 (s), 6811.58 (MB) / 6811.58 (MB) / 6851 (MB)
[Open3D DEBUG] Iso-Value: 5.080920e-01 = 2.625769e+04 / 5.167900e+04
[Open3D DEBUG] #          Total Solve:      12.3 (s),    6812.5 (MB)
TriangleMesh with 38552 points and 77092 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0311, mean: -0.0363, std: 0.0027
Selected top reward seqs: tensor([-0.0328, -0.0328, -0.0327, -0.0326, -0.0325, -0.0325, -0.0325, -0.0325,
        -0.0323, -0.0323, -0.0323, -0.0318, -0.0318, -0.0318, -0.0318, -0.0318,
        -0.0317, -0.0317, -0.0316, -0.0311])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 19 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0322], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 15 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Loss: 0.030904900282621384
Optimal set of params:
mid_point: tensor([[0.4245, 0.1400, 0.4466],
        [0.5559, 0.1400, 0.4244]])
angle: tensor([1.7114, 2.0718], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4805, 0.1400, 0.8427, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7481, 0.1400, 0.7752, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 51629 / 24998
[Open3D DEBUG] #   Got kernel density: 0.0257931 (s), 6880.49 (MB) / 6880.49 (MB) / 6920 (MB)
[Open3D DEBUG] #     Got normal field: 0.0750949 (s), 6881.29 (MB) / 6881.29 (MB) / 6920 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.164023e-05 / 6.009735e-01
[Open3D DEBUG] #       Finalized tree: 0.141688 (s), 6881.29 (MB) / 6881.29 (MB) / 6920 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.17594 (s), 6881.29 (MB) / 6881.29 (MB) / 6920 (MB)
[Open3D DEBUG] #Set point constraints: 0.034493 (s), 6881.29 (MB) / 6881.29 (MB) / 6920 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 242516 / 276768 / 393
[Open3D DEBUG] Memory Usage: 6881.289 MB
[Open3D DEBUG] # Linear system solved: 0.913241 (s), 6881.29 (MB) / 6881.29 (MB) / 6920 (MB)
[Open3D DEBUG] Got average: 0.011291 (s), 6881.29 (MB) / 6881.29 (MB) / 6920 (MB)
[Open3D DEBUG] Iso-Value: 5.088192e-01 = 2.626983e+04 / 5.162900e+04
[Open3D DEBUG] #          Total Solve:      13.4 (s),    6881.7 (MB)
TriangleMesh with 34452 points and 68892 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0290, mean: -0.0342, std: 0.0024
Selected top reward seqs: tensor([-0.0311, -0.0310, -0.0310, -0.0309, -0.0309, -0.0309, -0.0309, -0.0308,
        -0.0305, -0.0304, -0.0304, -0.0303, -0.0303, -0.0301, -0.0300, -0.0298,
        -0.0297, -0.0295, -0.0292, -0.0290])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 5 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 23 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 28 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 12 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 17 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 16 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 17 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Loss: 0.028989795595407486
Optimal set of params:
mid_point: tensor([[0.5781, 0.1400, 0.5470]])
angle: tensor([0.9209], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0078], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3360, 0.1400, 0.8654, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50757 / 41139
[Open3D DEBUG] #   Got kernel density: 0.0548589 (s), 6828.06 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] #     Got normal field: 0.174482 (s), 6829.01 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.996722e-05 / 2.028616e+00
[Open3D DEBUG] #       Finalized tree: 0.394295 (s), 6829.01 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.398207 (s), 6829.01 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] #Set point constraints: 0.153194 (s), 6829.01 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 527248 / 548488 / 54081
[Open3D DEBUG] Memory Usage: 6829.012 MB
[Open3D DEBUG] # Linear system solved: 1.57461 (s), 6829.06 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] Got average: 0.0173299 (s), 6829.06 (MB) / 6881.7 (MB) / 6920 (MB)
[Open3D DEBUG] Iso-Value: 5.031732e-01 = 2.553956e+04 / 5.075700e+04
[Open3D DEBUG] #          Total Solve:      20.4 (s),    6881.7 (MB)
TriangleMesh with 82929 points and 165814 triangles.
EMD: tensor([0.0303], dtype=torch.float64)
Chamfer: tensor([0.0408], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0290]); sim_loss: tensor([0.0313], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.0577, 0.1400, 0.5522, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7328, 0.1400, 0.8034, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0300]); Best sim loss: tensor([0.0307], dtype=torch.float64)
Wrote profile results to control.py.lprof
