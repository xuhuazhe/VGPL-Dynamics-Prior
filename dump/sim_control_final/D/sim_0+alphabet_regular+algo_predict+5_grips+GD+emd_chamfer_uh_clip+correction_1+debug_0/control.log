ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.230217 (s), 4424.03 (MB) / 4424.03 (MB) / 4464 (MB)
[Open3D DEBUG] #     Got normal field: 0.149999 (s), 4429.05 (MB) / 4429.05 (MB) / 4464 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997646e-05 / 9.944879e-01
[Open3D DEBUG] #       Finalized tree: 1.14007 (s), 4431.14 (MB) / 4431.14 (MB) / 4464 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.20091 (s), 4431.14 (MB) / 4431.14 (MB) / 4464 (MB)
[Open3D DEBUG] #Set point constraints: 0.733936 (s), 4431.14 (MB) / 4431.14 (MB) / 4464 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4431.141 MB
[Open3D DEBUG] # Linear system solved: 9.64816 (s), 4431.14 (MB) / 4431.14 (MB) / 4464 (MB)
[Open3D DEBUG] Got average: 0.296108 (s), 4431.14 (MB) / 4431.14 (MB) / 4464 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      68.3 (s),    4449.8 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0214, mean: -0.0288, std: 0.0027
Selected top reward seqs: tensor([-0.0254, -0.0254, -0.0253, -0.0253, -0.0252, -0.0251, -0.0249, -0.0244,
        -0.0243, -0.0242, -0.0240, -0.0240, -0.0239, -0.0237, -0.0235, -0.0233,
        -0.0232, -0.0231, -0.0230, -0.0214])
Batch 0/20:
reward seqs after 4 iterations: tensor([-0.0234], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 21 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0209], grad_fn=<CatBackward>)
Loss: 0.02089608833193779
Optimal set of params:
mid_point: tensor([[0.4241, 0.1400, 0.5740],
        [0.4854, 0.1400, 0.4477]])
angle: tensor([2.6263, 0.4915], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0083], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7721, 0.1400, 0.7711, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1327, 0.1400, 0.6365, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51046 / 40444
[Open3D DEBUG] #   Got kernel density: 0.333016 (s), 6180.57 (MB) / 6180.57 (MB) / 6209 (MB)
[Open3D DEBUG] #     Got normal field: 0.360050 (s), 6188.51 (MB) / 6188.51 (MB) / 6209 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.585622e-05 / 1.830317e+00
[Open3D DEBUG] #       Finalized tree: 1.63818 (s), 6190.34 (MB) / 6190.34 (MB) / 6209 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.28374 (s), 6190.34 (MB) / 6190.34 (MB) / 6209 (MB)
[Open3D DEBUG] #Set point constraints: 1.25093 (s), 6190.34 (MB) / 6190.34 (MB) / 6209 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 509895 / 550376 / 32361
[Open3D DEBUG] Memory Usage: 6190.336 MB
[Open3D DEBUG] # Linear system solved: 13.1043 (s), 6190.83 (MB) / 6190.83 (MB) / 6209 (MB)
[Open3D DEBUG] Got average: 0.33745 (s), 6190.83 (MB) / 6190.83 (MB) / 6209 (MB)
[Open3D DEBUG] Iso-Value: 5.035308e-01 = 2.570323e+04 / 5.104600e+04
[Open3D DEBUG] #          Total Solve:      78.1 (s),    6208.7 (MB)
TriangleMesh with 82437 points and 164870 triangles.
EMD: tensor([0.0249], dtype=torch.float64)
Chamfer: tensor([0.0352], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0209]); sim_loss: tensor([0.0260], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 48917 / 41517
[Open3D DEBUG] #   Got kernel density: 0.357042 (s), 6210.54 (MB) / 6210.54 (MB) / 6241 (MB)
[Open3D DEBUG] #     Got normal field: 0.524706 (s), 6214.3 (MB) / 6214.3 (MB) / 6241 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.133791e-05 / 2.511297e+00
[Open3D DEBUG] #       Finalized tree: 1.72805 (s), 6214.76 (MB) / 6214.76 (MB) / 6241 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.36229 (s), 6214.76 (MB) / 6214.76 (MB) / 6241 (MB)
[Open3D DEBUG] #Set point constraints: 1.85981 (s), 6214.76 (MB) / 6214.76 (MB) / 6241 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 511848 / 472216 / 112753
[Open3D DEBUG] Memory Usage: 6214.758 MB
[Open3D DEBUG] # Linear system solved: 13.228 (s), 6214.8 (MB) / 6214.8 (MB) / 6241 (MB)
[Open3D DEBUG] Got average: 0.313418 (s), 6214.8 (MB) / 6214.8 (MB) / 6241 (MB)
[Open3D DEBUG] Iso-Value: 5.049993e-01 = 2.470305e+04 / 4.891700e+04
[Open3D DEBUG] #          Total Solve:      77.6 (s),    6225.5 (MB)
TriangleMesh with 71765 points and 143429 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0228, mean: -0.0291, std: 0.0028
Selected top reward seqs: tensor([-0.0256, -0.0256, -0.0256, -0.0253, -0.0252, -0.0252, -0.0251, -0.0250,
        -0.0248, -0.0247, -0.0246, -0.0245, -0.0243, -0.0241, -0.0238, -0.0237,
        -0.0235, -0.0232, -0.0231, -0.0228])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 16 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0226], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 17 iterations: tensor([-0.0231], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 15 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0222], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 18 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 6 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 5 iterations: tensor([-0.0228], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0226], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0221], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0218], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0217], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 7 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0216], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0230], grad_fn=<CatBackward>)
Loss: 0.021555688232183456
Optimal set of params:
mid_point: tensor([[0.4354, 0.1400, 0.5477],
        [0.4805, 0.1400, 0.5665]])
angle: tensor([2.3469, 2.7366], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0091, 0.0094], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7156, 0.1400, 0.8332, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8481, 0.1400, 0.7241, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50566 / 40963
[Open3D DEBUG] #   Got kernel density: 0.413827 (s), 6924.82 (MB) / 6924.82 (MB) / 6957 (MB)
[Open3D DEBUG] #     Got normal field: 0.195201 (s), 6926.64 (MB) / 6926.64 (MB) / 6957 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.961585e-05 / 2.003215e+00
[Open3D DEBUG] #       Finalized tree: 1.66489 (s), 6927.25 (MB) / 6927.25 (MB) / 6957 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.34173 (s), 6927.25 (MB) / 6927.25 (MB) / 6957 (MB)
[Open3D DEBUG] #Set point constraints: 0.998064 (s), 6927.25 (MB) / 6927.25 (MB) / 6957 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 519877 / 541064 / 53081
[Open3D DEBUG] Memory Usage: 6927.254 MB
[Open3D DEBUG] # Linear system solved: 13.8462 (s), 6927.25 (MB) / 6927.25 (MB) / 6957 (MB)
[Open3D DEBUG] Got average: 0.354123 (s), 6927.25 (MB) / 6927.25 (MB) / 6957 (MB)
[Open3D DEBUG] Iso-Value: 5.031832e-01 = 2.544396e+04 / 5.056600e+04
[Open3D DEBUG] #          Total Solve:      73.9 (s),    6935.7 (MB)
TriangleMesh with 81460 points and 162904 triangles.
EMD: tensor([0.0230], dtype=torch.float64)
Chamfer: tensor([0.0342], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0216]); sim_loss: tensor([0.0242], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49698 / 42879
[Open3D DEBUG] #   Got kernel density: 0.478463 (s), 6941.29 (MB) / 6941.29 (MB) / 6973 (MB)
[Open3D DEBUG] #     Got normal field: 0.279152 (s), 6943.67 (MB) / 6943.67 (MB) / 6973 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.702506e-05 / 2.834031e+00
[Open3D DEBUG] #       Finalized tree: 1.79953 (s), 6944.62 (MB) / 6944.62 (MB) / 6973 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.39686 (s), 6944.62 (MB) / 6944.62 (MB) / 6973 (MB)
[Open3D DEBUG] #Set point constraints: 1.27663 (s), 6944.62 (MB) / 6944.62 (MB) / 6973 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 542823 / 488528 / 131841
[Open3D DEBUG] Memory Usage: 6944.617 MB
[Open3D DEBUG] # Linear system solved: 13.0633 (s), 6944.95 (MB) / 6944.95 (MB) / 6973 (MB)
[Open3D DEBUG] Got average: 0.374369 (s), 6944.99 (MB) / 6944.99 (MB) / 6973 (MB)
[Open3D DEBUG] Iso-Value: 5.039045e-01 = 2.504305e+04 / 4.969800e+04
[Open3D DEBUG] #          Total Solve:      80.4 (s),    6952.6 (MB)
TriangleMesh with 74690 points and 149218 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0224, mean: -0.0292, std: 0.0026
Selected top reward seqs: tensor([-0.0257, -0.0257, -0.0256, -0.0256, -0.0255, -0.0255, -0.0255, -0.0255,
        -0.0255, -0.0254, -0.0254, -0.0254, -0.0253, -0.0252, -0.0250, -0.0249,
        -0.0243, -0.0241, -0.0241, -0.0224])
Batch 0/20:
reward seqs after 4 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 25 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 4 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 16 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 19 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 6 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 6 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 16 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0229], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0231], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0221], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 7 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0223], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0222], grad_fn=<CatBackward>)
Loss: 0.022076833993196487
Optimal set of params:
mid_point: tensor([[0.4647, 0.1400, 0.4401],
        [0.4776, 0.1400, 0.5578]])
angle: tensor([0.8361, 2.9624], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0094, 0.0094], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1966, 0.1400, 0.7369, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8712, 0.1400, 0.6291, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50338 / 40222
[Open3D DEBUG] #   Got kernel density: 0.219074 (s), 6953.08 (MB) / 6953.08 (MB) / 6985 (MB)
[Open3D DEBUG] #     Got normal field: 0.597845 (s), 6957.23 (MB) / 6957.23 (MB) / 6985 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.583229e-05 / 1.803726e+00
[Open3D DEBUG] #       Finalized tree: 2.74257 (s), 6957.9 (MB) / 6957.9 (MB) / 6985 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.92795 (s), 6957.9 (MB) / 6957.9 (MB) / 6985 (MB)
[Open3D DEBUG] #Set point constraints: 1.25030 (s), 6957.9 (MB) / 6957.9 (MB) / 6985 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 514284 / 557680 / 30073
[Open3D DEBUG] Memory Usage: 6957.898 MB
[Open3D DEBUG] # Linear system solved: 10.7248 (s), 6957.97 (MB) / 6957.97 (MB) / 6985 (MB)
[Open3D DEBUG] Got average: 0.356939 (s), 6958.38 (MB) / 6958.38 (MB) / 6985 (MB)
[Open3D DEBUG] Iso-Value: 5.020894e-01 = 2.527418e+04 / 5.033800e+04
[Open3D DEBUG] #          Total Solve:      73.4 (s),    6967.4 (MB)
TriangleMesh with 84164 points and 168324 triangles.
EMD: tensor([0.0235], dtype=torch.float64)
Chamfer: tensor([0.0341], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0221]); sim_loss: tensor([0.0246], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49852 / 43327
[Open3D DEBUG] #   Got kernel density: 0.514859 (s), 6973.95 (MB) / 6973.95 (MB) / 7005 (MB)
[Open3D DEBUG] #     Got normal field: 0.643995 (s), 6974.52 (MB) / 6974.52 (MB) / 7005 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.492704e-05 / 2.738223e+00
[Open3D DEBUG] #       Finalized tree: 1.70503 (s), 6974.52 (MB) / 6974.52 (MB) / 7005 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.45416 (s), 6974.52 (MB) / 6974.52 (MB) / 7005 (MB)
[Open3D DEBUG] #Set point constraints: 1.15628 (s), 6974.52 (MB) / 6974.52 (MB) / 7005 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 542270 / 491856 / 127881
[Open3D DEBUG] Memory Usage: 6974.523 MB
[Open3D DEBUG] # Linear system solved: 11.9287 (s), 6974.8 (MB) / 6974.8 (MB) / 7005 (MB)
[Open3D DEBUG] Got average: 0.307138 (s), 6974.8 (MB) / 6974.8 (MB) / 7005 (MB)
[Open3D DEBUG] Iso-Value: 5.044098e-01 = 2.514584e+04 / 4.985200e+04
[Open3D DEBUG] #          Total Solve:      79.3 (s),    6981.2 (MB)
TriangleMesh with 75457 points and 150822 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0230, mean: -0.0289, std: 0.0028
Selected top reward seqs: tensor([-0.0255, -0.0254, -0.0253, -0.0253, -0.0252, -0.0252, -0.0252, -0.0251,
        -0.0251, -0.0251, -0.0250, -0.0248, -0.0247, -0.0247, -0.0246, -0.0245,
        -0.0245, -0.0244, -0.0243, -0.0230])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 5 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 4 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0218], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0231], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 7 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0228], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0229], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 22 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 18 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 5 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0226], grad_fn=<CatBackward>)
Loss: 0.021761542186141014
Optimal set of params:
mid_point: tensor([[0.5172, 0.1400, 0.5637],
        [0.5401, 0.1400, 0.5648]])
angle: tensor([0.5952, 1.2035], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0084, 0.0077], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1860, 0.1400, 0.7880, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3964, 0.1400, 0.9381, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50871 / 42045
[Open3D DEBUG] #   Got kernel density: 0.383254 (s), 7113.85 (MB) / 7113.85 (MB) / 7146 (MB)
[Open3D DEBUG] #     Got normal field: 0.237692 (s), 7115.25 (MB) / 7115.25 (MB) / 7146 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.146153e-05 / 2.109190e+00
[Open3D DEBUG] #       Finalized tree: 1.77722 (s), 7115.65 (MB) / 7115.65 (MB) / 7146 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.32045 (s), 7115.65 (MB) / 7115.65 (MB) / 7146 (MB)
[Open3D DEBUG] #Set point constraints: 1.05201 (s), 7115.65 (MB) / 7115.65 (MB) / 7146 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 539085 / 556312 / 59785
[Open3D DEBUG] Memory Usage: 7115.648 MB
[Open3D DEBUG] # Linear system solved: 14.6469 (s), 7115.65 (MB) / 7115.65 (MB) / 7146 (MB)
[Open3D DEBUG] Got average: 0.386275 (s), 7115.65 (MB) / 7115.65 (MB) / 7146 (MB)
[Open3D DEBUG] Iso-Value: 5.021722e-01 = 2.554600e+04 / 5.087100e+04
[Open3D DEBUG] #          Total Solve:      82.1 (s),    7122.8 (MB)
TriangleMesh with 85289 points and 170566 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0221, mean: -0.0280, std: 0.0023
Selected top reward seqs: tensor([-0.0252, -0.0252, -0.0251, -0.0251, -0.0250, -0.0250, -0.0250, -0.0247,
        -0.0246, -0.0246, -0.0245, -0.0245, -0.0245, -0.0244, -0.0242, -0.0239,
        -0.0234, -0.0234, -0.0233, -0.0221])
Batch 0/20:
reward seqs after 6 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 24 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 28 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 15 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 5 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 24 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 16 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 15 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 22 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 27 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 15 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0230], grad_fn=<CatBackward>)
Loss: 0.022969236597418785
Optimal set of params:
mid_point: tensor([[0.4939, 0.1400, 0.5656]])
angle: tensor([2.6281], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0095], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8423, 0.1400, 0.7621, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50533 / 42682
[Open3D DEBUG] #   Got kernel density: 0.394005 (s), 7051.43 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] #     Got normal field: 0.451275 (s), 7052.79 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.503601e-05 / 2.275805e+00
[Open3D DEBUG] #       Finalized tree: 1.60831 (s), 7054.23 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.32526 (s), 7054.23 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] #Set point constraints: 1.35455 (s), 7054.23 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 551650 / 556280 / 74177
[Open3D DEBUG] Memory Usage: 7054.230 MB
[Open3D DEBUG] # Linear system solved: 11.8072 (s), 7054.23 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] Got average: 0.373833 (s), 7054.23 (MB) / 7122.75 (MB) / 7146 (MB)
[Open3D DEBUG] Iso-Value: 5.029300e-01 = 2.541457e+04 / 5.053300e+04
[Open3D DEBUG] #          Total Solve:      78.1 (s),    7122.8 (MB)
TriangleMesh with 86435 points and 172832 triangles.
EMD: tensor([0.0270], dtype=torch.float64)
Chamfer: tensor([0.0356], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0230]); sim_loss: tensor([0.0279], dtype=torch.float64) ===============
torch.Size([3, 11, 14]) torch.Size([3, 40, 12])
Best init pose: tensor([[0.7721, 0.1400, 0.7711, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7156, 0.1400, 0.8332, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8481, 0.1400, 0.7241, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0216]); Best sim loss: tensor([0.0242], dtype=torch.float64)
Wrote profile results to control.py.lprof
