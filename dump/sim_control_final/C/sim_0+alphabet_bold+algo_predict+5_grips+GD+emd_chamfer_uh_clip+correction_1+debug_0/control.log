ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.0786929 (s), 4346.86 (MB) / 4346.86 (MB) / 4382 (MB)
[Open3D DEBUG] #     Got normal field: 0.0799201 (s), 4351.31 (MB) / 4351.31 (MB) / 4382 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997653e-05 / 9.944918e-01
[Open3D DEBUG] #       Finalized tree: 0.650816 (s), 4353.59 (MB) / 4353.59 (MB) / 4382 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.790271 (s), 4353.83 (MB) / 4353.83 (MB) / 4382 (MB)
[Open3D DEBUG] #Set point constraints: 0.269165 (s), 4353.83 (MB) / 4353.83 (MB) / 4382 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4353.832 MB
[Open3D DEBUG] # Linear system solved: 3.41744 (s), 4354.34 (MB) / 4354.34 (MB) / 4382 (MB)
[Open3D DEBUG] Got average: 0.136163 (s), 4354.34 (MB) / 4354.34 (MB) / 4382 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472343e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      24.5 (s),    4367.2 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0394, mean: -0.0515, std: 0.0037
Selected top reward seqs: tensor([-0.0463, -0.0461, -0.0459, -0.0458, -0.0456, -0.0452, -0.0452, -0.0452,
        -0.0450, -0.0449, -0.0448, -0.0446, -0.0445, -0.0441, -0.0436, -0.0423,
        -0.0411, -0.0411, -0.0401, -0.0394])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0470], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 27 iterations: tensor([-0.0388], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0437], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 22 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0412], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 20 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0449], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 3 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 12 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 16 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 8 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Loss: 0.03880169987678528
Optimal set of params:
mid_point: tensor([[0.4150, 0.1400, 0.5065],
        [0.5490, 0.1400, 0.4472]])
angle: tensor([0.0613, 2.0508], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0157, 0.1400, 0.5310, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7337, 0.1400, 0.8020, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52819 / 28860
[Open3D DEBUG] #   Got kernel density: 0.058522 (s), 5944.37 (MB) / 5944.37 (MB) / 5972 (MB)
[Open3D DEBUG] #     Got normal field: 0.0923541 (s), 5952.0 (MB) / 5952.0 (MB) / 5972 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.447429e-05 / 7.645173e-01
[Open3D DEBUG] #       Finalized tree: 0.538109 (s), 5952.29 (MB) / 5952.29 (MB) / 5972 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.830338 (s), 5952.29 (MB) / 5952.29 (MB) / 5972 (MB)
[Open3D DEBUG] #Set point constraints: 0.24377 (s), 5952.29 (MB) / 5952.29 (MB) / 5972 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 289276 / 328992 / 1609
[Open3D DEBUG] Memory Usage: 5952.289 MB
[Open3D DEBUG] # Linear system solved: 2.98964 (s), 5952.54 (MB) / 5952.54 (MB) / 5972 (MB)
[Open3D DEBUG] Got average: 0.0899689 (s), 5952.54 (MB) / 5952.54 (MB) / 5972 (MB)
[Open3D DEBUG] Iso-Value: 5.068841e-01 = 2.677311e+04 / 5.281900e+04
[Open3D DEBUG] #          Total Solve:      23.9 (s),    5956.0 (MB)
TriangleMesh with 42928 points and 85840 triangles.
EMD: tensor([0.0394], dtype=torch.float64)
Chamfer: tensor([0.0457], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0388]); sim_loss: tensor([0.0400], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49409 / 41100
[Open3D DEBUG] #   Got kernel density: 0.17148 (s), 5963.61 (MB) / 5963.61 (MB) / 5994 (MB)
[Open3D DEBUG] #     Got normal field: 0.0987189 (s), 5965.16 (MB) / 5965.16 (MB) / 5994 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.348341e-05 / 2.148472e+00
[Open3D DEBUG] #       Finalized tree: 0.87345 (s), 5965.39 (MB) / 5965.39 (MB) / 5994 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.932159 (s), 5965.39 (MB) / 5965.39 (MB) / 5994 (MB)
[Open3D DEBUG] #Set point constraints: 0.43355 (s), 5965.39 (MB) / 5965.39 (MB) / 5994 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 515880 / 514040 / 75537
[Open3D DEBUG] Memory Usage: 5965.391 MB
[Open3D DEBUG] # Linear system solved: 3.53688 (s), 5966.11 (MB) / 5966.11 (MB) / 5994 (MB)
[Open3D DEBUG] Got average: 0.138028 (s), 5966.11 (MB) / 5966.11 (MB) / 5994 (MB)
[Open3D DEBUG] Iso-Value: 5.027460e-01 = 2.484018e+04 / 4.940900e+04
[Open3D DEBUG] #          Total Solve:      25.9 (s),    5971.3 (MB)
TriangleMesh with 78034 points and 156048 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0393, mean: -0.0485, std: 0.0036
Selected top reward seqs: tensor([-0.0438, -0.0437, -0.0436, -0.0433, -0.0433, -0.0431, -0.0431, -0.0431,
        -0.0430, -0.0428, -0.0423, -0.0422, -0.0422, -0.0421, -0.0420, -0.0420,
        -0.0418, -0.0415, -0.0408, -0.0393])
Batch 0/20:
reward seqs after 27 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 17 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 28 iterations: tensor([-0.0388], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 7 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 16 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Loss: 0.03792370483279228
Optimal set of params:
mid_point: tensor([[0.4221, 0.1400, 0.5633],
        [0.4533, 0.1400, 0.5461]])
angle: tensor([0.3561, 1.5009], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0472, 0.1400, 0.7027, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4254, 0.1400, 0.9451, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52678 / 26018
[Open3D DEBUG] #   Got kernel density: 0.015955 (s), 6045.07 (MB) / 6045.07 (MB) / 6077 (MB)
[Open3D DEBUG] #     Got normal field: 0.103723 (s), 6047.55 (MB) / 6047.55 (MB) / 6077 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.217975e-05 / 6.416050e-01
[Open3D DEBUG] #       Finalized tree: 0.413276 (s), 6047.55 (MB) / 6047.55 (MB) / 6077 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.725907 (s), 6047.55 (MB) / 6047.55 (MB) / 6077 (MB)
[Open3D DEBUG] #Set point constraints: 0.194883 (s), 6047.55 (MB) / 6047.55 (MB) / 6077 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 257300 / 293320 / 737
[Open3D DEBUG] Memory Usage: 6047.547 MB
[Open3D DEBUG] # Linear system solved: 2.62174 (s), 6047.55 (MB) / 6047.55 (MB) / 6077 (MB)
[Open3D DEBUG] Got average: 0.088181 (s), 6047.55 (MB) / 6047.55 (MB) / 6077 (MB)
[Open3D DEBUG] Iso-Value: 5.086286e-01 = 2.679354e+04 / 5.267800e+04
[Open3D DEBUG] #          Total Solve:      23.2 (s),    6051.4 (MB)
TriangleMesh with 37469 points and 74926 triangles.
EMD: tensor([0.0424], dtype=torch.float64)
Chamfer: tensor([0.0447], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0379]); sim_loss: tensor([0.0426], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51150 / 44029
[Open3D DEBUG] #   Got kernel density: 0.173706 (s), 6057.23 (MB) / 6057.23 (MB) / 6089 (MB)
[Open3D DEBUG] #     Got normal field: 0.114458 (s), 6057.57 (MB) / 6057.57 (MB) / 6089 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.041121e-05 / 2.578534e+00
[Open3D DEBUG] #       Finalized tree: 0.864555 (s), 6057.84 (MB) / 6057.84 (MB) / 6089 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.851404 (s), 6057.84 (MB) / 6057.84 (MB) / 6089 (MB)
[Open3D DEBUG] #Set point constraints: 0.437497 (s), 6057.84 (MB) / 6057.84 (MB) / 6089 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 557915 / 529872 / 107745
[Open3D DEBUG] Memory Usage: 6057.836 MB
[Open3D DEBUG] # Linear system solved: 3.893 (s), 6057.84 (MB) / 6057.84 (MB) / 6089 (MB)
[Open3D DEBUG] Got average: 0.112476 (s), 6057.84 (MB) / 6057.84 (MB) / 6089 (MB)
[Open3D DEBUG] Iso-Value: 5.021736e-01 = 2.568618e+04 / 5.115000e+04
[Open3D DEBUG] #          Total Solve:      27.0 (s),    6068.4 (MB)
TriangleMesh with 82463 points and 164844 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0386, mean: -0.0481, std: 0.0041
Selected top reward seqs: tensor([-0.0433, -0.0429, -0.0428, -0.0425, -0.0425, -0.0424, -0.0421, -0.0417,
        -0.0417, -0.0415, -0.0414, -0.0414, -0.0410, -0.0410, -0.0406, -0.0402,
        -0.0400, -0.0393, -0.0388, -0.0386])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 20 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 33 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 8 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 34 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Loss: 0.03518778830766678
Optimal set of params:
mid_point: tensor([[0.5248, 0.1400, 0.5206],
        [0.4252, 0.1400, 0.5624]])
angle: tensor([2.4697, 1.2644], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8378, 0.1400, 0.7696, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3045, 0.1400, 0.9438, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52331 / 45376
[Open3D DEBUG] #   Got kernel density: 0.224337 (s), 6133.83 (MB) / 6133.83 (MB) / 6176 (MB)
[Open3D DEBUG] #     Got normal field: 0.118459 (s), 6138.23 (MB) / 6138.23 (MB) / 6176 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.201094e-05 / 2.721784e+00
[Open3D DEBUG] #       Finalized tree: 0.762328 (s), 6138.24 (MB) / 6138.24 (MB) / 6176 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.915247 (s), 6138.24 (MB) / 6138.24 (MB) / 6176 (MB)
[Open3D DEBUG] #Set point constraints: 0.424010 (s), 6138.24 (MB) / 6138.24 (MB) / 6176 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 601616 / 584816 / 102745
[Open3D DEBUG] Memory Usage: 6138.238 MB
[Open3D DEBUG] # Linear system solved: 4.30011 (s), 6138.49 (MB) / 6138.49 (MB) / 6176 (MB)
[Open3D DEBUG] Got average: 0.143616 (s), 6138.49 (MB) / 6138.49 (MB) / 6176 (MB)
[Open3D DEBUG] Iso-Value: 5.013288e-01 = 2.623504e+04 / 5.233100e+04
[Open3D DEBUG] #          Total Solve:      28.8 (s),    6147.2 (MB)
TriangleMesh with 92534 points and 185028 triangles.
EMD: tensor([0.0651], dtype=torch.float64)
Chamfer: tensor([0.0567], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0352]); sim_loss: tensor([0.0643], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 54226 / 34285
[Open3D DEBUG] #   Got kernel density: 0.072937 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] #     Got normal field: 0.076123 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.856920e-05 / 1.006934e+00
[Open3D DEBUG] #       Finalized tree: 0.639768 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.841409 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] #Set point constraints: 0.294281 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 356126 / 404624 / 2377
[Open3D DEBUG] Memory Usage: 6153.363 MB
[Open3D DEBUG] # Linear system solved: 3.69187 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] Got average: 0.0872030 (s), 6153.36 (MB) / 6153.36 (MB) / 6195 (MB)
[Open3D DEBUG] Iso-Value: 5.059158e-01 = 2.743379e+04 / 5.422600e+04
[Open3D DEBUG] #          Total Solve:      24.3 (s),    6156.2 (MB)
TriangleMesh with 56032 points and 112052 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0396, mean: -0.0486, std: 0.0037
Selected top reward seqs: tensor([-0.0439, -0.0438, -0.0438, -0.0436, -0.0433, -0.0431, -0.0431, -0.0429,
        -0.0428, -0.0427, -0.0424, -0.0423, -0.0420, -0.0418, -0.0416, -0.0410,
        -0.0408, -0.0408, -0.0401, -0.0396])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 27 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 20 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 4 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 4 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0388], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Loss: 0.038126781582832336
Optimal set of params:
mid_point: tensor([[0.4401, 0.1400, 0.4310],
        [0.4529, 0.1400, 0.5412]])
angle: tensor([2.5961, 0.5106], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0106, 0.0101], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7820, 0.1400, 0.6386, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1039, 0.1400, 0.7367, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52298 / 45512
[Open3D DEBUG] #   Got kernel density: 0.18177 (s), 6254.39 (MB) / 6254.39 (MB) / 6286 (MB)
[Open3D DEBUG] #     Got normal field: 0.125426 (s), 6258.06 (MB) / 6258.06 (MB) / 6286 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.170683e-05 / 2.704164e+00
[Open3D DEBUG] #       Finalized tree: 0.948631 (s), 6258.21 (MB) / 6258.21 (MB) / 6286 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.841228 (s), 6258.21 (MB) / 6258.21 (MB) / 6286 (MB)
[Open3D DEBUG] #Set point constraints: 0.450671 (s), 6258.21 (MB) / 6258.21 (MB) / 6286 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 584655 / 557560 / 110617
[Open3D DEBUG] Memory Usage: 6258.211 MB
[Open3D DEBUG] # Linear system solved: 4.16926 (s), 6258.21 (MB) / 6258.21 (MB) / 6286 (MB)
[Open3D DEBUG] Got average: 0.120292 (s), 6258.21 (MB) / 6258.21 (MB) / 6286 (MB)
[Open3D DEBUG] Iso-Value: 5.026029e-01 = 2.628513e+04 / 5.229800e+04
[Open3D DEBUG] #          Total Solve:      27.9 (s),    6264.1 (MB)
TriangleMesh with 87571 points and 175114 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0340, mean: -0.0424, std: 0.0044
Selected top reward seqs: tensor([-0.0367, -0.0367, -0.0364, -0.0357, -0.0357, -0.0355, -0.0353, -0.0353,
        -0.0352, -0.0351, -0.0351, -0.0349, -0.0348, -0.0348, -0.0347, -0.0347,
        -0.0346, -0.0341, -0.0341, -0.0340])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 6 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 5 iterations: tensor([-0.0342], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 5 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 27 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 5 iterations: tensor([-0.0340], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 1 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 1 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 18 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Loss: 0.03389090299606323
Optimal set of params:
mid_point: tensor([[0.5028, 0.1400, 0.5711]])
angle: tensor([0.5035], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0088], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1525, 0.1400, 0.7641, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 54678 / 45877
[Open3D DEBUG] #   Got kernel density: 0.17719 (s), 6210.48 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] #     Got normal field: 0.122183 (s), 6213.01 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.139632e-05 / 2.263468e+00
[Open3D DEBUG] #       Finalized tree: 0.855123 (s), 6213.15 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.861346 (s), 6213.15 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] #Set point constraints: 0.450974 (s), 6213.15 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 596982 / 626576 / 55689
[Open3D DEBUG] Memory Usage: 6213.148 MB
[Open3D DEBUG] # Linear system solved: 4.32467 (s), 6213.15 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] Got average: 0.109519 (s), 6213.15 (MB) / 6264.12 (MB) / 6286 (MB)
[Open3D DEBUG] Iso-Value: 5.022795e-01 = 2.746364e+04 / 5.467800e+04
[Open3D DEBUG] #          Total Solve:      29.0 (s),    6264.1 (MB)
TriangleMesh with 96489 points and 192966 triangles.
EMD: tensor([0.0383], dtype=torch.float64)
Chamfer: tensor([0.0440], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0339]); sim_loss: tensor([0.0389], dtype=torch.float64) ===============
torch.Size([5, 11, 14]) torch.Size([5, 40, 12])
Best init pose: tensor([[0.0157, 0.1400, 0.5310, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0472, 0.1400, 0.7027, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8378, 0.1400, 0.7696, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7820, 0.1400, 0.6386, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1525, 0.1400, 0.7641, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0339]); Best sim loss: tensor([0.0389], dtype=torch.float64)
Wrote profile results to control.py.lprof
