ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49784 / 31796
[Open3D DEBUG] #   Got kernel density: 0.0115161 (s), 5163.99 (MB) / 5163.99 (MB) / 5206 (MB)
[Open3D DEBUG] #     Got normal field: 0.0875649 (s), 5168.87 (MB) / 5168.87 (MB) / 5206 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.980667e-05 / 9.860554e-01
[Open3D DEBUG] #       Finalized tree: 0.0852551 (s), 5171.63 (MB) / 5171.63 (MB) / 5206 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.366128 (s), 5171.63 (MB) / 5171.63 (MB) / 5206 (MB)
[Open3D DEBUG] #Set point constraints: 0.0382352 (s), 5171.63 (MB) / 5171.63 (MB) / 5206 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336449 / 382056 / 2457
[Open3D DEBUG] Memory Usage: 5171.629 MB
[Open3D DEBUG] # Linear system solved: 4.18095 (s), 5171.63 (MB) / 5171.63 (MB) / 5206 (MB)
[Open3D DEBUG] Got average: 0.017554 (s), 5171.84 (MB) / 5171.84 (MB) / 5206 (MB)
[Open3D DEBUG] Iso-Value: 4.985178e-01 = 2.481821e+04 / 4.978400e+04
[Open3D DEBUG] #          Total Solve:       7.4 (s),    5188.6 (MB)
TriangleMesh with 50977 points and 101942 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0414, mean: -0.0535, std: 0.0037
Selected top reward seqs: tensor([-0.0479, -0.0477, -0.0477, -0.0477, -0.0476, -0.0474, -0.0474, -0.0473,
        -0.0468, -0.0468, -0.0466, -0.0464, -0.0457, -0.0456, -0.0454, -0.0454,
        -0.0449, -0.0448, -0.0436, -0.0414])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0488], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 24 iterations: tensor([-0.0476], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 20 iterations: tensor([-0.0478], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0485], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 6 iterations: tensor([-0.0493], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 31 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 17 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 20 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0458], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0458], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 4 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Loss: 0.0420166477560997
Optimal set of params:
mid_point: tensor([[0.5527, 0.1400, 0.4692],
        [0.5108, 0.1400, 0.4250]])
angle: tensor([1.1780, 1.4624], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3996, 0.1400, 0.8387, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4675, 0.1400, 0.8227, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50663 / 42581
[Open3D DEBUG] #   Got kernel density: 0.0260930 (s), 6407.68 (MB) / 6407.68 (MB) / 6446 (MB)
[Open3D DEBUG] #     Got normal field: 0.112072 (s), 6407.71 (MB) / 6407.71 (MB) / 6446 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.572777e-05 / 2.316706e+00
[Open3D DEBUG] #       Finalized tree: 0.120616 (s), 6408.25 (MB) / 6408.25 (MB) / 6446 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.494476 (s), 6408.25 (MB) / 6408.25 (MB) / 6446 (MB)
[Open3D DEBUG] #Set point constraints: 0.056582 (s), 6408.25 (MB) / 6408.25 (MB) / 6446 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 542900 / 539216 / 81241
[Open3D DEBUG] Memory Usage: 6408.250 MB
[Open3D DEBUG] # Linear system solved: 5.29454 (s), 6408.25 (MB) / 6408.25 (MB) / 6446 (MB)
[Open3D DEBUG] Got average: 0.0252669 (s), 6408.25 (MB) / 6408.25 (MB) / 6446 (MB)
[Open3D DEBUG] Iso-Value: 5.017267e-01 = 2.541898e+04 / 5.066300e+04
[Open3D DEBUG] #          Total Solve:       9.4 (s),    6422.6 (MB)
TriangleMesh with 83655 points and 167286 triangles.
EMD: tensor([0.0437], dtype=torch.float64)
Chamfer: tensor([0.0437], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0420]); sim_loss: tensor([0.0437], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50386 / 43182
[Open3D DEBUG] #   Got kernel density: 0.0380609 (s), 6436.7 (MB) / 6436.7 (MB) / 6475 (MB)
[Open3D DEBUG] #     Got normal field: 0.120538 (s), 6436.72 (MB) / 6436.72 (MB) / 6475 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.006393e-05 / 2.522521e+00
[Open3D DEBUG] #       Finalized tree: 0.127912 (s), 6436.72 (MB) / 6436.72 (MB) / 6475 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.452206 (s), 6436.72 (MB) / 6436.72 (MB) / 6475 (MB)
[Open3D DEBUG] #Set point constraints: 0.0559151 (s), 6436.72 (MB) / 6436.72 (MB) / 6475 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 542193 / 512888 / 106761
[Open3D DEBUG] Memory Usage: 6436.723 MB
[Open3D DEBUG] # Linear system solved: 4.83984 (s), 6436.84 (MB) / 6436.84 (MB) / 6475 (MB)
[Open3D DEBUG] Got average: 0.024972 (s), 6436.84 (MB) / 6436.84 (MB) / 6475 (MB)
[Open3D DEBUG] Iso-Value: 5.029135e-01 = 2.533980e+04 / 5.038600e+04
[Open3D DEBUG] #          Total Solve:       8.8 (s),    6447.2 (MB)
TriangleMesh with 79047 points and 158034 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0389, mean: -0.0494, std: 0.0044
Selected top reward seqs: tensor([-0.0431, -0.0431, -0.0431, -0.0431, -0.0429, -0.0428, -0.0427, -0.0425,
        -0.0424, -0.0424, -0.0422, -0.0421, -0.0418, -0.0415, -0.0411, -0.0406,
        -0.0402, -0.0401, -0.0399, -0.0389])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 15 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 5 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 13 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 14 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 7 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 6 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 32 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 17 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 6 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Loss: 0.038623880594968796
Optimal set of params:
mid_point: tensor([[0.5133, 0.1400, 0.4527],
        [0.4594, 0.1400, 0.4310]])
angle: tensor([1.3824, 1.9306], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4384, 0.1400, 0.8457, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6002, 0.1400, 0.8054, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50675 / 43424
[Open3D DEBUG] #   Got kernel density: 0.036624 (s), 6452.57 (MB) / 6452.57 (MB) / 6492 (MB)
[Open3D DEBUG] #     Got normal field: 0.124546 (s), 6452.57 (MB) / 6452.57 (MB) / 6492 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.904103e-05 / 2.485154e+00
[Open3D DEBUG] #       Finalized tree: 0.1262 (s), 6452.76 (MB) / 6452.76 (MB) / 6492 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.500487 (s), 6452.76 (MB) / 6452.76 (MB) / 6492 (MB)
[Open3D DEBUG] #Set point constraints: 0.0591519 (s), 6452.76 (MB) / 6452.76 (MB) / 6492 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 561002 / 546832 / 94313
[Open3D DEBUG] Memory Usage: 6452.758 MB
[Open3D DEBUG] # Linear system solved: 5.06294 (s), 6452.76 (MB) / 6452.76 (MB) / 6492 (MB)
[Open3D DEBUG] Got average: 0.0273709 (s), 6452.76 (MB) / 6452.76 (MB) / 6492 (MB)
[Open3D DEBUG] Iso-Value: 5.022484e-01 = 2.545144e+04 / 5.067500e+04
[Open3D DEBUG] #          Total Solve:       9.2 (s),    6463.6 (MB)
TriangleMesh with 85160 points and 170262 triangles.
EMD: tensor([0.0382], dtype=torch.float64)
Chamfer: tensor([0.0415], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0386]); sim_loss: tensor([0.0386], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 52332 / 25818
[Open3D DEBUG] #   Got kernel density: 0.0107222 (s), 6474.26 (MB) / 6474.26 (MB) / 6514 (MB)
[Open3D DEBUG] #     Got normal field: 0.0556729 (s), 6474.26 (MB) / 6474.26 (MB) / 6514 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.205810e-05 / 6.310245e-01
[Open3D DEBUG] #       Finalized tree: 0.0574892 (s), 6474.26 (MB) / 6474.26 (MB) / 6514 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.261452 (s), 6474.26 (MB) / 6474.26 (MB) / 6514 (MB)
[Open3D DEBUG] #Set point constraints: 0.0252838 (s), 6474.26 (MB) / 6474.26 (MB) / 6514 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 254255 / 290184 / 393
[Open3D DEBUG] Memory Usage: 6474.262 MB
[Open3D DEBUG] # Linear system solved: 3.23013 (s), 6474.37 (MB) / 6474.37 (MB) / 6514 (MB)
[Open3D DEBUG] Got average: 0.0141239 (s), 6474.37 (MB) / 6474.37 (MB) / 6514 (MB)
[Open3D DEBUG] Iso-Value: 5.070695e-01 = 2.653596e+04 / 5.233200e+04
[Open3D DEBUG] #          Total Solve:       5.8 (s),    6477.6 (MB)
TriangleMesh with 36447 points and 72882 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0378, mean: -0.0487, std: 0.0050
Selected top reward seqs: tensor([-0.0419, -0.0419, -0.0419, -0.0417, -0.0415, -0.0411, -0.0410, -0.0409,
        -0.0408, -0.0407, -0.0406, -0.0406, -0.0406, -0.0401, -0.0401, -0.0400,
        -0.0399, -0.0395, -0.0392, -0.0378])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 28 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 16 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 20 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 26 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 14 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Loss: 0.03670996427536011
Optimal set of params:
mid_point: tensor([[0.4889, 0.1400, 0.4263],
        [0.4408, 0.1400, 0.4448]])
angle: tensor([1.7740, 2.1591], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5696, 0.1400, 0.8181, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6628, 0.1400, 0.7776, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53761 / 31658
[Open3D DEBUG] #   Got kernel density: 0.0103152 (s), 6479.29 (MB) / 6479.29 (MB) / 6545 (MB)
[Open3D DEBUG] #     Got normal field: 0.0726559 (s), 6479.46 (MB) / 6479.46 (MB) / 6545 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.657969e-05 / 8.913405e-01
[Open3D DEBUG] #       Finalized tree: 0.0732379 (s), 6479.55 (MB) / 6479.55 (MB) / 6545 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.335999 (s), 6479.55 (MB) / 6479.55 (MB) / 6545 (MB)
[Open3D DEBUG] #Set point constraints: 0.035465 (s), 6479.55 (MB) / 6479.55 (MB) / 6545 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 325228 / 369704 / 1985
[Open3D DEBUG] Memory Usage: 6479.555 MB
[Open3D DEBUG] # Linear system solved: 3.61273 (s), 6479.92 (MB) / 6479.92 (MB) / 6545 (MB)
[Open3D DEBUG] Got average: 0.016783 (s), 6479.92 (MB) / 6479.92 (MB) / 6545 (MB)
[Open3D DEBUG] Iso-Value: 5.028545e-01 = 2.703396e+04 / 5.376100e+04
[Open3D DEBUG] #          Total Solve:       6.6 (s),    6481.8 (MB)
TriangleMesh with 50021 points and 100026 triangles.
EMD: tensor([0.0374], dtype=torch.float64)
Chamfer: tensor([0.0423], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0367]); sim_loss: tensor([0.0379], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50708 / 42916
[Open3D DEBUG] #   Got kernel density: 0.0318098 (s), 6547.0 (MB) / 6547.0 (MB) / 6579 (MB)
[Open3D DEBUG] #     Got normal field: 0.121424 (s), 6548.16 (MB) / 6548.16 (MB) / 6579 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.646721e-05 / 2.356259e+00
[Open3D DEBUG] #       Finalized tree: 0.122295 (s), 6548.18 (MB) / 6548.18 (MB) / 6579 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.511408 (s), 6548.18 (MB) / 6548.18 (MB) / 6579 (MB)
[Open3D DEBUG] #Set point constraints: 0.0642951 (s), 6548.25 (MB) / 6548.25 (MB) / 6579 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 549088 / 545448 / 82081
[Open3D DEBUG] Memory Usage: 6548.254 MB
[Open3D DEBUG] # Linear system solved: 5.15405 (s), 6548.49 (MB) / 6548.49 (MB) / 6579 (MB)
[Open3D DEBUG] Got average: 0.0267489 (s), 6548.49 (MB) / 6548.49 (MB) / 6579 (MB)
[Open3D DEBUG] Iso-Value: 5.017584e-01 = 2.544316e+04 / 5.070800e+04
[Open3D DEBUG] #          Total Solve:       9.3 (s),    6558.3 (MB)
TriangleMesh with 84717 points and 169368 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0408, mean: -0.0497, std: 0.0039
Selected top reward seqs: tensor([-0.0443, -0.0442, -0.0442, -0.0441, -0.0440, -0.0439, -0.0439, -0.0439,
        -0.0439, -0.0438, -0.0435, -0.0431, -0.0430, -0.0430, -0.0427, -0.0426,
        -0.0425, -0.0418, -0.0411, -0.0408])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 21 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 22 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 3 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 5 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 4 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 17 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 17 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Loss: 0.040334343910217285
Optimal set of params:
mid_point: tensor([[0.4312, 0.1400, 0.5166],
        [0.4220, 0.1400, 0.4434]])
angle: tensor([1.3970, 2.0945], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0096, 0.0098], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3620, 0.1400, 0.9105, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6221, 0.1400, 0.7898, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52869 / 43356
[Open3D DEBUG] #   Got kernel density: 0.0230711 (s), 6782.45 (MB) / 6782.45 (MB) / 6814 (MB)
[Open3D DEBUG] #     Got normal field: 0.127185 (s), 6782.45 (MB) / 6782.45 (MB) / 6814 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.938031e-05 / 2.081998e+00
[Open3D DEBUG] #       Finalized tree: 0.134297 (s), 6782.56 (MB) / 6782.56 (MB) / 6814 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.526242 (s), 6782.56 (MB) / 6782.56 (MB) / 6814 (MB)
[Open3D DEBUG] #Set point constraints: 0.0616961 (s), 6782.56 (MB) / 6782.56 (MB) / 6814 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 554443 / 586320 / 47329
[Open3D DEBUG] Memory Usage: 6782.562 MB
[Open3D DEBUG] # Linear system solved: 5.52903 (s), 6782.56 (MB) / 6782.56 (MB) / 6814 (MB)
[Open3D DEBUG] Got average: 0.0267642 (s), 6782.56 (MB) / 6782.56 (MB) / 6814 (MB)
[Open3D DEBUG] Iso-Value: 5.026456e-01 = 2.657437e+04 / 5.286900e+04
[Open3D DEBUG] #          Total Solve:       9.9 (s),    6789.2 (MB)
TriangleMesh with 89655 points and 179302 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0352, mean: -0.0431, std: 0.0046
Selected top reward seqs: tensor([-0.0377, -0.0374, -0.0374, -0.0373, -0.0373, -0.0372, -0.0372, -0.0371,
        -0.0369, -0.0369, -0.0368, -0.0367, -0.0367, -0.0367, -0.0365, -0.0365,
        -0.0364, -0.0363, -0.0354, -0.0352])
Batch 0/20:
reward seqs after 4 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 26 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 27 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 19 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 14 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 15 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 3 iterations: tensor([-0.0359], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0357], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Loss: 0.035273727029561996
Optimal set of params:
mid_point: tensor([[0.4227, 0.1400, 0.5752]])
angle: tensor([1.4732], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0097], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3837, 0.1400, 0.9733, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53230 / 44123
[Open3D DEBUG] #   Got kernel density: 0.024272 (s), 6720.37 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] #     Got normal field: 0.124675 (s), 6720.37 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.044355e-05 / 2.152810e+00
[Open3D DEBUG] #       Finalized tree: 0.146087 (s), 6720.57 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.498199 (s), 6720.57 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] #Set point constraints: 0.0575681 (s), 6720.57 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 559322 / 585888 / 53337
[Open3D DEBUG] Memory Usage: 6720.566 MB
[Open3D DEBUG] # Linear system solved: 5.09841 (s), 6720.57 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] Got average: 0.026381 (s), 6720.57 (MB) / 6789.24 (MB) / 6814 (MB)
[Open3D DEBUG] Iso-Value: 5.029615e-01 = 2.677264e+04 / 5.323000e+04
[Open3D DEBUG] #          Total Solve:       9.3 (s),    6789.2 (MB)
TriangleMesh with 91158 points and 182304 triangles.
EMD: tensor([0.0492], dtype=torch.float64)
Chamfer: tensor([0.0501], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0353]); sim_loss: tensor([0.0493], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.3996, 0.1400, 0.8387, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4384, 0.1400, 0.8457, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5696, 0.1400, 0.8181, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6628, 0.1400, 0.7776, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0367]); Best sim loss: tensor([0.0379], dtype=torch.float64)
Wrote profile results to control.py.lprof
