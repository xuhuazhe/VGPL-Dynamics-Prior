ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.229391 (s), 4438.84 (MB) / 4438.84 (MB) / 4487 (MB)
[Open3D DEBUG] #     Got normal field: 0.258049 (s), 4449.11 (MB) / 4449.11 (MB) / 4487 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997652e-05 / 9.944910e-01
[Open3D DEBUG] #       Finalized tree: 1.12894 (s), 4450.07 (MB) / 4450.07 (MB) / 4487 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.12807 (s), 4450.07 (MB) / 4450.07 (MB) / 4487 (MB)
[Open3D DEBUG] #Set point constraints: 0.614452 (s), 4450.07 (MB) / 4450.07 (MB) / 4487 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4450.074 MB
[Open3D DEBUG] # Linear system solved: 8.27921 (s), 4450.33 (MB) / 4450.33 (MB) / 4487 (MB)
[Open3D DEBUG] Got average: 0.313621 (s), 4450.33 (MB) / 4450.33 (MB) / 4487 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      63.1 (s),    4465.9 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0268, mean: -0.0319, std: 0.0023
Selected top reward seqs: tensor([-0.0291, -0.0290, -0.0289, -0.0289, -0.0289, -0.0288, -0.0287, -0.0286,
        -0.0284, -0.0282, -0.0282, -0.0281, -0.0280, -0.0276, -0.0274, -0.0274,
        -0.0274, -0.0271, -0.0269, -0.0268])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 20 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 15 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 21 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 22 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 4 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 14 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 12 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 18 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Loss: 0.024883130565285683
Optimal set of params:
mid_point: tensor([[0.4209, 0.1400, 0.4458],
        [0.5243, 0.1400, 0.4559]])
angle: tensor([1.7239, 2.2374], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0089, 0.0087], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4819, 0.1400, 0.8411, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7716, 0.1400, 0.7702, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50823 / 42517
[Open3D DEBUG] #   Got kernel density: 0.495683 (s), 6319.95 (MB) / 6319.95 (MB) / 6349 (MB)
[Open3D DEBUG] #     Got normal field: 0.312245 (s), 6329.79 (MB) / 6329.79 (MB) / 6349 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.582456e-05 / 2.328941e+00
[Open3D DEBUG] #       Finalized tree: 2.18391 (s), 6330.71 (MB) / 6330.71 (MB) / 6349 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.56917 (s), 6330.71 (MB) / 6330.71 (MB) / 6349 (MB)
[Open3D DEBUG] #Set point constraints: 1.48263 (s), 6330.71 (MB) / 6330.71 (MB) / 6349 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 530083 / 514104 / 91705
[Open3D DEBUG] Memory Usage: 6330.715 MB
[Open3D DEBUG] # Linear system solved: 11.2522 (s), 6330.71 (MB) / 6330.71 (MB) / 6349 (MB)
[Open3D DEBUG] Got average: 0.309906 (s), 6330.81 (MB) / 6330.81 (MB) / 6349 (MB)
[Open3D DEBUG] Iso-Value: 5.047440e-01 = 2.565260e+04 / 5.082300e+04
[Open3D DEBUG] #          Total Solve:      82.8 (s),    6338.3 (MB)
TriangleMesh with 78257 points and 156450 triangles.
EMD: tensor([0.0270], dtype=torch.float64)
Chamfer: tensor([0.0363], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0249]); sim_loss: tensor([0.0280], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50598 / 38257
[Open3D DEBUG] #   Got kernel density: 0.387859 (s), 6344.38 (MB) / 6344.38 (MB) / 6376 (MB)
[Open3D DEBUG] #     Got normal field: 0.415785 (s), 6347.99 (MB) / 6347.99 (MB) / 6376 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.083369e-05 / 1.560123e+00
[Open3D DEBUG] #       Finalized tree: 1.41534 (s), 6348.66 (MB) / 6348.66 (MB) / 6376 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.27291 (s), 6348.66 (MB) / 6348.66 (MB) / 6376 (MB)
[Open3D DEBUG] #Set point constraints: 1.6264 (s), 6348.66 (MB) / 6348.66 (MB) / 6376 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 464577 / 516856 / 14089
[Open3D DEBUG] Memory Usage: 6348.664 MB
[Open3D DEBUG] # Linear system solved: 12.2825 (s), 6348.8 (MB) / 6348.8 (MB) / 6376 (MB)
[Open3D DEBUG] Got average: 0.28477 (s), 6348.8 (MB) / 6348.8 (MB) / 6376 (MB)
[Open3D DEBUG] Iso-Value: 5.029436e-01 = 2.544794e+04 / 5.059800e+04
[Open3D DEBUG] #          Total Solve:      77.0 (s),    6357.7 (MB)
TriangleMesh with 75961 points and 151922 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0256, mean: -0.0317, std: 0.0022
Selected top reward seqs: tensor([-0.0289, -0.0287, -0.0285, -0.0285, -0.0285, -0.0285, -0.0285, -0.0284,
        -0.0284, -0.0284, -0.0283, -0.0282, -0.0282, -0.0279, -0.0278, -0.0276,
        -0.0274, -0.0270, -0.0270, -0.0256])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 7 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 23 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 15 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 4 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 4 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Loss: 0.0248604454100132
Optimal set of params:
mid_point: tensor([[0.5361, 0.1400, 0.4968],
        [0.4531, 0.1400, 0.5782]])
angle: tensor([1.7481, 2.8278], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0012, 0.0086], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6066, 0.1400, 0.8905, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8336, 0.1400, 0.7017, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50703 / 39072
[Open3D DEBUG] #   Got kernel density: 0.230481 (s), 6619.12 (MB) / 6619.12 (MB) / 6651 (MB)
[Open3D DEBUG] #     Got normal field: 0.58885 (s), 6623.29 (MB) / 6623.29 (MB) / 6651 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.243110e-05 / 1.644354e+00
[Open3D DEBUG] #       Finalized tree: 1.54151 (s), 6623.38 (MB) / 6623.38 (MB) / 6651 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.28001 (s), 6623.38 (MB) / 6623.38 (MB) / 6651 (MB)
[Open3D DEBUG] #Set point constraints: 1.45728 (s), 6623.38 (MB) / 6623.38 (MB) / 6651 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 496119 / 550632 / 16361
[Open3D DEBUG] Memory Usage: 6623.379 MB
[Open3D DEBUG] # Linear system solved: 12.581 (s), 6623.76 (MB) / 6623.76 (MB) / 6651 (MB)
[Open3D DEBUG] Got average: 0.389641 (s), 6623.76 (MB) / 6623.76 (MB) / 6651 (MB)
[Open3D DEBUG] Iso-Value: 5.018941e-01 = 2.544753e+04 / 5.070300e+04
[Open3D DEBUG] #          Total Solve:      74.8 (s),    6635.8 (MB)
TriangleMesh with 80580 points and 161148 triangles.
EMD: tensor([0.0271], dtype=torch.float64)
Chamfer: tensor([0.0358], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0249]); sim_loss: tensor([0.0280], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50835 / 26120
[Open3D DEBUG] #   Got kernel density: 0.112198 (s), 6641.77 (MB) / 6641.77 (MB) / 6673 (MB)
[Open3D DEBUG] #     Got normal field: 0.064796 (s), 6642.81 (MB) / 6642.81 (MB) / 6673 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.303978e-05 / 6.628771e-01
[Open3D DEBUG] #       Finalized tree: 0.840691 (s), 6642.81 (MB) / 6642.81 (MB) / 6673 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.81089 (s), 6642.81 (MB) / 6642.81 (MB) / 6673 (MB)
[Open3D DEBUG] #Set point constraints: 0.404417 (s), 6642.81 (MB) / 6642.81 (MB) / 6673 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 254227 / 289960 / 585
[Open3D DEBUG] Memory Usage: 6642.812 MB
[Open3D DEBUG] # Linear system solved: 7.43069 (s), 6642.86 (MB) / 6642.86 (MB) / 6673 (MB)
[Open3D DEBUG] Got average: 0.199886 (s), 6642.86 (MB) / 6642.86 (MB) / 6673 (MB)
[Open3D DEBUG] Iso-Value: 5.058564e-01 = 2.571521e+04 / 5.083500e+04
[Open3D DEBUG] #          Total Solve:      58.9 (s),    6646.1 (MB)
TriangleMesh with 36992 points and 73972 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0261, mean: -0.0320, std: 0.0021
Selected top reward seqs: tensor([-0.0294, -0.0293, -0.0292, -0.0292, -0.0292, -0.0291, -0.0290, -0.0289,
        -0.0287, -0.0287, -0.0286, -0.0285, -0.0285, -0.0284, -0.0283, -0.0277,
        -0.0269, -0.0265, -0.0264, -0.0261])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 7 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 5 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 18 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 19 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 23 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Loss: 0.02500087581574917
Optimal set of params:
mid_point: tensor([[0.4437, 0.1400, 0.5362],
        [0.4932, 0.1400, 0.5576]])
angle: tensor([2.6209, 0.6241], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0078, 0.0039], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7907, 0.1400, 0.7352, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1686, 0.1400, 0.7914, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51515 / 35936
[Open3D DEBUG] #   Got kernel density: 0.363937 (s), 6837.24 (MB) / 6837.24 (MB) / 6874 (MB)
[Open3D DEBUG] #     Got normal field: 0.272042 (s), 6841.21 (MB) / 6841.21 (MB) / 6874 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.341362e-05 / 1.206153e+00
[Open3D DEBUG] #       Finalized tree: 1.26781 (s), 6841.21 (MB) / 6841.21 (MB) / 6874 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.42576 (s), 6841.21 (MB) / 6841.21 (MB) / 6874 (MB)
[Open3D DEBUG] #Set point constraints: 0.749662 (s), 6841.21 (MB) / 6841.21 (MB) / 6874 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 401507 / 455080 / 3785
[Open3D DEBUG] Memory Usage: 6841.215 MB
[Open3D DEBUG] # Linear system solved: 10.1279 (s), 6841.21 (MB) / 6841.21 (MB) / 6874 (MB)
[Open3D DEBUG] Got average: 0.245976 (s), 6841.21 (MB) / 6841.21 (MB) / 6874 (MB)
[Open3D DEBUG] Iso-Value: 5.024663e-01 = 2.588455e+04 / 5.151500e+04
[Open3D DEBUG] #          Total Solve:      71.0 (s),    6844.3 (MB)
TriangleMesh with 63929 points and 127846 triangles.
EMD: tensor([0.0270], dtype=torch.float64)
Chamfer: tensor([0.0366], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0250]); sim_loss: tensor([0.0280], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51095 / 39819
[Open3D DEBUG] #   Got kernel density: 0.34437 (s), 6850.52 (MB) / 6850.52 (MB) / 6888 (MB)
[Open3D DEBUG] #     Got normal field: 0.399343 (s), 6851.88 (MB) / 6851.88 (MB) / 6888 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.411793e-05 / 1.743256e+00
[Open3D DEBUG] #       Finalized tree: 1.37834 (s), 6852.21 (MB) / 6852.21 (MB) / 6888 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.97548 (s), 6852.21 (MB) / 6852.21 (MB) / 6888 (MB)
[Open3D DEBUG] #Set point constraints: 1.06048 (s), 6852.21 (MB) / 6852.21 (MB) / 6888 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 505275 / 555752 / 21705
[Open3D DEBUG] Memory Usage: 6852.215 MB
[Open3D DEBUG] # Linear system solved: 11.6864 (s), 6852.48 (MB) / 6852.48 (MB) / 6888 (MB)
[Open3D DEBUG] Got average: 0.284501 (s), 6852.48 (MB) / 6852.48 (MB) / 6888 (MB)
[Open3D DEBUG] Iso-Value: 5.033790e-01 = 2.572015e+04 / 5.109500e+04
[Open3D DEBUG] #          Total Solve:      70.7 (s),    6867.1 (MB)
TriangleMesh with 82054 points and 164092 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0257, mean: -0.0315, std: 0.0023
Selected top reward seqs: tensor([-0.0288, -0.0287, -0.0286, -0.0285, -0.0284, -0.0283, -0.0282, -0.0280,
        -0.0279, -0.0278, -0.0277, -0.0275, -0.0273, -0.0270, -0.0269, -0.0268,
        -0.0267, -0.0266, -0.0264, -0.0257])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 3 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 27 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 23 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 3 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 19 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Loss: 0.024057721719145775
Optimal set of params:
mid_point: tensor([[0.4322, 0.1400, 0.4289],
        [0.4457, 0.1400, 0.5361]])
angle: tensor([1.0221, 2.6230], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0095, 0.0089], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2236, 0.1400, 0.7702, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7931, 0.1400, 0.7344, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50338 / 42204
[Open3D DEBUG] #   Got kernel density: 0.373347 (s), 6939.99 (MB) / 6939.99 (MB) / 6972 (MB)
[Open3D DEBUG] #     Got normal field: 0.457905 (s), 6943.16 (MB) / 6943.16 (MB) / 6972 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.515548e-05 / 2.273037e+00
[Open3D DEBUG] #       Finalized tree: 1.61043 (s), 6943.2 (MB) / 6943.2 (MB) / 6972 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.80660 (s), 6943.2 (MB) / 6943.2 (MB) / 6972 (MB)
[Open3D DEBUG] #Set point constraints: 1.06362 (s), 6943.2 (MB) / 6943.2 (MB) / 6972 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 539204 / 534840 / 81393
[Open3D DEBUG] Memory Usage: 6943.199 MB
[Open3D DEBUG] # Linear system solved: 11.7025 (s), 6943.2 (MB) / 6943.2 (MB) / 6972 (MB)
[Open3D DEBUG] Got average: 0.34791 (s), 6943.2 (MB) / 6943.2 (MB) / 6972 (MB)
[Open3D DEBUG] Iso-Value: 5.017637e-01 = 2.525778e+04 / 5.033800e+04
[Open3D DEBUG] #          Total Solve:      78.8 (s),    6954.5 (MB)
TriangleMesh with 81765 points and 163480 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0267, mean: -0.0319, std: 0.0020
Selected top reward seqs: tensor([-0.0296, -0.0296, -0.0294, -0.0293, -0.0292, -0.0291, -0.0291, -0.0291,
        -0.0290, -0.0290, -0.0290, -0.0288, -0.0286, -0.0286, -0.0286, -0.0285,
        -0.0284, -0.0282, -0.0276, -0.0267])
Batch 0/20:
reward seqs after 17 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 5 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 15 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 22 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 3 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 3 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 16 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 23 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 14 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 26 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 24 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 24 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Loss: 0.027549002319574356
Optimal set of params:
mid_point: tensor([[0.4271, 0.1400, 0.5579]])
angle: tensor([2.0339], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6058, 0.1400, 0.9158, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 47948 / 41035
[Open3D DEBUG] #   Got kernel density: 0.298147 (s), 6900.9 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] #     Got normal field: 0.244257 (s), 6904.6 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.998783e-05 / 2.396816e+00
[Open3D DEBUG] #       Finalized tree: 2.20942 (s), 6905.31 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.47701 (s), 6905.31 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] #Set point constraints: 1.16159 (s), 6905.31 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 523118 / 501984 / 95865
[Open3D DEBUG] Memory Usage: 6905.309 MB
[Open3D DEBUG] # Linear system solved: 10.927 (s), 6905.5 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] Got average: 0.365068 (s), 6905.5 (MB) / 6954.48 (MB) / 6972 (MB)
[Open3D DEBUG] Iso-Value: 5.035230e-01 = 2.414292e+04 / 4.794800e+04
[Open3D DEBUG] #          Total Solve:      79.8 (s),    6954.5 (MB)
TriangleMesh with 77820 points and 155578 triangles.
EMD: tensor([0.0297], dtype=torch.float64)
Chamfer: tensor([0.0385], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0275]); sim_loss: tensor([0.0306], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.4819, 0.1400, 0.8411, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7716, 0.1400, 0.7702, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0249]); Best sim loss: tensor([0.0280], dtype=torch.float64)
Wrote profile results to control.py.lprof
