ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.187678 (s), 4438.91 (MB) / 4438.91 (MB) / 4479 (MB)
[Open3D DEBUG] #     Got normal field: 0.06532 (s), 4446.02 (MB) / 4446.02 (MB) / 4479 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997645e-05 / 9.944876e-01
[Open3D DEBUG] #       Finalized tree: 1.07855 (s), 4447.81 (MB) / 4447.81 (MB) / 4479 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.32743 (s), 4448.11 (MB) / 4448.11 (MB) / 4479 (MB)
[Open3D DEBUG] #Set point constraints: 0.754833 (s), 4448.11 (MB) / 4448.11 (MB) / 4479 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4448.109 MB
[Open3D DEBUG] # Linear system solved: 9.10369 (s), 4448.11 (MB) / 4448.11 (MB) / 4479 (MB)
[Open3D DEBUG] Got average: 0.258834 (s), 4448.11 (MB) / 4448.11 (MB) / 4479 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      68.3 (s),    4463.5 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0401, mean: -0.0542, std: 0.0058
Selected top reward seqs: tensor([-0.0466, -0.0463, -0.0460, -0.0458, -0.0458, -0.0457, -0.0455, -0.0454,
        -0.0452, -0.0450, -0.0439, -0.0433, -0.0433, -0.0430, -0.0427, -0.0422,
        -0.0413, -0.0403, -0.0401, -0.0401])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 7 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0412], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 14 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0449], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 5 iterations: tensor([-0.0458], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0426], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 25 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 3 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 17 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Loss: 0.03892367333173752
Optimal set of params:
mid_point: tensor([[0.4298, 0.1400, 0.4643],
        [0.4495, 0.1400, 0.4535]])
angle: tensor([2.5328, 1.1639], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0105, 0.0101], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7579, 0.1400, 0.6931, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2912, 0.1400, 0.8208, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51800 / 44223
[Open3D DEBUG] #   Got kernel density: 0.349307 (s), 6607.54 (MB) / 6607.54 (MB) / 6638 (MB)
[Open3D DEBUG] #     Got normal field: 0.409286 (s), 6615.23 (MB) / 6615.23 (MB) / 6638 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.632340e-05 / 2.399552e+00
[Open3D DEBUG] #       Finalized tree: 1.99022 (s), 6617.86 (MB) / 6617.86 (MB) / 6638 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.32068 (s), 6617.86 (MB) / 6617.86 (MB) / 6638 (MB)
[Open3D DEBUG] #Set point constraints: 1.35983 (s), 6617.86 (MB) / 6617.86 (MB) / 6638 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 571474 / 569048 / 84065
[Open3D DEBUG] Memory Usage: 6617.859 MB
[Open3D DEBUG] # Linear system solved: 14.266 (s), 6618.72 (MB) / 6618.72 (MB) / 6638 (MB)
[Open3D DEBUG] Got average: 0.419195 (s), 6618.75 (MB) / 6618.75 (MB) / 6638 (MB)
[Open3D DEBUG] Iso-Value: 5.019184e-01 = 2.599937e+04 / 5.180000e+04
[Open3D DEBUG] #          Total Solve:      84.8 (s),    6628.7 (MB)
TriangleMesh with 89583 points and 179174 triangles.
EMD: tensor([0.0513], dtype=torch.float64)
Chamfer: tensor([0.0576], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0389]); sim_loss: tensor([0.0519], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 48877 / 42480
[Open3D DEBUG] #   Got kernel density: 0.340817 (s), 6634.86 (MB) / 6634.86 (MB) / 6667 (MB)
[Open3D DEBUG] #     Got normal field: 0.300280 (s), 6637.23 (MB) / 6637.23 (MB) / 6667 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.433665e-05 / 2.655812e+00
[Open3D DEBUG] #       Finalized tree: 1.44887 (s), 6637.41 (MB) / 6637.41 (MB) / 6667 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.56374 (s), 6637.45 (MB) / 6637.45 (MB) / 6667 (MB)
[Open3D DEBUG] #Set point constraints: 1.07844 (s), 6637.45 (MB) / 6637.45 (MB) / 6667 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 539988 / 497224 / 119905
[Open3D DEBUG] Memory Usage: 6637.449 MB
[Open3D DEBUG] # Linear system solved: 12.5607 (s), 6637.47 (MB) / 6637.47 (MB) / 6667 (MB)
[Open3D DEBUG] Got average: 0.324872 (s), 6637.47 (MB) / 6637.47 (MB) / 6667 (MB)
[Open3D DEBUG] Iso-Value: 5.040109e-01 = 2.463454e+04 / 4.887700e+04
[Open3D DEBUG] #          Total Solve:      76.0 (s),    6648.0 (MB)
TriangleMesh with 76434 points and 152758 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0395, mean: -0.0519, std: 0.0058
Selected top reward seqs: tensor([-0.0445, -0.0444, -0.0444, -0.0441, -0.0440, -0.0438, -0.0434, -0.0434,
        -0.0431, -0.0429, -0.0428, -0.0426, -0.0424, -0.0423, -0.0417, -0.0410,
        -0.0410, -0.0406, -0.0399, -0.0395])
Batch 0/20:
reward seqs after 3 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0437], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 6 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 17 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 6 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 5 iterations: tensor([-0.0396], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 13 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 16 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0371], grad_fn=<CatBackward>)
Loss: 0.03711874783039093
Optimal set of params:
mid_point: tensor([[0.5446, 0.1400, 0.4491],
        [0.4507, 0.1400, 0.4337]])
angle: tensor([2.0022, 1.1042], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7119, 0.1400, 0.8125, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2708, 0.1400, 0.7910, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52021 / 45984
[Open3D DEBUG] #   Got kernel density: 0.320165 (s), 6968.71 (MB) / 6968.71 (MB) / 7001 (MB)
[Open3D DEBUG] #     Got normal field: 0.525274 (s), 6971.12 (MB) / 6971.12 (MB) / 7001 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.617685e-05 / 2.922376e+00
[Open3D DEBUG] #       Finalized tree: 1.72414 (s), 6972.28 (MB) / 6972.28 (MB) / 7001 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.67386 (s), 6972.28 (MB) / 6972.28 (MB) / 7001 (MB)
[Open3D DEBUG] #Set point constraints: 1.41080 (s), 6972.28 (MB) / 6972.28 (MB) / 7001 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 605249 / 565856 / 125857
[Open3D DEBUG] Memory Usage: 6972.281 MB
[Open3D DEBUG] # Linear system solved: 13.5183 (s), 6972.56 (MB) / 6972.56 (MB) / 7001 (MB)
[Open3D DEBUG] Got average: 0.439968 (s), 6972.56 (MB) / 6972.56 (MB) / 7001 (MB)
[Open3D DEBUG] Iso-Value: 5.017999e-01 = 2.610413e+04 / 5.202100e+04
[Open3D DEBUG] #          Total Solve:      84.9 (s),    6984.1 (MB)
TriangleMesh with 90943 points and 181802 triangles.
EMD: tensor([0.0504], dtype=torch.float64)
Chamfer: tensor([0.0553], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0371]); sim_loss: tensor([0.0509], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 52823 / 28115
[Open3D DEBUG] #   Got kernel density: 0.216016 (s), 6990.12 (MB) / 6990.12 (MB) / 7022 (MB)
[Open3D DEBUG] #     Got normal field: 0.190644 (s), 6991.12 (MB) / 6991.12 (MB) / 7022 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.374882e-05 / 7.262541e-01
[Open3D DEBUG] #       Finalized tree: 1.00042 (s), 6991.21 (MB) / 6991.21 (MB) / 7022 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.59844 (s), 6991.21 (MB) / 6991.21 (MB) / 7022 (MB)
[Open3D DEBUG] #Set point constraints: 0.786466 (s), 6991.21 (MB) / 6991.21 (MB) / 7022 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 282668 / 322176 / 873
[Open3D DEBUG] Memory Usage: 6991.215 MB
[Open3D DEBUG] # Linear system solved: 8.96762 (s), 6991.53 (MB) / 6991.53 (MB) / 7022 (MB)
[Open3D DEBUG] Got average: 0.191224 (s), 6991.53 (MB) / 6991.53 (MB) / 7022 (MB)
[Open3D DEBUG] Iso-Value: 5.086903e-01 = 2.687055e+04 / 5.282300e+04
[Open3D DEBUG] #          Total Solve:      67.0 (s),    6996.3 (MB)
TriangleMesh with 42231 points and 84446 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0377, mean: -0.0510, std: 0.0062
Selected top reward seqs: tensor([-0.0437, -0.0434, -0.0434, -0.0433, -0.0431, -0.0430, -0.0427, -0.0426,
        -0.0426, -0.0423, -0.0421, -0.0419, -0.0410, -0.0404, -0.0399, -0.0395,
        -0.0395, -0.0394, -0.0385, -0.0377])
Batch 0/20:
reward seqs after 13 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 22 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 35 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 22 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 3 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0382], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 17 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Loss: 0.037467751652002335
Optimal set of params:
mid_point: tensor([[0.4487, 0.1400, 0.5361],
        [0.4730, 0.1400, 0.5714]])
angle: tensor([2.3580, 3.0922], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7321, 0.1400, 0.8185, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8725, 0.1400, 0.5911, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52111 / 44603
[Open3D DEBUG] #   Got kernel density: 0.361287 (s), 7044.43 (MB) / 7044.43 (MB) / 7085 (MB)
[Open3D DEBUG] #     Got normal field: 0.336462 (s), 7048.06 (MB) / 7048.06 (MB) / 7085 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.597325e-05 / 2.395712e+00
[Open3D DEBUG] #       Finalized tree: 1.59089 (s), 7049.64 (MB) / 7049.64 (MB) / 7085 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.82562 (s), 7049.64 (MB) / 7049.64 (MB) / 7085 (MB)
[Open3D DEBUG] #Set point constraints: 1.44853 (s), 7049.64 (MB) / 7049.64 (MB) / 7085 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 571621 / 572824 / 80457
[Open3D DEBUG] Memory Usage: 7049.645 MB
[Open3D DEBUG] # Linear system solved: 12.466 (s), 7049.64 (MB) / 7049.64 (MB) / 7085 (MB)
[Open3D DEBUG] Got average: 0.37385 (s), 7049.64 (MB) / 7049.64 (MB) / 7085 (MB)
[Open3D DEBUG] Iso-Value: 5.019695e-01 = 2.615813e+04 / 5.211100e+04
[Open3D DEBUG] #          Total Solve:      82.7 (s),    7060.8 (MB)
TriangleMesh with 90065 points and 180122 triangles.
EMD: tensor([0.0463], dtype=torch.float64)
Chamfer: tensor([0.0454], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0375]); sim_loss: tensor([0.0462], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51323 / 46378
[Open3D DEBUG] #   Got kernel density: 0.423049 (s), 7066.89 (MB) / 7066.89 (MB) / 7107 (MB)
[Open3D DEBUG] #     Got normal field: 0.355172 (s), 7068.63 (MB) / 7068.63 (MB) / 7107 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.715371e-05 / 3.446530e+00
[Open3D DEBUG] #       Finalized tree: 1.91258 (s), 7069.16 (MB) / 7069.16 (MB) / 7107 (MB)
[Open3D DEBUG] #  Set FEM constraints: 3.12162 (s), 7069.16 (MB) / 7069.16 (MB) / 7107 (MB)
[Open3D DEBUG] #Set point constraints: 1.21384 (s), 7069.16 (MB) / 7069.16 (MB) / 7107 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 645037 / 586104 / 151081
[Open3D DEBUG] Memory Usage: 7069.164 MB
[Open3D DEBUG] # Linear system solved: 14.1875 (s), 7069.3 (MB) / 7069.3 (MB) / 7107 (MB)
[Open3D DEBUG] Got average: 0.440144 (s), 7069.3 (MB) / 7069.3 (MB) / 7107 (MB)
[Open3D DEBUG] Iso-Value: 5.010182e-01 = 2.571375e+04 / 5.132300e+04
[Open3D DEBUG] #          Total Solve:      87.6 (s),    7078.6 (MB)
TriangleMesh with 94389 points and 188562 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0370, mean: -0.0541, std: 0.0074
Selected top reward seqs: tensor([-0.0443, -0.0441, -0.0440, -0.0439, -0.0437, -0.0436, -0.0436, -0.0434,
        -0.0431, -0.0429, -0.0418, -0.0417, -0.0410, -0.0399, -0.0396, -0.0395,
        -0.0393, -0.0379, -0.0374, -0.0370])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 14 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 19 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 18 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 5 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0388], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0388], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 24 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Loss: 0.03454790636897087
Optimal set of params:
mid_point: tensor([[0.4379, 0.1400, 0.4650],
        [0.4340, 0.1400, 0.4460]])
angle: tensor([2.7551, 1.1260], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0097, 0.0097], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8083, 0.1400, 0.6158, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2619, 0.1400, 0.8071, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52654 / 44281
[Open3D DEBUG] #   Got kernel density: 0.247835 (s), 7187.82 (MB) / 7187.82 (MB) / 7220 (MB)
[Open3D DEBUG] #     Got normal field: 0.402966 (s), 7191.73 (MB) / 7191.73 (MB) / 7220 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.229549e-05 / 2.227027e+00
[Open3D DEBUG] #       Finalized tree: 1.57812 (s), 7192.34 (MB) / 7192.34 (MB) / 7220 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.42099 (s), 7192.34 (MB) / 7192.34 (MB) / 7220 (MB)
[Open3D DEBUG] #Set point constraints: 1.51009 (s), 7192.34 (MB) / 7192.34 (MB) / 7220 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 575786 / 599192 / 58849
[Open3D DEBUG] Memory Usage: 7192.336 MB
[Open3D DEBUG] # Linear system solved: 13.2643 (s), 7192.37 (MB) / 7192.37 (MB) / 7220 (MB)
[Open3D DEBUG] Got average: 0.401264 (s), 7192.37 (MB) / 7192.37 (MB) / 7220 (MB)
[Open3D DEBUG] Iso-Value: 5.020399e-01 = 2.643441e+04 / 5.265400e+04
[Open3D DEBUG] #          Total Solve:      82.2 (s),    7200.3 (MB)
TriangleMesh with 93110 points and 186200 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0361, mean: -0.0530, std: 0.0069
Selected top reward seqs: tensor([-0.0446, -0.0442, -0.0441, -0.0441, -0.0440, -0.0434, -0.0433, -0.0433,
        -0.0430, -0.0425, -0.0424, -0.0421, -0.0418, -0.0412, -0.0409, -0.0403,
        -0.0398, -0.0390, -0.0390, -0.0361])
Batch 0/20:
reward seqs after 21 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 4 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 15 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 16 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 18 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 15 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Loss: 0.03557023033499718
Optimal set of params:
mid_point: tensor([[0.4451, 0.1400, 0.4155]])
angle: tensor([1.3121], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0090], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3427, 0.1400, 0.8022, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51499 / 42728
[Open3D DEBUG] #   Got kernel density: 0.394911 (s), 7121.05 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] #     Got normal field: 0.405602 (s), 7124.55 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.729926e-05 / 1.920875e+00
[Open3D DEBUG] #       Finalized tree: 1.37736 (s), 7125.16 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.2951 (s), 7125.16 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] #Set point constraints: 1.03572 (s), 7125.16 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 540800 / 580752 / 37305
[Open3D DEBUG] Memory Usage: 7125.156 MB
[Open3D DEBUG] # Linear system solved: 13.7386 (s), 7125.16 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] Got average: 0.378955 (s), 7125.16 (MB) / 7200.32 (MB) / 7220 (MB)
[Open3D DEBUG] Iso-Value: 5.029478e-01 = 2.590131e+04 / 5.149900e+04
[Open3D DEBUG] #          Total Solve:      85.3 (s),    7200.3 (MB)
TriangleMesh with 90064 points and 180100 triangles.
EMD: tensor([0.0715], dtype=torch.float64)
Chamfer: tensor([0.0668], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0356]); sim_loss: tensor([0.0711], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.7579, 0.1400, 0.6931, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7119, 0.1400, 0.8125, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7321, 0.1400, 0.8185, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8725, 0.1400, 0.5911, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0375]); Best sim loss: tensor([0.0462], dtype=torch.float64)
Wrote profile results to control.py.lprof
