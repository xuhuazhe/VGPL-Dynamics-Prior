ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.0208659 (s), 4444.1 (MB) / 4444.1 (MB) / 4487 (MB)
[Open3D DEBUG] #     Got normal field: 0.11267 (s), 4445.08 (MB) / 4445.08 (MB) / 4487 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997651e-05 / 9.944906e-01
[Open3D DEBUG] #       Finalized tree: 0.181589 (s), 4445.08 (MB) / 4445.08 (MB) / 4487 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.235050 (s), 4445.34 (MB) / 4445.34 (MB) / 4487 (MB)
[Open3D DEBUG] #Set point constraints: 0.037854 (s), 4445.34 (MB) / 4445.34 (MB) / 4487 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4445.336 MB
[Open3D DEBUG] # Linear system solved: 1.03262 (s), 4445.34 (MB) / 4445.34 (MB) / 4487 (MB)
[Open3D DEBUG] Got average: 0.0220902 (s), 4445.34 (MB) / 4445.34 (MB) / 4487 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472343e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      17.8 (s),    4466.1 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0361, mean: -0.0471, std: 0.0051
Selected top reward seqs: tensor([-0.0401, -0.0399, -0.0399, -0.0397, -0.0393, -0.0393, -0.0391, -0.0390,
        -0.0385, -0.0385, -0.0383, -0.0381, -0.0378, -0.0378, -0.0377, -0.0373,
        -0.0372, -0.0372, -0.0369, -0.0361])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 20 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 21 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 19 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 6 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0368], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 15 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 20 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 18 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0364], grad_fn=<CatBackward>)
Loss: 0.03605925291776657
Optimal set of params:
mid_point: tensor([[0.4257, 0.1400, 0.4947],
        [0.5434, 0.1400, 0.4943]])
angle: tensor([1.7743, 1.6474], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5066, 0.1400, 0.8864, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5740, 0.1400, 0.8931, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51640 / 42891
[Open3D DEBUG] #   Got kernel density: 0.0459321 (s), 6582.78 (MB) / 6582.78 (MB) / 6621 (MB)
[Open3D DEBUG] #     Got normal field: 0.180763 (s), 6587.63 (MB) / 6587.63 (MB) / 6621 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.425189e-05 / 2.285168e+00
[Open3D DEBUG] #       Finalized tree: 0.431475 (s), 6588.01 (MB) / 6588.01 (MB) / 6621 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.336503 (s), 6588.01 (MB) / 6588.01 (MB) / 6621 (MB)
[Open3D DEBUG] #Set point constraints: 0.115935 (s), 6588.01 (MB) / 6588.01 (MB) / 6621 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 543313 / 543288 / 77641
[Open3D DEBUG] Memory Usage: 6588.008 MB
[Open3D DEBUG] # Linear system solved: 1.48536 (s), 6588.01 (MB) / 6588.01 (MB) / 6621 (MB)
[Open3D DEBUG] Got average: 0.035126 (s), 6588.01 (MB) / 6588.01 (MB) / 6621 (MB)
[Open3D DEBUG] Iso-Value: 5.032316e-01 = 2.598688e+04 / 5.164000e+04
[Open3D DEBUG] #          Total Solve:      15.1 (s),    6600.5 (MB)
TriangleMesh with 84424 points and 168864 triangles.
EMD: tensor([0.0318], dtype=torch.float64)
Chamfer: tensor([0.0376], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0361]); sim_loss: tensor([0.0324], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49749 / 23599
[Open3D DEBUG] #   Got kernel density: 0.00931287 (s), 6607.86 (MB) / 6607.86 (MB) / 6645 (MB)
[Open3D DEBUG] #     Got normal field: 0.0749991 (s), 6607.86 (MB) / 6607.86 (MB) / 6645 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.137178e-05 / 5.657348e-01
[Open3D DEBUG] #       Finalized tree: 0.119156 (s), 6607.86 (MB) / 6607.86 (MB) / 6645 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.166822 (s), 6607.86 (MB) / 6607.86 (MB) / 6645 (MB)
[Open3D DEBUG] #Set point constraints: 0.046844 (s), 6607.86 (MB) / 6607.86 (MB) / 6645 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 229839 / 262272 / 401
[Open3D DEBUG] Memory Usage: 6607.855 MB
[Open3D DEBUG] # Linear system solved: 0.840628 (s), 6608.8 (MB) / 6608.8 (MB) / 6645 (MB)
[Open3D DEBUG] Got average: 0.017858 (s), 6608.8 (MB) / 6608.8 (MB) / 6645 (MB)
[Open3D DEBUG] Iso-Value: 5.091594e-01 = 2.533017e+04 / 4.974900e+04
[Open3D DEBUG] #          Total Solve:      12.4 (s),    6613.2 (MB)
TriangleMesh with 31448 points and 62884 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0346, mean: -0.0475, std: 0.0050
Selected top reward seqs: tensor([-0.0411, -0.0407, -0.0407, -0.0405, -0.0397, -0.0396, -0.0395, -0.0394,
        -0.0394, -0.0392, -0.0391, -0.0390, -0.0389, -0.0388, -0.0386, -0.0379,
        -0.0376, -0.0363, -0.0346, -0.0346])
Batch 0/20:
reward seqs after 35 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 13 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 15 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 15 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 3 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 27 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0391], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Loss: 0.035274606198072433
Optimal set of params:
mid_point: tensor([[0.4217, 0.1400, 0.4322],
        [0.5455, 0.1400, 0.5239]])
angle: tensor([2.2662, 1.8269], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0105], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6780, 0.1400, 0.7393, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6468, 0.1400, 0.9109, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53698 / 45972
[Open3D DEBUG] #   Got kernel density: 0.047194 (s), 6668.96 (MB) / 6668.96 (MB) / 6700 (MB)
[Open3D DEBUG] #     Got normal field: 0.198523 (s), 6670.96 (MB) / 6670.96 (MB) / 6700 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.645918e-05 / 2.494765e+00
[Open3D DEBUG] #       Finalized tree: 0.486267 (s), 6671.21 (MB) / 6671.21 (MB) / 6700 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.414261 (s), 6671.21 (MB) / 6671.21 (MB) / 6700 (MB)
[Open3D DEBUG] #Set point constraints: 0.157405 (s), 6671.21 (MB) / 6671.21 (MB) / 6700 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 591305 / 591976 / 83801
[Open3D DEBUG] Memory Usage: 6671.207 MB
[Open3D DEBUG] # Linear system solved: 1.6796 (s), 6671.21 (MB) / 6671.21 (MB) / 6700 (MB)
[Open3D DEBUG] Got average: 0.023566 (s), 6671.21 (MB) / 6671.21 (MB) / 6700 (MB)
[Open3D DEBUG] Iso-Value: 5.012963e-01 = 2.691861e+04 / 5.369800e+04
[Open3D DEBUG] #          Total Solve:      16.4 (s),    6682.8 (MB)
TriangleMesh with 92853 points and 185670 triangles.
EMD: tensor([0.0383], dtype=torch.float64)
Chamfer: tensor([0.0436], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0353]); sim_loss: tensor([0.0389], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49917 / 44018
[Open3D DEBUG] #   Got kernel density: 0.0987489 (s), 6689.87 (MB) / 6689.87 (MB) / 6720 (MB)
[Open3D DEBUG] #     Got normal field: 0.179186 (s), 6689.96 (MB) / 6689.96 (MB) / 6720 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.997051e-05 / 2.993548e+00
[Open3D DEBUG] #       Finalized tree: 0.457485 (s), 6689.96 (MB) / 6689.96 (MB) / 6720 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.340329 (s), 6689.96 (MB) / 6689.96 (MB) / 6720 (MB)
[Open3D DEBUG] #Set point constraints: 0.120533 (s), 6689.96 (MB) / 6689.96 (MB) / 6720 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 579552 / 525712 / 136633
[Open3D DEBUG] Memory Usage: 6689.957 MB
[Open3D DEBUG] # Linear system solved: 1.33991 (s), 6689.96 (MB) / 6689.96 (MB) / 6720 (MB)
[Open3D DEBUG] Got average: 0.0357831 (s), 6689.96 (MB) / 6689.96 (MB) / 6720 (MB)
[Open3D DEBUG] Iso-Value: 5.031170e-01 = 2.511409e+04 / 4.991700e+04
[Open3D DEBUG] #          Total Solve:      14.9 (s),    6698.4 (MB)
TriangleMesh with 82132 points and 164094 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0317, mean: -0.0445, std: 0.0055
Selected top reward seqs: tensor([-0.0361, -0.0361, -0.0359, -0.0359, -0.0357, -0.0355, -0.0354, -0.0351,
        -0.0350, -0.0349, -0.0347, -0.0346, -0.0346, -0.0343, -0.0340, -0.0331,
        -0.0331, -0.0327, -0.0321, -0.0317])
Batch 0/20:
reward seqs after 13 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 27 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0337], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 29 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 27 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Loss: 0.03155025094747543
Optimal set of params:
mid_point: tensor([[0.4319, 0.1400, 0.5716],
        [0.4295, 0.1400, 0.5058]])
angle: tensor([0.9321, 1.0967], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0095], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1934, 0.1400, 0.8927, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2469, 0.1400, 0.8617, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 54721 / 47353
[Open3D DEBUG] #   Got kernel density: 0.0470619 (s), 6820.04 (MB) / 6820.04 (MB) / 6851 (MB)
[Open3D DEBUG] #     Got normal field: 0.219868 (s), 6823.1 (MB) / 6823.1 (MB) / 6851 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.433787e-05 / 2.426213e+00
[Open3D DEBUG] #       Finalized tree: 0.420820 (s), 6823.38 (MB) / 6823.38 (MB) / 6851 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.460836 (s), 6823.38 (MB) / 6823.38 (MB) / 6851 (MB)
[Open3D DEBUG] #Set point constraints: 0.165919 (s), 6823.38 (MB) / 6823.38 (MB) / 6851 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 626683 / 652880 / 63329
[Open3D DEBUG] Memory Usage: 6823.379 MB
[Open3D DEBUG] # Linear system solved: 1.60750 (s), 6823.38 (MB) / 6823.38 (MB) / 6851 (MB)
[Open3D DEBUG] Got average: 0.0268662 (s), 6823.38 (MB) / 6823.38 (MB) / 6851 (MB)
[Open3D DEBUG] Iso-Value: 5.019498e-01 = 2.746720e+04 / 5.472100e+04
[Open3D DEBUG] #          Total Solve:      21.0 (s),    6835.2 (MB)
TriangleMesh with 104240 points and 208452 triangles.
EMD: tensor([0.1035], dtype=torch.float64)
Chamfer: tensor([0.0722], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0316]); sim_loss: tensor([0.1004], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51300 / 46089
[Open3D DEBUG] #   Got kernel density: 0.0996141 (s), 6841.16 (MB) / 6841.16 (MB) / 6873 (MB)
[Open3D DEBUG] #     Got normal field: 0.215424 (s), 6842.73 (MB) / 6842.73 (MB) / 6873 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.053968e-05 / 3.105685e+00
[Open3D DEBUG] #       Finalized tree: 0.544577 (s), 6843.2 (MB) / 6843.2 (MB) / 6873 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.373634 (s), 6843.2 (MB) / 6843.2 (MB) / 6873 (MB)
[Open3D DEBUG] #Set point constraints: 0.135713 (s), 6843.2 (MB) / 6843.2 (MB) / 6873 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 650903 / 634648 / 109241
[Open3D DEBUG] Memory Usage: 6843.199 MB
[Open3D DEBUG] # Linear system solved: 1.61084 (s), 6843.43 (MB) / 6843.43 (MB) / 6873 (MB)
[Open3D DEBUG] Got average: 0.0272481 (s), 6843.43 (MB) / 6843.43 (MB) / 6873 (MB)
[Open3D DEBUG] Iso-Value: 5.028987e-01 = 2.579870e+04 / 5.130000e+04
[Open3D DEBUG] #          Total Solve:      19.8 (s),    6853.8 (MB)
TriangleMesh with 104712 points and 209252 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0408, mean: -0.0579, std: 0.0072
Selected top reward seqs: tensor([-0.0480, -0.0480, -0.0480, -0.0478, -0.0475, -0.0475, -0.0471, -0.0470,
        -0.0469, -0.0469, -0.0465, -0.0464, -0.0461, -0.0448, -0.0445, -0.0434,
        -0.0434, -0.0428, -0.0420, -0.0408])
Batch 0/20:
reward seqs after 27 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 25 iterations: tensor([-0.0487], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0490], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 22 iterations: tensor([-0.0491], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0500], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0511], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0517], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0497], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0502], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 27 iterations: tensor([-0.0463], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 49 iterations: tensor([-0.0490], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0486], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0449], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 17 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 42 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Loss: 0.04146686941385269
Optimal set of params:
mid_point: tensor([[0.4501, 0.1400, 0.4440],
        [0.5090, 0.1400, 0.4970]])
angle: tensor([1.1522, 1.5042], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0105], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2875, 0.1400, 0.8094, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4824, 0.1400, 0.8961, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 54099 / 46371
[Open3D DEBUG] #   Got kernel density: 0.0452969 (s), 7016.91 (MB) / 7016.91 (MB) / 7049 (MB)
[Open3D DEBUG] #     Got normal field: 0.210795 (s), 7021.3 (MB) / 7021.3 (MB) / 7049 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.093973e-05 / 2.214799e+00
[Open3D DEBUG] #       Finalized tree: 0.483219 (s), 7021.31 (MB) / 7021.31 (MB) / 7049 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.360222 (s), 7021.31 (MB) / 7021.31 (MB) / 7049 (MB)
[Open3D DEBUG] #Set point constraints: 0.088758 (s), 7021.31 (MB) / 7021.31 (MB) / 7049 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 597332 / 632032 / 50633
[Open3D DEBUG] Memory Usage: 7021.309 MB
[Open3D DEBUG] # Linear system solved: 1.55293 (s), 7021.31 (MB) / 7021.31 (MB) / 7049 (MB)
[Open3D DEBUG] Got average: 0.0170612 (s), 7021.31 (MB) / 7021.31 (MB) / 7049 (MB)
[Open3D DEBUG] Iso-Value: 5.020164e-01 = 2.715858e+04 / 5.409900e+04
[Open3D DEBUG] #          Total Solve:      15.1 (s),    7030.1 (MB)
TriangleMesh with 103411 points and 206664 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0503, mean: -0.0682, std: 0.0098
Selected top reward seqs: tensor([-0.0565, -0.0563, -0.0563, -0.0562, -0.0559, -0.0558, -0.0558, -0.0555,
        -0.0553, -0.0553, -0.0549, -0.0549, -0.0544, -0.0540, -0.0538, -0.0533,
        -0.0533, -0.0522, -0.0509, -0.0503])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0585], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0562], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 21 iterations: tensor([-0.0558], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 19 iterations: tensor([-0.0560], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 18 iterations: tensor([-0.0555], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0551], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0542], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0600], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0530], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 18 iterations: tensor([-0.0570], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0548], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 17 iterations: tensor([-0.0548], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 15 iterations: tensor([-0.0561], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0530], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 22 iterations: tensor([-0.0577], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 16 iterations: tensor([-0.0581], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0550], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 21 iterations: tensor([-0.0507], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 32 iterations: tensor([-0.0543], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0536], grad_fn=<CatBackward>)
Loss: 0.050714824348688126
Optimal set of params:
mid_point: tensor([[0.4791, 0.1400, 0.5087]])
angle: tensor([2.0685], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6701, 0.1400, 0.8601, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51821 / 46535
[Open3D DEBUG] #   Got kernel density: 0.0650189 (s), 7033.13 (MB) / 7033.13 (MB) / 7065 (MB)
[Open3D DEBUG] #     Got normal field: 0.210383 (s), 7033.23 (MB) / 7033.23 (MB) / 7065 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.361442e-05 / 2.778353e+00
[Open3D DEBUG] #       Finalized tree: 0.598685 (s), 7033.31 (MB) / 7033.31 (MB) / 7065 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.358261 (s), 7033.31 (MB) / 7033.31 (MB) / 7065 (MB)
[Open3D DEBUG] #Set point constraints: 0.136994 (s), 7033.31 (MB) / 7033.31 (MB) / 7065 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 633221 / 625424 / 98257
[Open3D DEBUG] Memory Usage: 7033.312 MB
[Open3D DEBUG] # Linear system solved: 1.74159 (s), 7033.31 (MB) / 7033.31 (MB) / 7065 (MB)
[Open3D DEBUG] Got average: 0.0270600 (s), 7033.31 (MB) / 7033.31 (MB) / 7065 (MB)
[Open3D DEBUG] Iso-Value: 5.027785e-01 = 2.605448e+04 / 5.182100e+04
[Open3D DEBUG] #          Total Solve:      19.0 (s),    7038.9 (MB)
TriangleMesh with 101629 points and 203184 triangles.
EMD: tensor([0.0933], dtype=torch.float64)
Chamfer: tensor([0.0622], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0507]); sim_loss: tensor([0.0902], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.5066, 0.1400, 0.8864, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5740, 0.1400, 0.8931, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0361]); Best sim loss: tensor([0.0324], dtype=torch.float64)
Wrote profile results to control.py.lprof
