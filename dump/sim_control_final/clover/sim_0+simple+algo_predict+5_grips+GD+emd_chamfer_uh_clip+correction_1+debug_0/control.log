ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.234925 (s), 4441.49 (MB) / 4441.49 (MB) / 4482 (MB)
[Open3D DEBUG] #     Got normal field: 0.189762 (s), 4451.54 (MB) / 4451.54 (MB) / 4482 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997653e-05 / 9.944918e-01
[Open3D DEBUG] #       Finalized tree: 1.21074 (s), 4452.96 (MB) / 4452.96 (MB) / 4482 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.22245 (s), 4453.27 (MB) / 4453.27 (MB) / 4482 (MB)
[Open3D DEBUG] #Set point constraints: 0.676257 (s), 4453.27 (MB) / 4453.27 (MB) / 4482 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4453.273 MB
[Open3D DEBUG] # Linear system solved: 10.4755 (s), 4453.27 (MB) / 4453.27 (MB) / 4482 (MB)
[Open3D DEBUG] Got average: 0.243333 (s), 4453.27 (MB) / 4453.27 (MB) / 4482 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      69.2 (s),    4471.4 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0257, mean: -0.0318, std: 0.0028
Selected top reward seqs: tensor([-0.0282, -0.0281, -0.0281, -0.0280, -0.0279, -0.0276, -0.0276, -0.0275,
        -0.0273, -0.0271, -0.0271, -0.0270, -0.0269, -0.0269, -0.0268, -0.0268,
        -0.0265, -0.0260, -0.0258, -0.0257])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 22 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 15 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 27 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 20 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Loss: 0.02548843063414097
Optimal set of params:
mid_point: tensor([[0.4216, 0.1400, 0.5497],
        [0.5461, 0.1400, 0.4353]])
angle: tensor([2.2208, 1.1272], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6637, 0.1400, 0.8681, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3745, 0.1400, 0.7966, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51485 / 27300
[Open3D DEBUG] #   Got kernel density: 0.378465 (s), 6448.02 (MB) / 6448.02 (MB) / 6479 (MB)
[Open3D DEBUG] #     Got normal field: 0.537892 (s), 6452.95 (MB) / 6452.95 (MB) / 6479 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.369102e-05 / 7.048822e-01
[Open3D DEBUG] #       Finalized tree: 1.17763 (s), 6453.39 (MB) / 6453.39 (MB) / 6479 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.03479 (s), 6453.39 (MB) / 6453.39 (MB) / 6479 (MB)
[Open3D DEBUG] #Set point constraints: 0.544646 (s), 6453.39 (MB) / 6453.39 (MB) / 6479 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 272049 / 310208 / 705
[Open3D DEBUG] Memory Usage: 6453.391 MB
[Open3D DEBUG] # Linear system solved: 7.96448 (s), 6453.39 (MB) / 6453.39 (MB) / 6479 (MB)
[Open3D DEBUG] Got average: 0.295801 (s), 6453.39 (MB) / 6453.39 (MB) / 6479 (MB)
[Open3D DEBUG] Iso-Value: 5.070091e-01 = 2.610336e+04 / 5.148500e+04
[Open3D DEBUG] #          Total Solve:      63.4 (s),    6460.7 (MB)
TriangleMesh with 39570 points and 79128 triangles.
EMD: tensor([0.0287], dtype=torch.float64)
Chamfer: tensor([0.0363], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0255]); sim_loss: tensor([0.0294], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49093 / 43036
[Open3D DEBUG] #   Got kernel density: 0.285628 (s), 6467.28 (MB) / 6467.28 (MB) / 6498 (MB)
[Open3D DEBUG] #     Got normal field: 0.266397 (s), 6473.83 (MB) / 6473.83 (MB) / 6498 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.313901e-05 / 3.099684e+00
[Open3D DEBUG] #       Finalized tree: 1.49757 (s), 6474.68 (MB) / 6474.68 (MB) / 6498 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.48833 (s), 6474.68 (MB) / 6474.68 (MB) / 6498 (MB)
[Open3D DEBUG] #Set point constraints: 1.40275 (s), 6474.68 (MB) / 6474.68 (MB) / 6498 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 565356 / 505728 / 140393
[Open3D DEBUG] Memory Usage: 6474.680 MB
[Open3D DEBUG] # Linear system solved: 11.8228 (s), 6475.86 (MB) / 6475.86 (MB) / 6498 (MB)
[Open3D DEBUG] Got average: 0.374237 (s), 6476.23 (MB) / 6476.23 (MB) / 6498 (MB)
[Open3D DEBUG] Iso-Value: 5.031206e-01 = 2.469970e+04 / 4.909300e+04
[Open3D DEBUG] #          Total Solve:      81.2 (s),    6492.1 (MB)
TriangleMesh with 78918 points and 157679 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0249, mean: -0.0318, std: 0.0031
Selected top reward seqs: tensor([-0.0276, -0.0273, -0.0273, -0.0272, -0.0272, -0.0270, -0.0270, -0.0270,
        -0.0269, -0.0269, -0.0268, -0.0267, -0.0266, -0.0265, -0.0265, -0.0265,
        -0.0261, -0.0259, -0.0250, -0.0249])
Batch 0/20:
reward seqs after 24 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 5 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 5 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 4 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 4 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 16 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 15 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Loss: 0.02369868755340576
Optimal set of params:
mid_point: tensor([[0.5368, 0.1400, 0.4213],
        [0.4565, 0.1400, 0.4392]])
angle: tensor([2.3064, 0.7770], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0089, 0.0084], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8052, 0.1400, 0.7178, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1713, 0.1400, 0.7196, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50722 / 43416
[Open3D DEBUG] #   Got kernel density: 0.235273 (s), 6541.06 (MB) / 6541.06 (MB) / 6572 (MB)
[Open3D DEBUG] #     Got normal field: 0.212198 (s), 6547.13 (MB) / 6547.13 (MB) / 6572 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.172635e-05 / 2.623664e+00
[Open3D DEBUG] #       Finalized tree: 1.98723 (s), 6547.64 (MB) / 6547.64 (MB) / 6572 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.28675 (s), 6547.64 (MB) / 6547.64 (MB) / 6572 (MB)
[Open3D DEBUG] #Set point constraints: 1.49152 (s), 6547.64 (MB) / 6547.64 (MB) / 6572 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 539897 / 499592 / 117433
[Open3D DEBUG] Memory Usage: 6547.641 MB
[Open3D DEBUG] # Linear system solved: 16.4058 (s), 6547.7 (MB) / 6547.7 (MB) / 6572 (MB)
[Open3D DEBUG] Got average: 0.474268 (s), 6547.7 (MB) / 6547.7 (MB) / 6572 (MB)
[Open3D DEBUG] Iso-Value: 5.038158e-01 = 2.555455e+04 / 5.072200e+04
[Open3D DEBUG] #          Total Solve:      86.8 (s),    6552.1 (MB)
TriangleMesh with 76864 points and 153654 triangles.
EMD: tensor([0.0279], dtype=torch.float64)
Chamfer: tensor([0.0359], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0237]); sim_loss: tensor([0.0287], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51177 / 44052
[Open3D DEBUG] #   Got kernel density: 0.321551 (s), 6551.65 (MB) / 6552.12 (MB) / 6583 (MB)
[Open3D DEBUG] #     Got normal field: 0.358359 (s), 6556.2 (MB) / 6556.2 (MB) / 6583 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.243093e-05 / 2.683258e+00
[Open3D DEBUG] #       Finalized tree: 1.61115 (s), 6556.59 (MB) / 6556.59 (MB) / 6583 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.47875 (s), 6556.59 (MB) / 6556.59 (MB) / 6583 (MB)
[Open3D DEBUG] #Set point constraints: 1.23659 (s), 6556.59 (MB) / 6556.59 (MB) / 6583 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 547982 / 504160 / 122105
[Open3D DEBUG] Memory Usage: 6556.586 MB
[Open3D DEBUG] # Linear system solved: 15.8616 (s), 6556.69 (MB) / 6556.69 (MB) / 6583 (MB)
[Open3D DEBUG] Got average: 0.4172 (s), 6556.69 (MB) / 6556.69 (MB) / 6583 (MB)
[Open3D DEBUG] Iso-Value: 5.030721e-01 = 2.574572e+04 / 5.117700e+04
[Open3D DEBUG] #          Total Solve:      87.2 (s),    6564.4 (MB)
TriangleMesh with 77051 points and 154000 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0261, mean: -0.0319, std: 0.0026
Selected top reward seqs: tensor([-0.0285, -0.0284, -0.0284, -0.0283, -0.0282, -0.0282, -0.0282, -0.0281,
        -0.0281, -0.0280, -0.0280, -0.0279, -0.0277, -0.0276, -0.0276, -0.0275,
        -0.0274, -0.0267, -0.0264, -0.0261])
Batch 0/20:
reward seqs after 6 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Loss: 0.024462413042783737
Optimal set of params:
mid_point: tensor([[0.4310, 0.1400, 0.5026],
        [0.4200, 0.1400, 0.4821]])
angle: tensor([1.0788, 0.9251], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0074, 0.0082], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2421, 0.1400, 0.8551, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1793, 0.1400, 0.8016, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51722 / 42863
[Open3D DEBUG] #   Got kernel density: 0.423594 (s), 6593.9 (MB) / 6593.9 (MB) / 6626 (MB)
[Open3D DEBUG] #     Got normal field: 0.403611 (s), 6598.16 (MB) / 6598.16 (MB) / 6626 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.278760e-05 / 2.213060e+00
[Open3D DEBUG] #       Finalized tree: 1.64422 (s), 6598.41 (MB) / 6598.41 (MB) / 6626 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.5768 (s), 6598.41 (MB) / 6598.41 (MB) / 6626 (MB)
[Open3D DEBUG] #Set point constraints: 1.06016 (s), 6598.41 (MB) / 6598.41 (MB) / 6626 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 555598 / 568792 / 66177
[Open3D DEBUG] Memory Usage: 6598.414 MB
[Open3D DEBUG] # Linear system solved: 12.2366 (s), 6598.41 (MB) / 6598.41 (MB) / 6626 (MB)
[Open3D DEBUG] Got average: 0.407462 (s), 6598.41 (MB) / 6598.41 (MB) / 6626 (MB)
[Open3D DEBUG] Iso-Value: 5.030631e-01 = 2.601943e+04 / 5.172200e+04
[Open3D DEBUG] #          Total Solve:      82.6 (s),    6606.4 (MB)
TriangleMesh with 86836 points and 173650 triangles.
EMD: tensor([0.0246], dtype=torch.float64)
Chamfer: tensor([0.0353], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0245]); sim_loss: tensor([0.0256], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51208 / 39388
[Open3D DEBUG] #   Got kernel density: 0.335973 (s), 6612.57 (MB) / 6612.57 (MB) / 6644 (MB)
[Open3D DEBUG] #     Got normal field: 0.258543 (s), 6614.51 (MB) / 6614.51 (MB) / 6644 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.278099e-05 / 1.678649e+00
[Open3D DEBUG] #       Finalized tree: 1.42988 (s), 6615.03 (MB) / 6615.03 (MB) / 6644 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.40668 (s), 6615.03 (MB) / 6615.03 (MB) / 6644 (MB)
[Open3D DEBUG] #Set point constraints: 1.30670 (s), 6615.03 (MB) / 6615.03 (MB) / 6644 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 491303 / 542072 / 19417
[Open3D DEBUG] Memory Usage: 6615.027 MB
[Open3D DEBUG] # Linear system solved: 16.0278 (s), 6615.03 (MB) / 6615.03 (MB) / 6644 (MB)
[Open3D DEBUG] Got average: 0.319898 (s), 6615.03 (MB) / 6615.03 (MB) / 6644 (MB)
[Open3D DEBUG] Iso-Value: 5.048980e-01 = 2.585481e+04 / 5.120800e+04
[Open3D DEBUG] #          Total Solve:      87.2 (s),    6615.5 (MB)
TriangleMesh with 80254 points and 160496 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0259, mean: -0.0323, std: 0.0030
Selected top reward seqs: tensor([-0.0285, -0.0284, -0.0284, -0.0283, -0.0279, -0.0275, -0.0275, -0.0273,
        -0.0273, -0.0272, -0.0271, -0.0268, -0.0268, -0.0268, -0.0265, -0.0265,
        -0.0265, -0.0262, -0.0259, -0.0259])
Batch 0/20:
reward seqs after 3 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 14 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 15 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 27 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 4 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 3 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 4 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Loss: 0.02461138181388378
Optimal set of params:
mid_point: tensor([[0.5061, 0.1400, 0.4857],
        [0.4886, 0.1400, 0.4804]])
angle: tensor([0.0184, 1.3790], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0096, 0.0094], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1062, 0.1400, 0.4931, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4123, 0.1400, 0.8731, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 51076 / 40823
[Open3D DEBUG] #   Got kernel density: 0.365163 (s), 6695.12 (MB) / 6695.12 (MB) / 6727 (MB)
[Open3D DEBUG] #     Got normal field: 0.481988 (s), 6696.56 (MB) / 6696.56 (MB) / 6727 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.577242e-05 / 1.827112e+00
[Open3D DEBUG] #       Finalized tree: 1.60421 (s), 6696.85 (MB) / 6696.85 (MB) / 6727 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.45299 (s), 6696.85 (MB) / 6696.85 (MB) / 6727 (MB)
[Open3D DEBUG] #Set point constraints: 1.7323 (s), 6696.85 (MB) / 6696.85 (MB) / 6727 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 525736 / 571656 / 29185
[Open3D DEBUG] Memory Usage: 6696.848 MB
[Open3D DEBUG] # Linear system solved: 11.1818 (s), 6696.85 (MB) / 6696.85 (MB) / 6727 (MB)
[Open3D DEBUG] Got average: 0.312098 (s), 6696.85 (MB) / 6696.85 (MB) / 6727 (MB)
[Open3D DEBUG] Iso-Value: 5.029248e-01 = 2.568739e+04 / 5.107600e+04
[Open3D DEBUG] #          Total Solve:      70.5 (s),    6703.6 (MB)
TriangleMesh with 87047 points and 174114 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0243, mean: -0.0298, std: 0.0029
Selected top reward seqs: tensor([-0.0261, -0.0260, -0.0259, -0.0259, -0.0258, -0.0256, -0.0256, -0.0254,
        -0.0253, -0.0253, -0.0253, -0.0253, -0.0253, -0.0251, -0.0250, -0.0248,
        -0.0245, -0.0245, -0.0243, -0.0243])
Batch 0/20:
reward seqs after 13 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 18 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 5 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 21 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 17 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 13 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 7 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 22 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 4 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Loss: 0.024301867932081223
Optimal set of params:
mid_point: tensor([[0.5593, 0.1400, 0.5726]])
angle: tensor([0.3886], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0077], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1891, 0.1400, 0.7241, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52345 / 40853
[Open3D DEBUG] #   Got kernel density: 0.382712 (s), 6644.01 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] #     Got normal field: 0.564171 (s), 6646.2 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.178891e-05 / 1.663991e+00
[Open3D DEBUG] #       Finalized tree: 1.43697 (s), 6647.46 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.29536 (s), 6647.46 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] #Set point constraints: 1.43691 (s), 6647.46 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 508908 / 567008 / 14601
[Open3D DEBUG] Memory Usage: 6647.461 MB
[Open3D DEBUG] # Linear system solved: 14.5733 (s), 6647.46 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] Got average: 0.353658 (s), 6647.46 (MB) / 6703.65 (MB) / 6727 (MB)
[Open3D DEBUG] Iso-Value: 5.032095e-01 = 2.634050e+04 / 5.234500e+04
[Open3D DEBUG] #          Total Solve:      82.8 (s),    6703.6 (MB)
TriangleMesh with 84320 points and 168628 triangles.
EMD: tensor([0.0250], dtype=torch.float64)
Chamfer: tensor([0.0354], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0243]); sim_loss: tensor([0.0260], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.6637, 0.1400, 0.8681, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8052, 0.1400, 0.7178, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2421, 0.1400, 0.8551, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1793, 0.1400, 0.8016, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0245]); Best sim loss: tensor([0.0256], dtype=torch.float64)
Wrote profile results to control.py.lprof
