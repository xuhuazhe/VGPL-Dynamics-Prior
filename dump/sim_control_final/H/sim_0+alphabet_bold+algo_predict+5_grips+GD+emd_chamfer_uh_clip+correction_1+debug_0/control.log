ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.196394 (s), 4290.02 (MB) / 4290.02 (MB) / 4330 (MB)
[Open3D DEBUG] #     Got normal field: 0.196271 (s), 4297.96 (MB) / 4297.96 (MB) / 4330 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997647e-05 / 9.944887e-01
[Open3D DEBUG] #       Finalized tree: 1.0574 (s), 4299.16 (MB) / 4299.16 (MB) / 4330 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.87706 (s), 4299.16 (MB) / 4299.16 (MB) / 4330 (MB)
[Open3D DEBUG] #Set point constraints: 0.666441 (s), 4299.16 (MB) / 4299.16 (MB) / 4330 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4299.160 MB
[Open3D DEBUG] # Linear system solved: 10.4318 (s), 4299.16 (MB) / 4299.16 (MB) / 4330 (MB)
[Open3D DEBUG] Got average: 0.290945 (s), 4299.16 (MB) / 4299.16 (MB) / 4330 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      56.1 (s),    4313.9 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0280, mean: -0.0382, std: 0.0047
Selected top reward seqs: tensor([-0.0312, -0.0311, -0.0310, -0.0309, -0.0308, -0.0307, -0.0307, -0.0305,
        -0.0305, -0.0303, -0.0301, -0.0299, -0.0299, -0.0297, -0.0296, -0.0292,
        -0.0290, -0.0289, -0.0283, -0.0280])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 16 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 16 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 30 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 5 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 28 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 12 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 18 iterations: tensor([-0.0301], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 25 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 15 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 19 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Loss: 0.02666172944009304
Optimal set of params:
mid_point: tensor([[0.4831, 0.1400, 0.5198],
        [0.4900, 0.1400, 0.5244]])
angle: tensor([1.9952, 1.5797], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6479, 0.1400, 0.8843, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4936, 0.1400, 0.9244, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51559 / 43035
[Open3D DEBUG] #   Got kernel density: 0.302292 (s), 5662.99 (MB) / 5662.99 (MB) / 5693 (MB)
[Open3D DEBUG] #     Got normal field: 0.514767 (s), 5671.02 (MB) / 5671.02 (MB) / 5693 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.391793e-05 / 2.264365e+00
[Open3D DEBUG] #       Finalized tree: 1.49457 (s), 5672.57 (MB) / 5672.57 (MB) / 5693 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.00293 (s), 5672.57 (MB) / 5672.57 (MB) / 5693 (MB)
[Open3D DEBUG] #Set point constraints: 1.00334 (s), 5672.57 (MB) / 5672.57 (MB) / 5693 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 543943 / 545264 / 76385
[Open3D DEBUG] Memory Usage: 5672.574 MB
[Open3D DEBUG] # Linear system solved: 12.1821 (s), 5672.58 (MB) / 5672.58 (MB) / 5693 (MB)
[Open3D DEBUG] Got average: 0.305594 (s), 5672.58 (MB) / 5672.58 (MB) / 5693 (MB)
[Open3D DEBUG] Iso-Value: 5.013531e-01 = 2.584926e+04 / 5.155900e+04
[Open3D DEBUG] #          Total Solve:      68.6 (s),    5690.9 (MB)
TriangleMesh with 84373 points and 168762 triangles.
EMD: tensor([0.0275], dtype=torch.float64)
Chamfer: tensor([0.0356], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0267]); sim_loss: tensor([0.0283], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49753 / 25615
[Open3D DEBUG] #   Got kernel density: 0.094779 (s), 5697.6 (MB) / 5697.6 (MB) / 5729 (MB)
[Open3D DEBUG] #     Got normal field: 0.154022 (s), 5698.46 (MB) / 5698.46 (MB) / 5729 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.316197e-05 / 6.548477e-01
[Open3D DEBUG] #       Finalized tree: 1.05597 (s), 5698.57 (MB) / 5698.57 (MB) / 5729 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.61078 (s), 5699.14 (MB) / 5699.14 (MB) / 5729 (MB)
[Open3D DEBUG] #Set point constraints: 0.517105 (s), 5699.14 (MB) / 5699.14 (MB) / 5729 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 249285 / 284256 / 641
[Open3D DEBUG] Memory Usage: 5699.141 MB
[Open3D DEBUG] # Linear system solved: 7.96070 (s), 5699.3 (MB) / 5699.3 (MB) / 5729 (MB)
[Open3D DEBUG] Got average: 0.253615 (s), 5699.3 (MB) / 5699.3 (MB) / 5729 (MB)
[Open3D DEBUG] Iso-Value: 5.114987e-01 = 2.544859e+04 / 4.975300e+04
[Open3D DEBUG] #          Total Solve:      51.9 (s),    5703.1 (MB)
TriangleMesh with 35740 points and 71468 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0277, mean: -0.0381, std: 0.0044
Selected top reward seqs: tensor([-0.0319, -0.0317, -0.0316, -0.0315, -0.0313, -0.0312, -0.0312, -0.0311,
        -0.0310, -0.0307, -0.0304, -0.0303, -0.0302, -0.0301, -0.0298, -0.0295,
        -0.0286, -0.0284, -0.0279, -0.0277])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 22 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 26 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0301], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 22 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 14 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 18 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Loss: 0.026203328743577003
Optimal set of params:
mid_point: tensor([[0.5299, 0.1400, 0.5183],
        [0.4980, 0.1400, 0.4922]])
angle: tensor([0.0623, 1.6232], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1307, 0.1400, 0.5432, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5189, 0.1400, 0.8916, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52126 / 43327
[Open3D DEBUG] #   Got kernel density: 0.326364 (s), 5835.2 (MB) / 5835.2 (MB) / 5867 (MB)
[Open3D DEBUG] #     Got normal field: 0.424382 (s), 5837.79 (MB) / 5837.79 (MB) / 5867 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.312933e-05 / 2.248160e+00
[Open3D DEBUG] #       Finalized tree: 1.43469 (s), 5838.83 (MB) / 5838.83 (MB) / 5867 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.14496 (s), 5838.83 (MB) / 5838.83 (MB) / 5867 (MB)
[Open3D DEBUG] #Set point constraints: 1.04569 (s), 5838.83 (MB) / 5838.83 (MB) / 5867 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 548542 / 553240 / 73665
[Open3D DEBUG] Memory Usage: 5838.832 MB
[Open3D DEBUG] # Linear system solved: 13.8795 (s), 5839.23 (MB) / 5839.23 (MB) / 5867 (MB)
[Open3D DEBUG] Got average: 0.328111 (s), 5839.46 (MB) / 5839.46 (MB) / 5867 (MB)
[Open3D DEBUG] Iso-Value: 5.029301e-01 = 2.621574e+04 / 5.212600e+04
[Open3D DEBUG] #          Total Solve:      71.1 (s),    5850.2 (MB)
TriangleMesh with 85950 points and 171928 triangles.
EMD: tensor([0.0267], dtype=torch.float64)
Chamfer: tensor([0.0367], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0262]); sim_loss: tensor([0.0277], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51813 / 23645
[Open3D DEBUG] #   Got kernel density: 0.0736010 (s), 5833.64 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] #     Got normal field: 0.146689 (s), 5834.37 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.130842e-05 / 5.859234e-01
[Open3D DEBUG] #       Finalized tree: 0.78949 (s), 5834.37 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.84562 (s), 5834.98 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] #Set point constraints: 0.450468 (s), 5834.98 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 225625 / 257736 / 121
[Open3D DEBUG] Memory Usage: 5834.980 MB
[Open3D DEBUG] # Linear system solved: 6.69103 (s), 5835.18 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] Got average: 0.183699 (s), 5835.18 (MB) / 5850.19 (MB) / 5867 (MB)
[Open3D DEBUG] Iso-Value: 5.089244e-01 = 2.636890e+04 / 5.181300e+04
[Open3D DEBUG] #          Total Solve:      41.6 (s),    5850.2 (MB)
TriangleMesh with 30739 points and 61466 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0258, mean: -0.0387, std: 0.0047
Selected top reward seqs: tensor([-0.0325, -0.0324, -0.0324, -0.0318, -0.0314, -0.0314, -0.0313, -0.0313,
        -0.0301, -0.0299, -0.0298, -0.0295, -0.0288, -0.0284, -0.0281, -0.0281,
        -0.0275, -0.0273, -0.0258, -0.0258])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 20 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 19 iterations: tensor([-0.0298], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0301], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 4 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 19 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 17 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Loss: 0.025729740038514137
Optimal set of params:
mid_point: tensor([[0.5243, 0.1400, 0.4617],
        [0.4664, 0.1400, 0.5557]])
angle: tensor([1.2501, 1.3823], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3982, 0.1400, 0.8413, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3914, 0.1400, 0.9486, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52213 / 42376
[Open3D DEBUG] #   Got kernel density: 0.3262 (s), 5950.27 (MB) / 5950.27 (MB) / 5991 (MB)
[Open3D DEBUG] #     Got normal field: 0.219078 (s), 5951.79 (MB) / 5951.79 (MB) / 5991 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.750790e-05 / 1.958400e+00
[Open3D DEBUG] #       Finalized tree: 1.46723 (s), 5951.91 (MB) / 5951.91 (MB) / 5991 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.07056 (s), 5951.94 (MB) / 5951.94 (MB) / 5991 (MB)
[Open3D DEBUG] #Set point constraints: 1.06513 (s), 5951.94 (MB) / 5951.94 (MB) / 5991 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 533310 / 566696 / 42801
[Open3D DEBUG] Memory Usage: 5951.941 MB
[Open3D DEBUG] # Linear system solved: 12.7568 (s), 5951.94 (MB) / 5951.94 (MB) / 5991 (MB)
[Open3D DEBUG] Got average: 0.338205 (s), 5951.94 (MB) / 5951.94 (MB) / 5991 (MB)
[Open3D DEBUG] Iso-Value: 5.031627e-01 = 2.627163e+04 / 5.221300e+04
[Open3D DEBUG] #          Total Solve:      69.0 (s),    5962.0 (MB)
TriangleMesh with 86312 points and 172632 triangles.
EMD: tensor([0.0399], dtype=torch.float64)
Chamfer: tensor([0.0434], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0257]); sim_loss: tensor([0.0402], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50730 / 42981
[Open3D DEBUG] #   Got kernel density: 0.254067 (s), 5932.14 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] #     Got normal field: 0.158729 (s), 5935.17 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.726822e-05 / 2.397917e+00
[Open3D DEBUG] #       Finalized tree: 1.43973 (s), 5935.21 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.01213 (s), 5935.21 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] #Set point constraints: 1.19799 (s), 5935.21 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 537041 / 518984 / 94777
[Open3D DEBUG] Memory Usage: 5935.207 MB
[Open3D DEBUG] # Linear system solved: 14.4152 (s), 5935.24 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] Got average: 0.347439 (s), 5935.43 (MB) / 5962.04 (MB) / 5991 (MB)
[Open3D DEBUG] Iso-Value: 5.028138e-01 = 2.550775e+04 / 5.073000e+04
[Open3D DEBUG] #          Total Solve:      71.0 (s),    5962.0 (MB)
TriangleMesh with 80491 points and 160930 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0295, mean: -0.0382, std: 0.0037
Selected top reward seqs: tensor([-0.0329, -0.0327, -0.0326, -0.0324, -0.0323, -0.0322, -0.0321, -0.0321,
        -0.0321, -0.0320, -0.0319, -0.0318, -0.0317, -0.0315, -0.0312, -0.0309,
        -0.0304, -0.0304, -0.0304, -0.0295])
Batch 0/20:
reward seqs after 26 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 14 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 4 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 22 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 33 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 15 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Loss: 0.02958366461098194
Optimal set of params:
mid_point: tensor([[0.5098, 0.1400, 0.4470],
        [0.5047, 0.1400, 0.5756]])
angle: tensor([3.0161, 1.5658], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0102, 0.0104], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9066, 0.1400, 0.4971, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5027, 0.1400, 0.9756, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52047 / 43011
[Open3D DEBUG] #   Got kernel density: 0.29599 (s), 6095.96 (MB) / 6095.96 (MB) / 6128 (MB)
[Open3D DEBUG] #     Got normal field: 0.317207 (s), 6098.1 (MB) / 6098.1 (MB) / 6128 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.075959e-05 / 2.121415e+00
[Open3D DEBUG] #       Finalized tree: 1.55070 (s), 6098.82 (MB) / 6098.82 (MB) / 6128 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.02257 (s), 6098.82 (MB) / 6098.82 (MB) / 6128 (MB)
[Open3D DEBUG] #Set point constraints: 0.965431 (s), 6098.82 (MB) / 6098.82 (MB) / 6128 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 560323 / 586896 / 53473
[Open3D DEBUG] Memory Usage: 6098.824 MB
[Open3D DEBUG] # Linear system solved: 11.8392 (s), 6098.82 (MB) / 6098.82 (MB) / 6128 (MB)
[Open3D DEBUG] Got average: 0.315436 (s), 6098.82 (MB) / 6098.82 (MB) / 6128 (MB)
[Open3D DEBUG] Iso-Value: 5.028744e-01 = 2.617311e+04 / 5.204700e+04
[Open3D DEBUG] #          Total Solve:      65.0 (s),    6108.3 (MB)
TriangleMesh with 91603 points and 183218 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0286, mean: -0.0412, std: 0.0049
Selected top reward seqs: tensor([-0.0338, -0.0335, -0.0334, -0.0330, -0.0329, -0.0327, -0.0324, -0.0321,
        -0.0316, -0.0315, -0.0313, -0.0307, -0.0306, -0.0306, -0.0304, -0.0299,
        -0.0294, -0.0290, -0.0286, -0.0286])
Batch 0/20:
reward seqs after 23 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 22 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 5 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 18 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 14 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 14 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0294], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 20 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Loss: 0.028616515919566154
Optimal set of params:
mid_point: tensor([[0.5017, 0.1400, 0.5172]])
angle: tensor([1.6410], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5298, 0.1400, 0.9162, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52254 / 45286
[Open3D DEBUG] #   Got kernel density: 0.274074 (s), 6079.67 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] #     Got normal field: 0.153645 (s), 6083.62 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.731276e-05 / 2.472281e+00
[Open3D DEBUG] #       Finalized tree: 1.4427 (s), 6083.75 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.97583 (s), 6083.75 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] #Set point constraints: 1.09911 (s), 6083.75 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 598620 / 602232 / 81905
[Open3D DEBUG] Memory Usage: 6083.754 MB
[Open3D DEBUG] # Linear system solved: 12.172 (s), 6083.75 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] Got average: 0.339172 (s), 6083.75 (MB) / 6108.32 (MB) / 6128 (MB)
[Open3D DEBUG] Iso-Value: 5.013604e-01 = 2.619809e+04 / 5.225400e+04
[Open3D DEBUG] #          Total Solve:      68.6 (s),    6108.3 (MB)
TriangleMesh with 97625 points and 195282 triangles.
EMD: tensor([0.0332], dtype=torch.float64)
Chamfer: tensor([0.0406], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0286]); sim_loss: tensor([0.0339], dtype=torch.float64) ===============
torch.Size([3, 11, 14]) torch.Size([3, 40, 12])
Best init pose: tensor([[0.6479, 0.1400, 0.8843, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1307, 0.1400, 0.5432, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5189, 0.1400, 0.8916, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0262]); Best sim loss: tensor([0.0277], dtype=torch.float64)
Wrote profile results to control.py.lprof
