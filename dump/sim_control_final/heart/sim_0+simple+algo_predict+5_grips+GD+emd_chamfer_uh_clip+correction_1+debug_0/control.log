ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.191311 (s), 4438.74 (MB) / 4438.74 (MB) / 4479 (MB)
[Open3D DEBUG] #     Got normal field: 0.0831919 (s), 4447.46 (MB) / 4447.46 (MB) / 4479 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997651e-05 / 9.944904e-01
[Open3D DEBUG] #       Finalized tree: 1.00963 (s), 4448.96 (MB) / 4448.96 (MB) / 4479 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.15236 (s), 4448.96 (MB) / 4448.96 (MB) / 4479 (MB)
[Open3D DEBUG] #Set point constraints: 0.665453 (s), 4448.96 (MB) / 4448.96 (MB) / 4479 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4448.957 MB
[Open3D DEBUG] # Linear system solved: 9.84467 (s), 4448.96 (MB) / 4448.96 (MB) / 4479 (MB)
[Open3D DEBUG] Got average: 0.23565 (s), 4448.96 (MB) / 4448.96 (MB) / 4479 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      68.5 (s),    4467.2 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0249, mean: -0.0323, std: 0.0034
Selected top reward seqs: tensor([-0.0278, -0.0277, -0.0277, -0.0276, -0.0275, -0.0274, -0.0273, -0.0272,
        -0.0270, -0.0269, -0.0269, -0.0269, -0.0267, -0.0262, -0.0261, -0.0261,
        -0.0260, -0.0260, -0.0257, -0.0249])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 14 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 5 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 27 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Loss: 0.023997796699404716
Optimal set of params:
mid_point: tensor([[0.4238, 0.1400, 0.5227],
        [0.4571, 0.1400, 0.4826]])
angle: tensor([1.9072, 1.8676], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0103, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5558, 0.1400, 0.9003, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5741, 0.1400, 0.8651, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50183 / 40935
[Open3D DEBUG] #   Got kernel density: 0.32357 (s), 6917.59 (MB) / 6917.59 (MB) / 6969 (MB)
[Open3D DEBUG] #     Got normal field: 0.575561 (s), 6926.8 (MB) / 6926.8 (MB) / 6969 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.827095e-05 / 1.920551e+00
[Open3D DEBUG] #       Finalized tree: 1.55509 (s), 6928.27 (MB) / 6928.27 (MB) / 6969 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.52811 (s), 6928.27 (MB) / 6928.27 (MB) / 6969 (MB)
[Open3D DEBUG] #Set point constraints: 1.26256 (s), 6928.27 (MB) / 6928.27 (MB) / 6969 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 518015 / 548096 / 43921
[Open3D DEBUG] Memory Usage: 6928.266 MB
[Open3D DEBUG] # Linear system solved: 11.6466 (s), 6928.71 (MB) / 6928.71 (MB) / 6969 (MB)
[Open3D DEBUG] Got average: 0.326852 (s), 6928.8 (MB) / 6928.8 (MB) / 6969 (MB)
[Open3D DEBUG] Iso-Value: 5.021178e-01 = 2.519778e+04 / 5.018300e+04
[Open3D DEBUG] #          Total Solve:      79.6 (s),    6939.7 (MB)
TriangleMesh with 82169 points and 164330 triangles.
EMD: tensor([0.0297], dtype=torch.float64)
Chamfer: tensor([0.0373], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0240]); sim_loss: tensor([0.0304], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49556 / 41488
[Open3D DEBUG] #   Got kernel density: 0.190133 (s), 6946.79 (MB) / 6946.79 (MB) / 6978 (MB)
[Open3D DEBUG] #     Got normal field: 0.196045 (s), 6951.74 (MB) / 6951.74 (MB) / 6978 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.418471e-05 / 2.189617e+00
[Open3D DEBUG] #       Finalized tree: 1.51368 (s), 6951.79 (MB) / 6951.79 (MB) / 6978 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.30390 (s), 6951.79 (MB) / 6951.79 (MB) / 6978 (MB)
[Open3D DEBUG] #Set point constraints: 1.3641 (s), 6951.79 (MB) / 6951.79 (MB) / 6978 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 517651 / 513168 / 78433
[Open3D DEBUG] Memory Usage: 6951.793 MB
[Open3D DEBUG] # Linear system solved: 12.0564 (s), 6951.86 (MB) / 6951.86 (MB) / 6978 (MB)
[Open3D DEBUG] Got average: 0.348622 (s), 6951.86 (MB) / 6951.86 (MB) / 6978 (MB)
[Open3D DEBUG] Iso-Value: 5.030416e-01 = 2.492873e+04 / 4.955600e+04
[Open3D DEBUG] #          Total Solve:      78.0 (s),    6965.7 (MB)
TriangleMesh with 77963 points and 155930 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0255, mean: -0.0317, std: 0.0034
Selected top reward seqs: tensor([-0.0274, -0.0272, -0.0271, -0.0270, -0.0269, -0.0268, -0.0268, -0.0266,
        -0.0264, -0.0263, -0.0261, -0.0261, -0.0260, -0.0260, -0.0259, -0.0259,
        -0.0258, -0.0257, -0.0257, -0.0255])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 23 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 6 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 20 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 20 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 4 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 19 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Loss: 0.024636277928948402
Optimal set of params:
mid_point: tensor([[0.4530, 0.1400, 0.4937],
        [0.5519, 0.1400, 0.5414]])
angle: tensor([1.4486, 1.1481], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0024, 0.0087], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4042, 0.1400, 0.8907, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3879, 0.1400, 0.9062, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50248 / 40655
[Open3D DEBUG] #   Got kernel density: 0.306784 (s), 6964.94 (MB) / 6965.7 (MB) / 6997 (MB)
[Open3D DEBUG] #     Got normal field: 0.440310 (s), 6967.79 (MB) / 6967.79 (MB) / 6997 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.697102e-05 / 1.857720e+00
[Open3D DEBUG] #       Finalized tree: 1.96172 (s), 6969.25 (MB) / 6969.25 (MB) / 6997 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.40908 (s), 6969.31 (MB) / 6969.31 (MB) / 6997 (MB)
[Open3D DEBUG] #Set point constraints: 1.35592 (s), 6969.39 (MB) / 6969.39 (MB) / 6997 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 516440 / 553624 / 36593
[Open3D DEBUG] Memory Usage: 6969.387 MB
[Open3D DEBUG] # Linear system solved: 12.4919 (s), 6969.72 (MB) / 6969.72 (MB) / 6997 (MB)
[Open3D DEBUG] Got average: 0.434894 (s), 6969.72 (MB) / 6969.72 (MB) / 6997 (MB)
[Open3D DEBUG] Iso-Value: 5.035124e-01 = 2.530049e+04 / 5.024800e+04
[Open3D DEBUG] #          Total Solve:      79.9 (s),    6978.7 (MB)
TriangleMesh with 82767 points and 165526 triangles.
EMD: tensor([0.0238], dtype=torch.float64)
Chamfer: tensor([0.0348], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0246]); sim_loss: tensor([0.0249], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50812 / 28338
[Open3D DEBUG] #   Got kernel density: 0.324782 (s), 6972.74 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] #     Got normal field: 0.395399 (s), 6973.57 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.451109e-05 / 7.373377e-01
[Open3D DEBUG] #       Finalized tree: 1.27578 (s), 6973.86 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.22678 (s), 6973.86 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] #Set point constraints: 0.602354 (s), 6973.86 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 279728 / 318912 / 777
[Open3D DEBUG] Memory Usage: 6973.859 MB
[Open3D DEBUG] # Linear system solved: 8.27846 (s), 6974.54 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] Got average: 0.289176 (s), 6974.54 (MB) / 6978.72 (MB) / 7004 (MB)
[Open3D DEBUG] Iso-Value: 5.047591e-01 = 2.564782e+04 / 5.081200e+04
[Open3D DEBUG] #          Total Solve:      69.5 (s),    6978.7 (MB)
TriangleMesh with 41154 points and 82296 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0244, mean: -0.0316, std: 0.0035
Selected top reward seqs: tensor([-0.0271, -0.0271, -0.0271, -0.0271, -0.0270, -0.0267, -0.0267, -0.0267,
        -0.0266, -0.0262, -0.0261, -0.0260, -0.0259, -0.0257, -0.0254, -0.0253,
        -0.0252, -0.0249, -0.0249, -0.0244])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 3 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 25 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 17 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Loss: 0.023774201050400734
Optimal set of params:
mid_point: tensor([[0.5286, 0.1400, 0.5357],
        [0.5439, 0.1400, 0.4788]])
angle: tensor([0.9566, 1.2947], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0092, 0.0087], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2981, 0.1400, 0.8626, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4349, 0.1400, 0.8636, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50753 / 40544
[Open3D DEBUG] #   Got kernel density: 0.290122 (s), 6975.5 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] #     Got normal field: 0.174525 (s), 6978.55 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.360456e-05 / 1.705532e+00
[Open3D DEBUG] #       Finalized tree: 1.38324 (s), 6978.56 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.54118 (s), 6978.56 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] #Set point constraints: 1.46469 (s), 6978.56 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 507592 / 559920 / 20185
[Open3D DEBUG] Memory Usage: 6978.562 MB
[Open3D DEBUG] # Linear system solved: 13.1396 (s), 6978.56 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] Got average: 0.380600 (s), 6978.56 (MB) / 6978.72 (MB) / 7007 (MB)
[Open3D DEBUG] Iso-Value: 5.021301e-01 = 2.548461e+04 / 5.075300e+04
[Open3D DEBUG] #          Total Solve:      84.2 (s),    6991.6 (MB)
TriangleMesh with 83749 points and 167494 triangles.
EMD: tensor([0.0242], dtype=torch.float64)
Chamfer: tensor([0.0352], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0238]); sim_loss: tensor([0.0253], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49542 / 42449
[Open3D DEBUG] #   Got kernel density: 0.287325 (s), 6996.93 (MB) / 6996.93 (MB) / 7029 (MB)
[Open3D DEBUG] #     Got normal field: 0.494871 (s), 6997.77 (MB) / 6997.77 (MB) / 7029 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.760792e-05 / 2.358592e+00
[Open3D DEBUG] #       Finalized tree: 1.53699 (s), 6997.93 (MB) / 6997.93 (MB) / 7029 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.5257 (s), 6998.07 (MB) / 6998.07 (MB) / 7029 (MB)
[Open3D DEBUG] #Set point constraints: 1.41020 (s), 6998.07 (MB) / 6998.07 (MB) / 7029 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 537412 / 522440 / 91745
[Open3D DEBUG] Memory Usage: 6998.074 MB
[Open3D DEBUG] # Linear system solved: 16.0181 (s), 6998.35 (MB) / 6998.35 (MB) / 7029 (MB)
[Open3D DEBUG] Got average: 0.42467 (s), 6998.35 (MB) / 6998.35 (MB) / 7029 (MB)
[Open3D DEBUG] Iso-Value: 5.021538e-01 = 2.487770e+04 / 4.954200e+04
[Open3D DEBUG] #          Total Solve:      90.2 (s),    7003.8 (MB)
TriangleMesh with 80256 points and 160462 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0250, mean: -0.0323, std: 0.0035
Selected top reward seqs: tensor([-0.0275, -0.0275, -0.0274, -0.0274, -0.0274, -0.0273, -0.0272, -0.0272,
        -0.0270, -0.0267, -0.0264, -0.0262, -0.0261, -0.0261, -0.0259, -0.0258,
        -0.0258, -0.0255, -0.0254, -0.0250])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 14 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 5 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 23 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 5 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 15 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Loss: 0.024591784924268723
Optimal set of params:
mid_point: tensor([[0.5364, 0.1400, 0.4413],
        [0.5127, 0.1400, 0.4448]])
angle: tensor([2.8706, 1.4203], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0085, 0.0090], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9218, 0.1400, 0.5484, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4527, 0.1400, 0.8402, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50533 / 39683
[Open3D DEBUG] #   Got kernel density: 0.192217 (s), 7064.58 (MB) / 7064.58 (MB) / 7102 (MB)
[Open3D DEBUG] #     Got normal field: 0.159063 (s), 7067.23 (MB) / 7067.23 (MB) / 7102 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.148623e-05 / 1.591094e+00
[Open3D DEBUG] #       Finalized tree: 1.72245 (s), 7067.69 (MB) / 7067.69 (MB) / 7102 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.26132 (s), 7067.69 (MB) / 7067.69 (MB) / 7102 (MB)
[Open3D DEBUG] #Set point constraints: 1.85993 (s), 7067.69 (MB) / 7067.69 (MB) / 7102 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 486025 / 539888 / 15569
[Open3D DEBUG] Memory Usage: 7067.691 MB
[Open3D DEBUG] # Linear system solved: 15.8037 (s), 7067.69 (MB) / 7067.69 (MB) / 7102 (MB)
[Open3D DEBUG] Got average: 0.326431 (s), 7067.69 (MB) / 7067.69 (MB) / 7102 (MB)
[Open3D DEBUG] Iso-Value: 5.022987e-01 = 2.538266e+04 / 5.053300e+04
[Open3D DEBUG] #          Total Solve:      77.7 (s),    7071.9 (MB)
TriangleMesh with 79740 points and 159468 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0239, mean: -0.0298, std: 0.0031
Selected top reward seqs: tensor([-0.0256, -0.0256, -0.0255, -0.0254, -0.0254, -0.0254, -0.0253, -0.0253,
        -0.0253, -0.0253, -0.0252, -0.0252, -0.0252, -0.0251, -0.0250, -0.0249,
        -0.0249, -0.0249, -0.0243, -0.0239])
Batch 0/20:
reward seqs after 4 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 5 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 7 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 22 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 5 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 18 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 24 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 13 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 19 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 26 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 17 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 18 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 21 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Loss: 0.023890791460871696
Optimal set of params:
mid_point: tensor([[0.4540, 0.1400, 0.4835]])
angle: tensor([1.8677], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0097], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5710, 0.1400, 0.8660, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50301 / 42113
[Open3D DEBUG] #   Got kernel density: 0.372618 (s), 7012.8 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] #     Got normal field: 0.326439 (s), 7015.52 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.975326e-05 / 1.999629e+00
[Open3D DEBUG] #       Finalized tree: 1.60602 (s), 7015.82 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.41609 (s), 7015.82 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] #Set point constraints: 1.25924 (s), 7015.82 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 543964 / 573480 / 48193
[Open3D DEBUG] Memory Usage: 7015.824 MB
[Open3D DEBUG] # Linear system solved: 16.1774 (s), 7015.82 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] Got average: 0.363806 (s), 7015.82 (MB) / 7071.88 (MB) / 7102 (MB)
[Open3D DEBUG] Iso-Value: 5.018430e-01 = 2.524320e+04 / 5.030100e+04
[Open3D DEBUG] #          Total Solve:      92.7 (s),    7071.9 (MB)
TriangleMesh with 87817 points and 175634 triangles.
EMD: tensor([0.0270], dtype=torch.float64)
Chamfer: tensor([0.0372], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0239]); sim_loss: tensor([0.0280], dtype=torch.float64) ===============
torch.Size([3, 11, 14]) torch.Size([3, 40, 12])
Best init pose: tensor([[0.5558, 0.1400, 0.9003, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4042, 0.1400, 0.8907, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3879, 0.1400, 0.9062, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0246]); Best sim loss: tensor([0.0249], dtype=torch.float64)
Wrote profile results to control.py.lprof
