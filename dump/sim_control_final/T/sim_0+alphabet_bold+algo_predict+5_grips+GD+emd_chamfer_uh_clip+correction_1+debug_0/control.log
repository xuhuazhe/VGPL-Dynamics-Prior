ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.290728 (s), 4435.89 (MB) / 4435.89 (MB) / 4484 (MB)
[Open3D DEBUG] #     Got normal field: 0.407290 (s), 4446.3 (MB) / 4446.3 (MB) / 4484 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997649e-05 / 9.944898e-01
[Open3D DEBUG] #       Finalized tree: 1.14655 (s), 4447.58 (MB) / 4447.58 (MB) / 4484 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.13777 (s), 4447.98 (MB) / 4447.98 (MB) / 4484 (MB)
[Open3D DEBUG] #Set point constraints: 0.817588 (s), 4447.98 (MB) / 4447.98 (MB) / 4484 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4447.984 MB
[Open3D DEBUG] # Linear system solved: 8.61398 (s), 4447.98 (MB) / 4447.98 (MB) / 4484 (MB)
[Open3D DEBUG] Got average: 0.312324 (s), 4447.98 (MB) / 4447.98 (MB) / 4484 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      65.8 (s),    4460.3 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0432, mean: -0.0550, std: 0.0059
Selected top reward seqs: tensor([-0.0478, -0.0478, -0.0477, -0.0475, -0.0475, -0.0473, -0.0473, -0.0472,
        -0.0470, -0.0468, -0.0468, -0.0467, -0.0467, -0.0463, -0.0461, -0.0455,
        -0.0455, -0.0437, -0.0436, -0.0432])
Batch 0/20:
reward seqs after 6 iterations: tensor([-0.0461], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 19 iterations: tensor([-0.0460], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 23 iterations: tensor([-0.0459], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 5 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 29 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 7 iterations: tensor([-0.0461], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 17 iterations: tensor([-0.0466], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0474], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 15 iterations: tensor([-0.0450], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0458], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 25 iterations: tensor([-0.0458], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0450], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 21 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 17 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Loss: 0.04158315435051918
Optimal set of params:
mid_point: tensor([[0.4466, 0.1400, 0.4471],
        [0.5263, 0.1400, 0.4960]])
angle: tensor([0.1152, 2.6521], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0099], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0493, 0.1400, 0.4931, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8793, 0.1400, 0.6841, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50937 / 43319
[Open3D DEBUG] #   Got kernel density: 0.292219 (s), 6490.5 (MB) / 6490.5 (MB) / 6521 (MB)
[Open3D DEBUG] #     Got normal field: 0.482498 (s), 6497.88 (MB) / 6497.88 (MB) / 6521 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.762112e-05 / 2.425677e+00
[Open3D DEBUG] #       Finalized tree: 1.63109 (s), 6499.64 (MB) / 6499.64 (MB) / 6521 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.5471 (s), 6499.64 (MB) / 6499.64 (MB) / 6521 (MB)
[Open3D DEBUG] #Set point constraints: 1.16682 (s), 6499.64 (MB) / 6499.64 (MB) / 6521 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 547982 / 534184 / 92081
[Open3D DEBUG] Memory Usage: 6499.645 MB
[Open3D DEBUG] # Linear system solved: 11.8136 (s), 6500.53 (MB) / 6500.53 (MB) / 6521 (MB)
[Open3D DEBUG] Got average: 0.453357 (s), 6500.55 (MB) / 6500.55 (MB) / 6521 (MB)
[Open3D DEBUG] Iso-Value: 5.023422e-01 = 2.558780e+04 / 5.093700e+04
[Open3D DEBUG] #          Total Solve:      76.9 (s),    6518.2 (MB)
TriangleMesh with 82742 points and 165492 triangles.
EMD: tensor([0.0514], dtype=torch.float64)
Chamfer: tensor([0.0454], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0416]); sim_loss: tensor([0.0508], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50677 / 42130
[Open3D DEBUG] #   Got kernel density: 0.321778 (s), 6524.58 (MB) / 6524.58 (MB) / 6556 (MB)
[Open3D DEBUG] #     Got normal field: 0.309893 (s), 6528.51 (MB) / 6528.51 (MB) / 6556 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.280901e-05 / 2.169432e+00
[Open3D DEBUG] #       Finalized tree: 1.66915 (s), 6529.78 (MB) / 6529.78 (MB) / 6556 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.60943 (s), 6529.78 (MB) / 6529.78 (MB) / 6556 (MB)
[Open3D DEBUG] #Set point constraints: 1.46918 (s), 6529.78 (MB) / 6529.78 (MB) / 6556 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 525974 / 529272 / 71841
[Open3D DEBUG] Memory Usage: 6529.781 MB
[Open3D DEBUG] # Linear system solved: 13.4874 (s), 6531.11 (MB) / 6531.11 (MB) / 6556 (MB)
[Open3D DEBUG] Got average: 0.359281 (s), 6531.11 (MB) / 6531.11 (MB) / 6556 (MB)
[Open3D DEBUG] Iso-Value: 5.015219e-01 = 2.541563e+04 / 5.067700e+04
[Open3D DEBUG] #          Total Solve:      79.6 (s),    6538.9 (MB)
TriangleMesh with 81707 points and 163426 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0424, mean: -0.0530, std: 0.0055
Selected top reward seqs: tensor([-0.0465, -0.0461, -0.0461, -0.0459, -0.0457, -0.0456, -0.0455, -0.0453,
        -0.0452, -0.0447, -0.0447, -0.0443, -0.0442, -0.0442, -0.0441, -0.0439,
        -0.0437, -0.0432, -0.0425, -0.0424])
Batch 0/20:
reward seqs after 6 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 3 iterations: tensor([-0.0449], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 14 iterations: tensor([-0.0470], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0452], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 17 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 14 iterations: tensor([-0.0452], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 5 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 31 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 26 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Loss: 0.04077837988734245
Optimal set of params:
mid_point: tensor([[0.5524, 0.1400, 0.4790],
        [0.5727, 0.1400, 0.5610]])
angle: tensor([3.0061, 2.4117], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0076], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9488, 0.1400, 0.5330, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8708, 0.1400, 0.8277, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51688 / 42213
[Open3D DEBUG] #   Got kernel density: 0.211243 (s), 6619.27 (MB) / 6619.27 (MB) / 6659 (MB)
[Open3D DEBUG] #     Got normal field: 0.277071 (s), 6623.4 (MB) / 6623.4 (MB) / 6659 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.895897e-05 / 2.013711e+00
[Open3D DEBUG] #       Finalized tree: 1.98369 (s), 6624.76 (MB) / 6624.76 (MB) / 6659 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.153 (s), 6624.76 (MB) / 6624.76 (MB) / 6659 (MB)
[Open3D DEBUG] #Set point constraints: 1.31688 (s), 6624.76 (MB) / 6624.76 (MB) / 6659 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 535991 / 565608 / 46953
[Open3D DEBUG] Memory Usage: 6624.758 MB
[Open3D DEBUG] # Linear system solved: 13.6878 (s), 6624.93 (MB) / 6624.93 (MB) / 6659 (MB)
[Open3D DEBUG] Got average: 0.360189 (s), 6624.93 (MB) / 6624.93 (MB) / 6659 (MB)
[Open3D DEBUG] Iso-Value: 5.035719e-01 = 2.602862e+04 / 5.168800e+04
[Open3D DEBUG] #          Total Solve:      82.6 (s),    6637.3 (MB)
TriangleMesh with 86362 points and 172716 triangles.
EMD: tensor([0.0536], dtype=torch.float64)
Chamfer: tensor([0.0465], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0408]); sim_loss: tensor([0.0529], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51991 / 44280
[Open3D DEBUG] #   Got kernel density: 0.555166 (s), 6642.94 (MB) / 6642.94 (MB) / 6683 (MB)
[Open3D DEBUG] #     Got normal field: 0.550477 (s), 6647.34 (MB) / 6647.34 (MB) / 6683 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.640490e-05 / 2.412637e+00
[Open3D DEBUG] #       Finalized tree: 1.66494 (s), 6647.62 (MB) / 6647.62 (MB) / 6683 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.18060 (s), 6647.62 (MB) / 6647.62 (MB) / 6683 (MB)
[Open3D DEBUG] #Set point constraints: 1.4267 (s), 6647.62 (MB) / 6647.62 (MB) / 6683 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 559462 / 552808 / 86577
[Open3D DEBUG] Memory Usage: 6647.625 MB
[Open3D DEBUG] # Linear system solved: 14.0974 (s), 6647.64 (MB) / 6647.64 (MB) / 6683 (MB)
[Open3D DEBUG] Got average: 0.384764 (s), 6647.64 (MB) / 6647.64 (MB) / 6683 (MB)
[Open3D DEBUG] Iso-Value: 5.019110e-01 = 2.609486e+04 / 5.199100e+04
[Open3D DEBUG] #          Total Solve:      81.5 (s),    6657.3 (MB)
TriangleMesh with 86584 points and 173140 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0406, mean: -0.0529, std: 0.0055
Selected top reward seqs: tensor([-0.0459, -0.0457, -0.0457, -0.0455, -0.0453, -0.0451, -0.0447, -0.0441,
        -0.0433, -0.0433, -0.0431, -0.0430, -0.0428, -0.0427, -0.0426, -0.0420,
        -0.0416, -0.0413, -0.0408, -0.0406])
Batch 0/20:
reward seqs after 3 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 28 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 21 iterations: tensor([-0.0456], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 26 iterations: tensor([-0.0444], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 14 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 12 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0412], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 14 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 28 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Loss: 0.03994528576731682
Optimal set of params:
mid_point: tensor([[0.5585, 0.1400, 0.5773],
        [0.4757, 0.1400, 0.5221]])
angle: tensor([1.5578, 1.9102], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0101, 0.0100], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5533, 0.1400, 0.9772, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6089, 0.1400, 0.8993, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50393 / 43035
[Open3D DEBUG] #   Got kernel density: 0.306441 (s), 6932.71 (MB) / 6932.71 (MB) / 6972 (MB)
[Open3D DEBUG] #     Got normal field: 0.265506 (s), 6934.77 (MB) / 6934.77 (MB) / 6972 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.515257e-05 / 2.275373e+00
[Open3D DEBUG] #       Finalized tree: 1.53382 (s), 6935.32 (MB) / 6935.32 (MB) / 6972 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.23547 (s), 6935.32 (MB) / 6935.32 (MB) / 6972 (MB)
[Open3D DEBUG] #Set point constraints: 1.28978 (s), 6935.32 (MB) / 6935.32 (MB) / 6972 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 564523 / 573936 / 71233
[Open3D DEBUG] Memory Usage: 6935.324 MB
[Open3D DEBUG] # Linear system solved: 14.1489 (s), 6935.32 (MB) / 6935.32 (MB) / 6972 (MB)
[Open3D DEBUG] Got average: 0.416642 (s), 6935.32 (MB) / 6935.32 (MB) / 6972 (MB)
[Open3D DEBUG] Iso-Value: 5.030925e-01 = 2.535234e+04 / 5.039300e+04
[Open3D DEBUG] #          Total Solve:      83.8 (s),    6937.4 (MB)
TriangleMesh with 90571 points and 181162 triangles.
EMD: tensor([0.0506], dtype=torch.float64)
Chamfer: tensor([0.0526], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0399]); sim_loss: tensor([0.0508], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49415 / 41079
[Open3D DEBUG] #   Got kernel density: 0.330296 (s), 6943.47 (MB) / 6943.47 (MB) / 6983 (MB)
[Open3D DEBUG] #     Got normal field: 0.404852 (s), 6945.15 (MB) / 6945.15 (MB) / 6983 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.124427e-05 / 2.038085e+00
[Open3D DEBUG] #       Finalized tree: 1.54998 (s), 6946.13 (MB) / 6946.13 (MB) / 6983 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.52522 (s), 6946.13 (MB) / 6946.13 (MB) / 6983 (MB)
[Open3D DEBUG] #Set point constraints: 1.27659 (s), 6946.13 (MB) / 6946.13 (MB) / 6983 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 525127 / 547728 / 52417
[Open3D DEBUG] Memory Usage: 6946.133 MB
[Open3D DEBUG] # Linear system solved: 12.8889 (s), 6946.13 (MB) / 6946.13 (MB) / 6983 (MB)
[Open3D DEBUG] Got average: 0.339749 (s), 6946.13 (MB) / 6946.13 (MB) / 6983 (MB)
[Open3D DEBUG] Iso-Value: 5.038372e-01 = 2.489711e+04 / 4.941500e+04
[Open3D DEBUG] #          Total Solve:      81.9 (s),    6954.4 (MB)
TriangleMesh with 85057 points and 170090 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0382, mean: -0.0510, std: 0.0055
Selected top reward seqs: tensor([-0.0443, -0.0442, -0.0441, -0.0437, -0.0437, -0.0437, -0.0436, -0.0434,
        -0.0431, -0.0430, -0.0427, -0.0424, -0.0422, -0.0418, -0.0417, -0.0417,
        -0.0416, -0.0412, -0.0395, -0.0382])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 19 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 19 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 4 iterations: tensor([-0.0426], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 19 iterations: tensor([-0.0426], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 6 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 17 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 22 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 18 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 14 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Loss: 0.03840918838977814
Optimal set of params:
mid_point: tensor([[0.5428, 0.1400, 0.4525],
        [0.4516, 0.1400, 0.4220]])
angle: tensor([2.9604, 0.0618], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0097, 0.0101], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9362, 0.1400, 0.5245, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0524, 0.1400, 0.4467, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52074 / 43220
[Open3D DEBUG] #   Got kernel density: 0.21159 (s), 7002.96 (MB) / 7002.96 (MB) / 7043 (MB)
[Open3D DEBUG] #     Got normal field: 0.26323 (s), 7006.73 (MB) / 7006.73 (MB) / 7043 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.905320e-05 / 2.033656e+00
[Open3D DEBUG] #       Finalized tree: 1.85523 (s), 7006.73 (MB) / 7006.73 (MB) / 7043 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.52224 (s), 7006.73 (MB) / 7006.73 (MB) / 7043 (MB)
[Open3D DEBUG] #Set point constraints: 1.85351 (s), 7006.73 (MB) / 7006.73 (MB) / 7043 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 556739 / 592000 / 44273
[Open3D DEBUG] Memory Usage: 7006.734 MB
[Open3D DEBUG] # Linear system solved: 17.6779 (s), 7006.76 (MB) / 7006.76 (MB) / 7043 (MB)
[Open3D DEBUG] Got average: 0.5638 (s), 7006.76 (MB) / 7006.76 (MB) / 7043 (MB)
[Open3D DEBUG] Iso-Value: 5.017240e-01 = 2.612677e+04 / 5.207400e+04
[Open3D DEBUG] #          Total Solve:      86.4 (s),    7017.1 (MB)
TriangleMesh with 97599 points and 195286 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0435, mean: -0.0532, std: 0.0051
Selected top reward seqs: tensor([-0.0481, -0.0477, -0.0476, -0.0476, -0.0475, -0.0473, -0.0471, -0.0471,
        -0.0470, -0.0468, -0.0465, -0.0465, -0.0465, -0.0462, -0.0462, -0.0457,
        -0.0453, -0.0450, -0.0450, -0.0435])
Batch 0/20:
reward seqs after 21 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0479], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0476], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0475], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0463], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0461], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 27 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0461], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 3 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0458], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 6 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 15 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 4 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Loss: 0.04344562068581581
Optimal set of params:
mid_point: tensor([[0.5426, 0.1400, 0.5797]])
angle: tensor([1.5386], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5297, 0.1400, 0.9795, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 48756 / 42807
[Open3D DEBUG] #   Got kernel density: 0.455456 (s), 6976.55 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] #     Got normal field: 0.644944 (s), 6977.38 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.865388e-05 / 2.372169e+00
[Open3D DEBUG] #       Finalized tree: 1.70385 (s), 6977.84 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.40251 (s), 6977.84 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] #Set point constraints: 1.34391 (s), 6977.84 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 571873 / 578544 / 75025
[Open3D DEBUG] Memory Usage: 6977.844 MB
[Open3D DEBUG] # Linear system solved: 15.3637 (s), 6977.85 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] Got average: 0.426337 (s), 6977.85 (MB) / 7017.12 (MB) / 7043 (MB)
[Open3D DEBUG] Iso-Value: 5.027887e-01 = 2.451397e+04 / 4.875600e+04
[Open3D DEBUG] #          Total Solve:      92.1 (s),    7017.1 (MB)
TriangleMesh with 92359 points and 184718 triangles.
EMD: tensor([0.0540], dtype=torch.float64)
Chamfer: tensor([0.0537], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0434]); sim_loss: tensor([0.0540], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.0493, 0.1400, 0.4931, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9488, 0.1400, 0.5330, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5533, 0.1400, 0.9772, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6089, 0.1400, 0.8993, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0399]); Best sim loss: tensor([0.0508], dtype=torch.float64)
Wrote profile results to control.py.lprof
