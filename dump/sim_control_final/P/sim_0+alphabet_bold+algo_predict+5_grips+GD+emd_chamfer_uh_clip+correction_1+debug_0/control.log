ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49784 / 31796
[Open3D DEBUG] #   Got kernel density: 0.214505 (s), 4279.53 (MB) / 4279.53 (MB) / 4320 (MB)
[Open3D DEBUG] #     Got normal field: 0.131082 (s), 4287.45 (MB) / 4287.45 (MB) / 4320 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.980666e-05 / 9.860545e-01
[Open3D DEBUG] #       Finalized tree: 1.16117 (s), 4288.47 (MB) / 4288.47 (MB) / 4320 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.07958 (s), 4288.82 (MB) / 4288.82 (MB) / 4320 (MB)
[Open3D DEBUG] #Set point constraints: 1.03796 (s), 4288.82 (MB) / 4288.82 (MB) / 4320 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336449 / 382056 / 2457
[Open3D DEBUG] Memory Usage: 4288.820 MB
[Open3D DEBUG] # Linear system solved: 9.41535 (s), 4288.82 (MB) / 4288.82 (MB) / 4320 (MB)
[Open3D DEBUG] Got average: 0.333236 (s), 4288.82 (MB) / 4288.82 (MB) / 4320 (MB)
[Open3D DEBUG] Iso-Value: 4.985178e-01 = 2.481821e+04 / 4.978400e+04
[Open3D DEBUG] #          Total Solve:      60.2 (s),    4308.3 (MB)
TriangleMesh with 50977 points and 101942 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0410, mean: -0.0552, std: 0.0051
Selected top reward seqs: tensor([-0.0483, -0.0477, -0.0475, -0.0474, -0.0465, -0.0464, -0.0463, -0.0463,
        -0.0461, -0.0458, -0.0458, -0.0455, -0.0454, -0.0449, -0.0435, -0.0425,
        -0.0423, -0.0417, -0.0414, -0.0410])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0471], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0484], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0489], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 21 iterations: tensor([-0.0456], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 19 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0468], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0450], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 14 iterations: tensor([-0.0460], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 20 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 19 iterations: tensor([-0.0463], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 26 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Loss: 0.04054136574268341
Optimal set of params:
mid_point: tensor([[0.4521, 0.1400, 0.4985],
        [0.4630, 0.1400, 0.5475]])
angle: tensor([0.2017, 0.9750], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0095, 0.0093], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0602, 0.1400, 0.5787, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2385, 0.1400, 0.8786, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 49712 / 42322
[Open3D DEBUG] #   Got kernel density: 0.340010 (s), 6094.62 (MB) / 6094.62 (MB) / 6125 (MB)
[Open3D DEBUG] #     Got normal field: 0.208596 (s), 6100.89 (MB) / 6100.89 (MB) / 6125 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.710522e-05 / 2.341695e+00
[Open3D DEBUG] #       Finalized tree: 1.50443 (s), 6101.73 (MB) / 6101.73 (MB) / 6125 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.13848 (s), 6101.73 (MB) / 6101.73 (MB) / 6125 (MB)
[Open3D DEBUG] #Set point constraints: 1.08163 (s), 6101.73 (MB) / 6101.73 (MB) / 6125 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 540891 / 530256 / 87905
[Open3D DEBUG] Memory Usage: 6101.727 MB
[Open3D DEBUG] # Linear system solved: 14.5998 (s), 6103.52 (MB) / 6103.52 (MB) / 6125 (MB)
[Open3D DEBUG] Got average: 0.362341 (s), 6103.52 (MB) / 6103.52 (MB) / 6125 (MB)
[Open3D DEBUG] Iso-Value: 5.025486e-01 = 2.498269e+04 / 4.971200e+04
[Open3D DEBUG] #          Total Solve:      73.4 (s),    6116.4 (MB)
TriangleMesh with 82435 points and 164870 triangles.
EMD: tensor([0.0358], dtype=torch.float64)
Chamfer: tensor([0.0399], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0405]); sim_loss: tensor([0.0363], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50383 / 39602
[Open3D DEBUG] #   Got kernel density: 0.311672 (s), 6110.86 (MB) / 6116.4 (MB) / 6149 (MB)
[Open3D DEBUG] #     Got normal field: 0.307831 (s), 6114.61 (MB) / 6116.4 (MB) / 6149 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.437965e-05 / 1.732150e+00
[Open3D DEBUG] #       Finalized tree: 1.56859 (s), 6116.7 (MB) / 6116.7 (MB) / 6149 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.00136 (s), 6116.7 (MB) / 6116.7 (MB) / 6149 (MB)
[Open3D DEBUG] #Set point constraints: 1.13068 (s), 6116.7 (MB) / 6116.7 (MB) / 6149 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 497246 / 543696 / 24585
[Open3D DEBUG] Memory Usage: 6116.695 MB
[Open3D DEBUG] # Linear system solved: 13.7649 (s), 6116.86 (MB) / 6116.86 (MB) / 6149 (MB)
[Open3D DEBUG] Got average: 0.312368 (s), 6116.86 (MB) / 6116.86 (MB) / 6149 (MB)
[Open3D DEBUG] Iso-Value: 5.045860e-01 = 2.542256e+04 / 5.038300e+04
[Open3D DEBUG] #          Total Solve:      65.5 (s),    6129.4 (MB)
TriangleMesh with 81732 points and 163472 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0410, mean: -0.0538, std: 0.0052
Selected top reward seqs: tensor([-0.0468, -0.0460, -0.0452, -0.0449, -0.0446, -0.0442, -0.0436, -0.0434,
        -0.0434, -0.0430, -0.0428, -0.0427, -0.0424, -0.0422, -0.0421, -0.0421,
        -0.0417, -0.0416, -0.0413, -0.0410])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 20 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 5 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 4 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 27 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 12 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Loss: 0.03845228627324104
Optimal set of params:
mid_point: tensor([[0.4476, 0.1400, 0.5549],
        [0.5508, 0.1400, 0.5429]])
angle: tensor([1.0343, 1.2246], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0098], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2431, 0.1400, 0.8987, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4150, 0.1400, 0.9192, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50548 / 42836
[Open3D DEBUG] #   Got kernel density: 0.347138 (s), 6287.3 (MB) / 6287.3 (MB) / 6320 (MB)
[Open3D DEBUG] #     Got normal field: 0.2371 (s), 6291.68 (MB) / 6291.68 (MB) / 6320 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.368045e-05 / 2.207959e+00
[Open3D DEBUG] #       Finalized tree: 1.46774 (s), 6292.05 (MB) / 6292.05 (MB) / 6320 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.25651 (s), 6292.72 (MB) / 6292.72 (MB) / 6320 (MB)
[Open3D DEBUG] #Set point constraints: 1.18752 (s), 6292.72 (MB) / 6292.72 (MB) / 6320 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 560694 / 578472 / 62321
[Open3D DEBUG] Memory Usage: 6292.719 MB
[Open3D DEBUG] # Linear system solved: 14.7958 (s), 6293.48 (MB) / 6293.48 (MB) / 6320 (MB)
[Open3D DEBUG] Got average: 0.424063 (s), 6293.48 (MB) / 6293.48 (MB) / 6320 (MB)
[Open3D DEBUG] Iso-Value: 5.018629e-01 = 2.536817e+04 / 5.054800e+04
[Open3D DEBUG] #          Total Solve:      74.7 (s),    6302.0 (MB)
TriangleMesh with 89268 points and 178528 triangles.
EMD: tensor([0.0389], dtype=torch.float64)
Chamfer: tensor([0.0422], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0385]); sim_loss: tensor([0.0392], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49002 / 43540
[Open3D DEBUG] #   Got kernel density: 0.371578 (s), 6307.83 (MB) / 6307.83 (MB) / 6339 (MB)
[Open3D DEBUG] #     Got normal field: 0.228609 (s), 6309.7 (MB) / 6309.7 (MB) / 6339 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.767087e-05 / 2.825988e+00
[Open3D DEBUG] #       Finalized tree: 1.88782 (s), 6310.39 (MB) / 6310.39 (MB) / 6339 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.10101 (s), 6310.39 (MB) / 6310.39 (MB) / 6339 (MB)
[Open3D DEBUG] #Set point constraints: 0.957906 (s), 6310.39 (MB) / 6310.39 (MB) / 6339 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 574834 / 538312 / 118641
[Open3D DEBUG] Memory Usage: 6310.391 MB
[Open3D DEBUG] # Linear system solved: 13.4543 (s), 6310.82 (MB) / 6310.82 (MB) / 6339 (MB)
[Open3D DEBUG] Got average: 0.373432 (s), 6310.82 (MB) / 6310.82 (MB) / 6339 (MB)
[Open3D DEBUG] Iso-Value: 5.031551e-01 = 2.465560e+04 / 4.900200e+04
[Open3D DEBUG] #          Total Solve:      73.6 (s),    6319.2 (MB)
TriangleMesh with 85661 points and 171210 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0397, mean: -0.0515, std: 0.0054
Selected top reward seqs: tensor([-0.0443, -0.0442, -0.0442, -0.0441, -0.0438, -0.0438, -0.0437, -0.0436,
        -0.0435, -0.0435, -0.0434, -0.0433, -0.0430, -0.0427, -0.0427, -0.0410,
        -0.0404, -0.0401, -0.0398, -0.0397])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 19 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 26 iterations: tensor([-0.0437], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 14 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 4 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 19 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 26 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 17 iterations: tensor([-0.0396], grad_fn=<CatBackward>)
Loss: 0.03695785254240036
Optimal set of params:
mid_point: tensor([[0.4174, 0.1400, 0.5768],
        [0.5025, 0.1400, 0.5509]])
angle: tensor([2.0571, 2.6180], grad_fn=<SelectBackward>)
gripper_rate: tensor([0., 0.], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6043, 0.1400, 0.9304, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8489, 0.1400, 0.7509, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53102 / 30869
[Open3D DEBUG] #   Got kernel density: 0.119165 (s), 6332.15 (MB) / 6332.15 (MB) / 6364 (MB)
[Open3D DEBUG] #     Got normal field: 0.177676 (s), 6332.78 (MB) / 6332.78 (MB) / 6364 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.561392e-05 / 8.291305e-01
[Open3D DEBUG] #       Finalized tree: 1.19118 (s), 6332.78 (MB) / 6332.78 (MB) / 6364 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.88451 (s), 6332.78 (MB) / 6332.78 (MB) / 6364 (MB)
[Open3D DEBUG] #Set point constraints: 0.918275 (s), 6332.78 (MB) / 6332.78 (MB) / 6364 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 310794 / 353744 / 1449
[Open3D DEBUG] Memory Usage: 6332.777 MB
[Open3D DEBUG] # Linear system solved: 9.84183 (s), 6332.78 (MB) / 6332.78 (MB) / 6364 (MB)
[Open3D DEBUG] Got average: 0.244559 (s), 6332.78 (MB) / 6332.78 (MB) / 6364 (MB)
[Open3D DEBUG] Iso-Value: 5.043272e-01 = 2.678078e+04 / 5.310200e+04
[Open3D DEBUG] #          Total Solve:      55.9 (s),    6334.3 (MB)
TriangleMesh with 47749 points and 95482 triangles.
EMD: tensor([0.0362], dtype=torch.float64)
Chamfer: tensor([0.0430], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0370]); sim_loss: tensor([0.0369], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51533 / 29871
[Open3D DEBUG] #   Got kernel density: 0.21941 (s), 6340.49 (MB) / 6340.49 (MB) / 6372 (MB)
[Open3D DEBUG] #     Got normal field: 0.230521 (s), 6340.54 (MB) / 6340.54 (MB) / 6372 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.530033e-05 / 7.884719e-01
[Open3D DEBUG] #       Finalized tree: 1.1379 (s), 6340.67 (MB) / 6340.67 (MB) / 6372 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.00646 (s), 6340.67 (MB) / 6340.67 (MB) / 6372 (MB)
[Open3D DEBUG] #Set point constraints: 0.662854 (s), 6340.67 (MB) / 6340.67 (MB) / 6372 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 302702 / 344320 / 1625
[Open3D DEBUG] Memory Usage: 6340.672 MB
[Open3D DEBUG] # Linear system solved: 9.47108 (s), 6340.67 (MB) / 6340.67 (MB) / 6372 (MB)
[Open3D DEBUG] Got average: 0.252225 (s), 6340.67 (MB) / 6340.67 (MB) / 6372 (MB)
[Open3D DEBUG] Iso-Value: 5.060434e-01 = 2.607793e+04 / 5.153300e+04
[Open3D DEBUG] #          Total Solve:      59.9 (s),    6345.4 (MB)
TriangleMesh with 45996 points and 91980 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0388, mean: -0.0510, std: 0.0055
Selected top reward seqs: tensor([-0.0446, -0.0444, -0.0441, -0.0439, -0.0438, -0.0438, -0.0436, -0.0434,
        -0.0433, -0.0431, -0.0429, -0.0429, -0.0424, -0.0423, -0.0402, -0.0397,
        -0.0395, -0.0393, -0.0389, -0.0388])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 22 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 29 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 14 iterations: tensor([-0.0369], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 26 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 12 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 20 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Loss: 0.036739498376846313
Optimal set of params:
mid_point: tensor([[0.4780, 0.1400, 0.4325],
        [0.4737, 0.1400, 0.5592]])
angle: tensor([0.3276, 0.8997], grad_fn=<SelectBackward>)
gripper_rate: tensor([0., 0.], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0993, 0.1400, 0.5612, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2250, 0.1400, 0.8724, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 53961 / 28627
[Open3D DEBUG] #   Got kernel density: 0.127433 (s), 6405.71 (MB) / 6405.71 (MB) / 6437 (MB)
[Open3D DEBUG] #     Got normal field: 0.106867 (s), 6406.32 (MB) / 6406.32 (MB) / 6437 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.316283e-05 / 7.102795e-01
[Open3D DEBUG] #       Finalized tree: 1.03413 (s), 6406.32 (MB) / 6406.32 (MB) / 6437 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.90842 (s), 6406.32 (MB) / 6406.32 (MB) / 6437 (MB)
[Open3D DEBUG] #Set point constraints: 0.630352 (s), 6406.32 (MB) / 6406.32 (MB) / 6437 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 279448 / 318624 / 745
[Open3D DEBUG] Memory Usage: 6406.316 MB
[Open3D DEBUG] # Linear system solved: 9.24402 (s), 6406.32 (MB) / 6406.32 (MB) / 6437 (MB)
[Open3D DEBUG] Got average: 0.287003 (s), 6406.32 (MB) / 6406.32 (MB) / 6437 (MB)
[Open3D DEBUG] Iso-Value: 5.080001e-01 = 2.741220e+04 / 5.396100e+04
[Open3D DEBUG] #          Total Solve:      51.1 (s),    6408.3 (MB)
TriangleMesh with 41348 points and 82680 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0370, mean: -0.0470, std: 0.0052
Selected top reward seqs: tensor([-0.0404, -0.0403, -0.0401, -0.0400, -0.0399, -0.0398, -0.0396, -0.0396,
        -0.0395, -0.0392, -0.0385, -0.0385, -0.0385, -0.0383, -0.0382, -0.0381,
        -0.0379, -0.0375, -0.0372, -0.0370])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 4 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 20 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 25 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0373], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 27 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 14 iterations: tensor([-0.0359], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0371], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 18 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Loss: 0.03528599068522453
Optimal set of params:
mid_point: tensor([[0.4610, 0.1400, 0.4262]])
angle: tensor([0.1455], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0087], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0652, 0.1400, 0.4842, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51840 / 41329
[Open3D DEBUG] #   Got kernel density: 0.223737 (s), 6355.41 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] #     Got normal field: 0.168497 (s), 6355.98 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.296663e-05 / 1.708990e+00
[Open3D DEBUG] #       Finalized tree: 1.39355 (s), 6356.47 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.9829 (s), 6356.47 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] #Set point constraints: 1.00829 (s), 6356.47 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 514270 / 568520 / 19217
[Open3D DEBUG] Memory Usage: 6356.473 MB
[Open3D DEBUG] # Linear system solved: 12.8829 (s), 6356.63 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] Got average: 0.349465 (s), 6356.63 (MB) / 6408.31 (MB) / 6437 (MB)
[Open3D DEBUG] Iso-Value: 5.034282e-01 = 2.609772e+04 / 5.184000e+04
[Open3D DEBUG] #          Total Solve:      68.1 (s),    6408.3 (MB)
TriangleMesh with 85723 points and 171430 triangles.
EMD: tensor([0.0391], dtype=torch.float64)
Chamfer: tensor([0.0416], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0353]); sim_loss: tensor([0.0394], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.0602, 0.1400, 0.5787, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2385, 0.1400, 0.8786, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0405]); Best sim loss: tensor([0.0363], dtype=torch.float64)
Wrote profile results to control.py.lprof
