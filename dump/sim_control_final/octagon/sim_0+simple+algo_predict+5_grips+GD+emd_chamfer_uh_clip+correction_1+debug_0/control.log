ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49784 / 31796
[Open3D DEBUG] #   Got kernel density: 0.318921 (s), 4433.16 (MB) / 4433.16 (MB) / 4473 (MB)
[Open3D DEBUG] #     Got normal field: 0.246384 (s), 4437.95 (MB) / 4437.95 (MB) / 4473 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.980665e-05 / 9.860544e-01
[Open3D DEBUG] #       Finalized tree: 1.28373 (s), 4439.98 (MB) / 4439.98 (MB) / 4473 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.31551 (s), 4439.98 (MB) / 4439.98 (MB) / 4473 (MB)
[Open3D DEBUG] #Set point constraints: 1.16501 (s), 4439.98 (MB) / 4439.98 (MB) / 4473 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336449 / 382056 / 2457
[Open3D DEBUG] Memory Usage: 4439.984 MB
[Open3D DEBUG] # Linear system solved: 12.2547 (s), 4440.26 (MB) / 4440.26 (MB) / 4473 (MB)
[Open3D DEBUG] Got average: 0.376233 (s), 4440.26 (MB) / 4440.26 (MB) / 4473 (MB)
[Open3D DEBUG] Iso-Value: 4.985178e-01 = 2.481821e+04 / 4.978400e+04
[Open3D DEBUG] #          Total Solve:      77.0 (s),    4464.1 (MB)
TriangleMesh with 50977 points and 101942 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0238, mean: -0.0292, std: 0.0023
Selected top reward seqs: tensor([-0.0263, -0.0262, -0.0262, -0.0262, -0.0262, -0.0262, -0.0260, -0.0260,
        -0.0259, -0.0258, -0.0256, -0.0255, -0.0255, -0.0252, -0.0250, -0.0250,
        -0.0249, -0.0248, -0.0248, -0.0238])
Batch 0/20:
reward seqs after 18 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 8 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0234], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 25 iterations: tensor([-0.0230], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 27 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0230], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Loss: 0.02296266332268715
Optimal set of params:
mid_point: tensor([[0.5717, 0.1400, 0.4342],
        [0.5594, 0.1400, 0.4482]])
angle: tensor([2.1127, 2.1759], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7780, 0.1400, 0.7769, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7869, 0.1400, 0.7772, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52479 / 30562
[Open3D DEBUG] #   Got kernel density: 0.278788 (s), 6359.95 (MB) / 6359.95 (MB) / 6389 (MB)
[Open3D DEBUG] #     Got normal field: 0.517438 (s), 6365.14 (MB) / 6365.14 (MB) / 6389 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.587590e-05 / 8.331512e-01
[Open3D DEBUG] #       Finalized tree: 1.49975 (s), 6365.74 (MB) / 6365.74 (MB) / 6389 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.46060 (s), 6365.74 (MB) / 6365.74 (MB) / 6389 (MB)
[Open3D DEBUG] #Set point constraints: 1.28175 (s), 6365.74 (MB) / 6365.74 (MB) / 6389 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 304018 / 346424 / 1025
[Open3D DEBUG] Memory Usage: 6365.738 MB
[Open3D DEBUG] # Linear system solved: 17.5713 (s), 6366.95 (MB) / 6366.95 (MB) / 6389 (MB)
[Open3D DEBUG] Got average: 0.389611 (s), 6366.95 (MB) / 6366.95 (MB) / 6389 (MB)
[Open3D DEBUG] Iso-Value: 5.058118e-01 = 2.654449e+04 / 5.247900e+04
[Open3D DEBUG] #          Total Solve:      82.7 (s),    6374.1 (MB)
TriangleMesh with 45908 points and 91804 triangles.
EMD: tensor([0.0248], dtype=torch.float64)
Chamfer: tensor([0.0352], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0230]); sim_loss: tensor([0.0259], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49848 / 42366
[Open3D DEBUG] #   Got kernel density: 0.279895 (s), 6380.92 (MB) / 6380.92 (MB) / 6412 (MB)
[Open3D DEBUG] #     Got normal field: 0.711984 (s), 6384.27 (MB) / 6384.27 (MB) / 6412 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.170480e-05 / 2.577381e+00
[Open3D DEBUG] #       Finalized tree: 1.66206 (s), 6384.68 (MB) / 6384.68 (MB) / 6412 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.59721 (s), 6384.83 (MB) / 6384.83 (MB) / 6412 (MB)
[Open3D DEBUG] #Set point constraints: 1.23306 (s), 6384.83 (MB) / 6384.83 (MB) / 6412 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 524931 / 485792 / 114129
[Open3D DEBUG] Memory Usage: 6384.832 MB
[Open3D DEBUG] # Linear system solved: 16.7936 (s), 6385.21 (MB) / 6385.21 (MB) / 6412 (MB)
[Open3D DEBUG] Got average: 0.468912 (s), 6385.21 (MB) / 6385.21 (MB) / 6412 (MB)
[Open3D DEBUG] Iso-Value: 5.023419e-01 = 2.504074e+04 / 4.984800e+04
[Open3D DEBUG] #          Total Solve:      86.3 (s),    6397.1 (MB)
TriangleMesh with 74150 points and 148176 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0250, mean: -0.0302, std: 0.0024
Selected top reward seqs: tensor([-0.0271, -0.0271, -0.0270, -0.0270, -0.0269, -0.0269, -0.0269, -0.0268,
        -0.0268, -0.0268, -0.0266, -0.0264, -0.0263, -0.0263, -0.0263, -0.0261,
        -0.0261, -0.0260, -0.0259, -0.0250])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 20 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0234], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 4 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 12 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 18 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Loss: 0.023268796503543854
Optimal set of params:
mid_point: tensor([[0.5791, 0.1400, 0.5616],
        [0.5060, 0.1400, 0.4404]])
angle: tensor([0.2496, 2.5405], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0073, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1915, 0.1400, 0.6604, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.1400, 0.6666, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53739 / 31559
[Open3D DEBUG] #   Got kernel density: 0.327505 (s), 6624.13 (MB) / 6624.13 (MB) / 6663 (MB)
[Open3D DEBUG] #     Got normal field: 0.297254 (s), 6625.56 (MB) / 6625.56 (MB) / 6663 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.589292e-05 / 8.540696e-01
[Open3D DEBUG] #       Finalized tree: 1.53297 (s), 6625.7 (MB) / 6625.7 (MB) / 6663 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.51342 (s), 6625.7 (MB) / 6625.7 (MB) / 6663 (MB)
[Open3D DEBUG] #Set point constraints: 1.2759 (s), 6625.7 (MB) / 6625.7 (MB) / 6663 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 319082 / 364376 / 289
[Open3D DEBUG] Memory Usage: 6625.703 MB
[Open3D DEBUG] # Linear system solved: 13.8556 (s), 6625.9 (MB) / 6625.9 (MB) / 6663 (MB)
[Open3D DEBUG] Got average: 0.283371 (s), 6626.0 (MB) / 6626.0 (MB) / 6663 (MB)
[Open3D DEBUG] Iso-Value: 5.045931e-01 = 2.711633e+04 / 5.373900e+04
[Open3D DEBUG] #          Total Solve:      75.9 (s),    6628.7 (MB)
TriangleMesh with 47940 points and 95868 triangles.
EMD: tensor([0.0247], dtype=torch.float64)
Chamfer: tensor([0.0371], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0233]); sim_loss: tensor([0.0260], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 52134 / 38164
[Open3D DEBUG] #   Got kernel density: 0.236713 (s), 6634.21 (MB) / 6634.21 (MB) / 6673 (MB)
[Open3D DEBUG] #     Got normal field: 0.190854 (s), 6637.11 (MB) / 6637.11 (MB) / 6673 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.641536e-05 / 1.377138e+00
[Open3D DEBUG] #       Finalized tree: 1.54943 (s), 6637.12 (MB) / 6637.12 (MB) / 6673 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.20676 (s), 6637.12 (MB) / 6637.12 (MB) / 6673 (MB)
[Open3D DEBUG] #Set point constraints: 1.02125 (s), 6637.12 (MB) / 6637.12 (MB) / 6673 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 446524 / 505584 / 4729
[Open3D DEBUG] Memory Usage: 6637.117 MB
[Open3D DEBUG] # Linear system solved: 15.7223 (s), 6637.12 (MB) / 6637.12 (MB) / 6673 (MB)
[Open3D DEBUG] Got average: 0.370157 (s), 6637.12 (MB) / 6637.12 (MB) / 6673 (MB)
[Open3D DEBUG] Iso-Value: 5.026367e-01 = 2.620446e+04 / 5.213400e+04
[Open3D DEBUG] #          Total Solve:      78.9 (s),    6649.8 (MB)
TriangleMesh with 73419 points and 146850 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0235, mean: -0.0298, std: 0.0023
Selected top reward seqs: tensor([-0.0270, -0.0270, -0.0269, -0.0269, -0.0269, -0.0268, -0.0268, -0.0267,
        -0.0267, -0.0267, -0.0266, -0.0265, -0.0263, -0.0262, -0.0256, -0.0252,
        -0.0249, -0.0249, -0.0243, -0.0235])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 15 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 19 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 16 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 7 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 25 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0233], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 23 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Loss: 0.02267446555197239
Optimal set of params:
mid_point: tensor([[0.5735, 0.1400, 0.4364],
        [0.4329, 0.1400, 0.4398]])
angle: tensor([2.0581, 1.0901], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0102, 0.0087], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7608, 0.1400, 0.7898, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2479, 0.1400, 0.7945, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51365 / 41624
[Open3D DEBUG] #   Got kernel density: 0.273877 (s), 6656.05 (MB) / 6656.05 (MB) / 6694 (MB)
[Open3D DEBUG] #     Got normal field: 0.522107 (s), 6662.5 (MB) / 6662.5 (MB) / 6694 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.792381e-05 / 1.947957e+00
[Open3D DEBUG] #       Finalized tree: 2.6356 (s), 6663.44 (MB) / 6663.44 (MB) / 6694 (MB)
[Open3D DEBUG] #  Set FEM constraints: 3.23792 (s), 6663.44 (MB) / 6663.44 (MB) / 6694 (MB)
[Open3D DEBUG] #Set point constraints: 1.61102 (s), 6663.7 (MB) / 6663.7 (MB) / 6694 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 537720 / 572152 / 42385
[Open3D DEBUG] Memory Usage: 6663.699 MB
[Open3D DEBUG] # Linear system solved: 22.7488 (s), 6664.29 (MB) / 6664.29 (MB) / 6694 (MB)
[Open3D DEBUG] Got average: 0.485819 (s), 6664.29 (MB) / 6664.29 (MB) / 6694 (MB)
[Open3D DEBUG] Iso-Value: 5.036103e-01 = 2.586794e+04 / 5.136500e+04
[Open3D DEBUG] #          Total Solve:     104.4 (s),    6674.2 (MB)
TriangleMesh with 86417 points and 172822 triangles.
EMD: tensor([0.0242], dtype=torch.float64)
Chamfer: tensor([0.0359], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0227]); sim_loss: tensor([0.0253], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50224 / 42705
[Open3D DEBUG] #   Got kernel density: 0.404311 (s), 6680.15 (MB) / 6680.15 (MB) / 6718 (MB)
[Open3D DEBUG] #     Got normal field: 0.774394 (s), 6682.88 (MB) / 6682.88 (MB) / 6718 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.865123e-05 / 2.443460e+00
[Open3D DEBUG] #       Finalized tree: 1.63429 (s), 6683.65 (MB) / 6683.65 (MB) / 6718 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.21484 (s), 6683.65 (MB) / 6683.65 (MB) / 6718 (MB)
[Open3D DEBUG] #Set point constraints: 2.98189 (s), 6683.66 (MB) / 6683.66 (MB) / 6718 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 540415 / 518984 / 98633
[Open3D DEBUG] Memory Usage: 6683.656 MB
[Open3D DEBUG] # Linear system solved: 20.053 (s), 6683.82 (MB) / 6683.82 (MB) / 6718 (MB)
[Open3D DEBUG] Got average: 0.462109 (s), 6683.82 (MB) / 6683.82 (MB) / 6718 (MB)
[Open3D DEBUG] Iso-Value: 5.029254e-01 = 2.525893e+04 / 5.022400e+04
[Open3D DEBUG] #          Total Solve:      97.2 (s),    6695.4 (MB)
TriangleMesh with 79990 points and 159902 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0241, mean: -0.0304, std: 0.0026
Selected top reward seqs: tensor([-0.0271, -0.0271, -0.0270, -0.0270, -0.0270, -0.0268, -0.0267, -0.0267,
        -0.0267, -0.0266, -0.0266, -0.0265, -0.0264, -0.0260, -0.0260, -0.0259,
        -0.0256, -0.0256, -0.0247, -0.0241])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 4 iterations: tensor([-0.0224], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 6 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0225], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 18 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 3 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 24 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0241], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 19 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0228], grad_fn=<CatBackward>)
Loss: 0.022395774722099304
Optimal set of params:
mid_point: tensor([[0.5217, 0.1400, 0.5399],
        [0.4811, 0.1400, 0.4232]])
angle: tensor([0.7664, 2.6097], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0075, 0.0027], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2335, 0.1400, 0.8174, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8259, 0.1400, 0.6261, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50750 / 42787
[Open3D DEBUG] #   Got kernel density: 0.184703 (s), 6750.88 (MB) / 6750.88 (MB) / 6788 (MB)
[Open3D DEBUG] #     Got normal field: 0.215384 (s), 6752.47 (MB) / 6752.47 (MB) / 6788 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.511136e-05 / 2.289401e+00
[Open3D DEBUG] #       Finalized tree: 1.7647 (s), 6752.61 (MB) / 6752.61 (MB) / 6788 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.75644 (s), 6752.61 (MB) / 6752.61 (MB) / 6788 (MB)
[Open3D DEBUG] #Set point constraints: 1.84864 (s), 6752.61 (MB) / 6752.61 (MB) / 6788 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 543523 / 540424 / 80745
[Open3D DEBUG] Memory Usage: 6752.609 MB
[Open3D DEBUG] # Linear system solved: 19.0272 (s), 6752.61 (MB) / 6752.61 (MB) / 6788 (MB)
[Open3D DEBUG] Got average: 0.539841 (s), 6752.61 (MB) / 6752.61 (MB) / 6788 (MB)
[Open3D DEBUG] Iso-Value: 5.031758e-01 = 2.553617e+04 / 5.075000e+04
[Open3D DEBUG] #          Total Solve:      91.5 (s),    6758.1 (MB)
TriangleMesh with 83319 points and 166612 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0232, mean: -0.0276, std: 0.0019
Selected top reward seqs: tensor([-0.0251, -0.0250, -0.0250, -0.0250, -0.0250, -0.0248, -0.0248, -0.0247,
        -0.0247, -0.0246, -0.0245, -0.0244, -0.0244, -0.0244, -0.0243, -0.0241,
        -0.0241, -0.0233, -0.0233, -0.0232])
Batch 0/20:
reward seqs after 30 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 28 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 26 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 21 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 22 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 31 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0234], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 13 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0225], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 22 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 24 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 19 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0219], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Loss: 0.021923335269093513
Optimal set of params:
mid_point: tensor([[0.4498, 0.1400, 0.4471]])
angle: tensor([0.6905], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0086], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1414, 0.1400, 0.7019, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50159 / 42440
[Open3D DEBUG] #   Got kernel density: 0.443075 (s), 6704.49 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] #     Got normal field: 0.257175 (s), 6706.84 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.685519e-05 / 2.350209e+00
[Open3D DEBUG] #       Finalized tree: 1.57822 (s), 6707.11 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.18494 (s), 6707.11 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] #Set point constraints: 1.60010 (s), 6707.11 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 538385 / 524000 / 91297
[Open3D DEBUG] Memory Usage: 6707.105 MB
[Open3D DEBUG] # Linear system solved: 12.9411 (s), 6707.11 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] Got average: 0.379841 (s), 6707.11 (MB) / 6758.08 (MB) / 6788 (MB)
[Open3D DEBUG] Iso-Value: 5.036253e-01 = 2.526134e+04 / 5.015900e+04
[Open3D DEBUG] #          Total Solve:      85.8 (s),    6758.1 (MB)
TriangleMesh with 80041 points and 160044 triangles.
EMD: tensor([0.0237], dtype=torch.float64)
Chamfer: tensor([0.0349], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0219]); sim_loss: tensor([0.0248], dtype=torch.float64) ===============
torch.Size([5, 11, 14]) torch.Size([5, 40, 12])
Best init pose: tensor([[0.7780, 0.1400, 0.7769, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1915, 0.1400, 0.6604, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7608, 0.1400, 0.7898, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2335, 0.1400, 0.8174, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1414, 0.1400, 0.7019, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0219]); Best sim loss: tensor([0.0248], dtype=torch.float64)
Wrote profile results to control.py.lprof
