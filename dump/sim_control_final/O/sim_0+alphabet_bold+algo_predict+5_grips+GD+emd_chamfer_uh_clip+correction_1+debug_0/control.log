ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49784 / 31795
[Open3D DEBUG] #   Got kernel density: 0.280355 (s), 4421.91 (MB) / 4421.91 (MB) / 4462 (MB)
[Open3D DEBUG] #     Got normal field: 0.681127 (s), 4432.26 (MB) / 4432.26 (MB) / 4462 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.980661e-05 / 9.860523e-01
[Open3D DEBUG] #       Finalized tree: 1.26824 (s), 4434.27 (MB) / 4434.27 (MB) / 4462 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.70925 (s), 4434.27 (MB) / 4434.27 (MB) / 4462 (MB)
[Open3D DEBUG] #Set point constraints: 1.00925 (s), 4434.27 (MB) / 4434.27 (MB) / 4462 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336449 / 382056 / 2457
[Open3D DEBUG] Memory Usage: 4434.270 MB
[Open3D DEBUG] # Linear system solved: 12.2623 (s), 4434.27 (MB) / 4434.27 (MB) / 4462 (MB)
[Open3D DEBUG] Got average: 0.254757 (s), 4434.27 (MB) / 4434.27 (MB) / 4462 (MB)
[Open3D DEBUG] Iso-Value: 4.985180e-01 = 2.481822e+04 / 4.978400e+04
[Open3D DEBUG] #          Total Solve:      77.8 (s),    4452.7 (MB)
TriangleMesh with 50977 points and 101942 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0239, mean: -0.0302, std: 0.0030
Selected top reward seqs: tensor([-0.0261, -0.0261, -0.0261, -0.0260, -0.0260, -0.0260, -0.0259, -0.0257,
        -0.0256, -0.0256, -0.0252, -0.0250, -0.0250, -0.0249, -0.0248, -0.0243,
        -0.0243, -0.0242, -0.0242, -0.0239])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 23 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 15 iterations: tensor([-0.0234], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0228], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 3 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0230], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 17 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0216], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0227], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 19 iterations: tensor([-0.0215], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 26 iterations: tensor([-0.0220], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 16 iterations: tensor([-0.0208], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0231], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0221], grad_fn=<CatBackward>)
Loss: 0.020755793899297714
Optimal set of params:
mid_point: tensor([[0.4254, 0.1400, 0.4326],
        [0.5108, 0.1400, 0.5303]])
angle: tensor([1.2470, 2.5151], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0101, 0.0086], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2981, 0.1400, 0.8118, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8348, 0.1400, 0.7648, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50139 / 42178
[Open3D DEBUG] #   Got kernel density: 0.281466 (s), 6249.09 (MB) / 6249.09 (MB) / 6278 (MB)
[Open3D DEBUG] #     Got normal field: 0.413523 (s), 6256.52 (MB) / 6256.52 (MB) / 6278 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.310491e-05 / 2.161237e+00
[Open3D DEBUG] #       Finalized tree: 1.72919 (s), 6257.78 (MB) / 6257.78 (MB) / 6278 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.85302 (s), 6257.78 (MB) / 6257.78 (MB) / 6278 (MB)
[Open3D DEBUG] #Set point constraints: 1.59039 (s), 6257.78 (MB) / 6257.78 (MB) / 6278 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 534318 / 543656 / 66993
[Open3D DEBUG] Memory Usage: 6257.777 MB
[Open3D DEBUG] # Linear system solved: 17.6909 (s), 6257.78 (MB) / 6257.78 (MB) / 6278 (MB)
[Open3D DEBUG] Got average: 0.526382 (s), 6257.78 (MB) / 6257.78 (MB) / 6278 (MB)
[Open3D DEBUG] Iso-Value: 5.024990e-01 = 2.519480e+04 / 5.013900e+04
[Open3D DEBUG] #          Total Solve:      88.6 (s),    6270.9 (MB)
TriangleMesh with 84156 points and 168288 triangles.
EMD: tensor([0.0265], dtype=torch.float64)
Chamfer: tensor([0.0347], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0208]); sim_loss: tensor([0.0273], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49806 / 41054
[Open3D DEBUG] #   Got kernel density: 0.46619 (s), 6277.36 (MB) / 6277.36 (MB) / 6309 (MB)
[Open3D DEBUG] #     Got normal field: 0.496559 (s), 6278.92 (MB) / 6278.92 (MB) / 6309 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.144581e-05 / 2.064250e+00
[Open3D DEBUG] #       Finalized tree: 1.62077 (s), 6280.05 (MB) / 6280.05 (MB) / 6309 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.75086 (s), 6280.05 (MB) / 6280.05 (MB) / 6309 (MB)
[Open3D DEBUG] #Set point constraints: 2.85014 (s), 6280.05 (MB) / 6280.05 (MB) / 6309 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 507865 / 514560 / 65857
[Open3D DEBUG] Memory Usage: 6280.051 MB
[Open3D DEBUG] # Linear system solved: 18.6514 (s), 6280.62 (MB) / 6280.62 (MB) / 6309 (MB)
[Open3D DEBUG] Got average: 0.461576 (s), 6280.62 (MB) / 6280.62 (MB) / 6309 (MB)
[Open3D DEBUG] Iso-Value: 5.043382e-01 = 2.511907e+04 / 4.980600e+04
[Open3D DEBUG] #          Total Solve:      94.1 (s),    6289.3 (MB)
TriangleMesh with 77533 points and 155010 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0234, mean: -0.0305, std: 0.0034
Selected top reward seqs: tensor([-0.0261, -0.0259, -0.0258, -0.0256, -0.0256, -0.0255, -0.0252, -0.0251,
        -0.0249, -0.0249, -0.0249, -0.0249, -0.0248, -0.0248, -0.0245, -0.0244,
        -0.0243, -0.0243, -0.0243, -0.0234])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0229], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 24 iterations: tensor([-0.0242], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 5 iterations: tensor([-0.0231], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0232], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 23 iterations: tensor([-0.0225], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0237], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0226], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 16 iterations: tensor([-0.0238], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 16 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0225], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0222], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 6 iterations: tensor([-0.0230], grad_fn=<CatBackward>)
Loss: 0.02220182865858078
Optimal set of params:
mid_point: tensor([[0.5080, 0.1400, 0.4442],
        [0.5408, 0.1400, 0.4647]])
angle: tensor([2.9546, 2.6581], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0100, 0.0083], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9010, 0.1400, 0.5185, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8950, 0.1400, 0.6507, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51028 / 41338
[Open3D DEBUG] #   Got kernel density: 0.430656 (s), 6958.45 (MB) / 6958.45 (MB) / 6990 (MB)
[Open3D DEBUG] #     Got normal field: 0.443248 (s), 6960.31 (MB) / 6960.31 (MB) / 6990 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.627899e-05 / 1.851244e+00
[Open3D DEBUG] #       Finalized tree: 1.63033 (s), 6960.93 (MB) / 6960.93 (MB) / 6990 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.34467 (s), 6960.99 (MB) / 6960.99 (MB) / 6990 (MB)
[Open3D DEBUG] #Set point constraints: 1.76615 (s), 6960.99 (MB) / 6960.99 (MB) / 6990 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 524238 / 568184 / 30945
[Open3D DEBUG] Memory Usage: 6960.992 MB
[Open3D DEBUG] # Linear system solved: 15.1851 (s), 6961.45 (MB) / 6961.45 (MB) / 6990 (MB)
[Open3D DEBUG] Got average: 0.423683 (s), 6961.45 (MB) / 6961.45 (MB) / 6990 (MB)
[Open3D DEBUG] Iso-Value: 5.026370e-01 = 2.564856e+04 / 5.102800e+04
[Open3D DEBUG] #          Total Solve:      80.6 (s),    6965.2 (MB)
TriangleMesh with 86488 points and 172972 triangles.
EMD: tensor([0.0354], dtype=torch.float64)
Chamfer: tensor([0.0391], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0222]); sim_loss: tensor([0.0357], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50360 / 41544
[Open3D DEBUG] #   Got kernel density: 0.198409 (s), 6971.49 (MB) / 6971.49 (MB) / 7003 (MB)
[Open3D DEBUG] #     Got normal field: 0.191361 (s), 6973.11 (MB) / 6973.11 (MB) / 7003 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.950172e-05 / 1.989307e+00
[Open3D DEBUG] #       Finalized tree: 1.62866 (s), 6973.43 (MB) / 6973.43 (MB) / 7003 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.49985 (s), 6973.43 (MB) / 6973.43 (MB) / 7003 (MB)
[Open3D DEBUG] #Set point constraints: 1.64125 (s), 6973.43 (MB) / 6973.43 (MB) / 7003 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 528977 / 556448 / 48097
[Open3D DEBUG] Memory Usage: 6973.426 MB
[Open3D DEBUG] # Linear system solved: 16.1066 (s), 6973.43 (MB) / 6973.43 (MB) / 7003 (MB)
[Open3D DEBUG] Got average: 0.404850 (s), 6973.43 (MB) / 6973.43 (MB) / 7003 (MB)
[Open3D DEBUG] Iso-Value: 5.013584e-01 = 2.524841e+04 / 5.036000e+04
[Open3D DEBUG] #          Total Solve:      81.3 (s),    6983.5 (MB)
TriangleMesh with 85134 points and 170284 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0239, mean: -0.0312, std: 0.0030
Selected top reward seqs: tensor([-0.0272, -0.0272, -0.0272, -0.0270, -0.0266, -0.0266, -0.0266, -0.0266,
        -0.0265, -0.0264, -0.0264, -0.0263, -0.0261, -0.0260, -0.0260, -0.0259,
        -0.0254, -0.0250, -0.0243, -0.0239])
Batch 0/20:
reward seqs after 14 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 17 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 6 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 29 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0236], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0228], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0231], grad_fn=<CatBackward>)
Loss: 0.022774526849389076
Optimal set of params:
mid_point: tensor([[0.5275, 0.1400, 0.5030],
        [0.5182, 0.1400, 0.4846]])
angle: tensor([1.6878, 2.4174], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0094, 0.0095], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5741, 0.1400, 0.9003, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8178, 0.1400, 0.7496, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50491 / 45338
[Open3D DEBUG] #   Got kernel density: 0.319601 (s), 7030.82 (MB) / 7030.82 (MB) / 7062 (MB)
[Open3D DEBUG] #     Got normal field: 0.497965 (s), 7035.46 (MB) / 7035.46 (MB) / 7062 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.917053e-05 / 2.987579e+00
[Open3D DEBUG] #       Finalized tree: 2.18491 (s), 7037.41 (MB) / 7037.41 (MB) / 7062 (MB)
[Open3D DEBUG] #  Set FEM constraints: 3.01603 (s), 7037.41 (MB) / 7037.41 (MB) / 7062 (MB)
[Open3D DEBUG] #Set point constraints: 1.99795 (s), 7037.41 (MB) / 7037.41 (MB) / 7062 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 605326 / 554632 / 137169
[Open3D DEBUG] Memory Usage: 7037.410 MB
[Open3D DEBUG] # Linear system solved: 18.7086 (s), 7037.48 (MB) / 7037.48 (MB) / 7062 (MB)
[Open3D DEBUG] Got average: 0.438728 (s), 7037.48 (MB) / 7037.48 (MB) / 7062 (MB)
[Open3D DEBUG] Iso-Value: 5.013952e-01 = 2.531595e+04 / 5.049100e+04
[Open3D DEBUG] #          Total Solve:      96.1 (s),    7046.5 (MB)
TriangleMesh with 88583 points and 177092 triangles.
EMD: tensor([0.0329], dtype=torch.float64)
Chamfer: tensor([0.0373], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0228]); sim_loss: tensor([0.0333], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50718 / 41421
[Open3D DEBUG] #   Got kernel density: 0.408388 (s), 7051.57 (MB) / 7051.57 (MB) / 7084 (MB)
[Open3D DEBUG] #     Got normal field: 0.360014 (s), 7053.48 (MB) / 7053.48 (MB) / 7084 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.623433e-05 / 1.837733e+00
[Open3D DEBUG] #       Finalized tree: 1.59506 (s), 7053.79 (MB) / 7053.79 (MB) / 7084 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.25283 (s), 7054.09 (MB) / 7054.09 (MB) / 7084 (MB)
[Open3D DEBUG] #Set point constraints: 1.27806 (s), 7054.09 (MB) / 7054.09 (MB) / 7084 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 523482 / 567368 / 30897
[Open3D DEBUG] Memory Usage: 7054.094 MB
[Open3D DEBUG] # Linear system solved: 18.3911 (s), 7054.39 (MB) / 7054.39 (MB) / 7084 (MB)
[Open3D DEBUG] Got average: 0.416028 (s), 7054.39 (MB) / 7054.39 (MB) / 7084 (MB)
[Open3D DEBUG] Iso-Value: 5.027341e-01 = 2.549767e+04 / 5.071800e+04
[Open3D DEBUG] #          Total Solve:      91.4 (s),    7065.4 (MB)
TriangleMesh with 87615 points and 175234 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0234, mean: -0.0301, std: 0.0024
Selected top reward seqs: tensor([-0.0272, -0.0271, -0.0271, -0.0270, -0.0270, -0.0270, -0.0269, -0.0268,
        -0.0267, -0.0266, -0.0266, -0.0266, -0.0265, -0.0264, -0.0262, -0.0262,
        -0.0259, -0.0253, -0.0244, -0.0234])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 30 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 5 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0248], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 8 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 24 iterations: tensor([-0.0235], grad_fn=<CatBackward>)
Loss: 0.02347242645919323
Optimal set of params:
mid_point: tensor([[0.4455, 0.1400, 0.4589],
        [0.5461, 0.1400, 0.4708]])
angle: tensor([0.7145, 2.3408], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0099, 0.0095], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1433, 0.1400, 0.7210, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8245, 0.1400, 0.7579, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50718 / 44886
[Open3D DEBUG] #   Got kernel density: 0.356372 (s), 7139.02 (MB) / 7139.02 (MB) / 7178 (MB)
[Open3D DEBUG] #     Got normal field: 0.245547 (s), 7140.79 (MB) / 7140.79 (MB) / 7178 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.559143e-05 / 2.819486e+00
[Open3D DEBUG] #       Finalized tree: 1.76759 (s), 7141.05 (MB) / 7141.05 (MB) / 7178 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.34015 (s), 7141.05 (MB) / 7141.05 (MB) / 7178 (MB)
[Open3D DEBUG] #Set point constraints: 1.41517 (s), 7141.05 (MB) / 7141.05 (MB) / 7178 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 592383 / 559168 / 117841
[Open3D DEBUG] Memory Usage: 7141.047 MB
[Open3D DEBUG] # Linear system solved: 18.2712 (s), 7141.22 (MB) / 7141.22 (MB) / 7178 (MB)
[Open3D DEBUG] Got average: 0.460939 (s), 7141.22 (MB) / 7141.22 (MB) / 7178 (MB)
[Open3D DEBUG] Iso-Value: 5.018275e-01 = 2.545169e+04 / 5.071800e+04
[Open3D DEBUG] #          Total Solve:      90.1 (s),    7141.7 (MB)
TriangleMesh with 88883 points and 177708 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0265, mean: -0.0308, std: 0.0021
Selected top reward seqs: tensor([-0.0283, -0.0282, -0.0282, -0.0280, -0.0280, -0.0280, -0.0280, -0.0280,
        -0.0279, -0.0279, -0.0278, -0.0276, -0.0275, -0.0275, -0.0274, -0.0272,
        -0.0272, -0.0269, -0.0268, -0.0265])
Batch 0/20:
reward seqs after 25 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 5 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 7 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 21 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 22 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 6 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 25 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 31 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 16 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0271], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 20 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Loss: 0.02644984982907772
Optimal set of params:
mid_point: tensor([[0.4701, 0.1400, 0.4284]])
angle: tensor([0.3286], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0915, 0.1400, 0.5575, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50126 / 42634
[Open3D DEBUG] #   Got kernel density: 0.339614 (s), 7125.13 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] #     Got normal field: 0.327499 (s), 7127.2 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.206065e-05 / 2.108332e+00
[Open3D DEBUG] #       Finalized tree: 1.67369 (s), 7127.61 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.36054 (s), 7127.61 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] #Set point constraints: 1.56176 (s), 7127.61 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 558818 / 583960 / 54689
[Open3D DEBUG] Memory Usage: 7127.613 MB
[Open3D DEBUG] # Linear system solved: 14.7042 (s), 7127.78 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] Got average: 0.452681 (s), 7127.78 (MB) / 7141.69 (MB) / 7178 (MB)
[Open3D DEBUG] Iso-Value: 5.025197e-01 = 2.518930e+04 / 5.012600e+04
[Open3D DEBUG] #          Total Solve:      83.9 (s),    7141.7 (MB)
TriangleMesh with 90277 points and 180550 triangles.
EMD: tensor([0.0295], dtype=torch.float64)
Chamfer: tensor([0.0372], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0264]); sim_loss: tensor([0.0302], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.2981, 0.1400, 0.8118, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8348, 0.1400, 0.7648, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0208]); Best sim loss: tensor([0.0273], dtype=torch.float64)
Wrote profile results to control.py.lprof
