ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.248681 (s), 4323.88 (MB) / 4323.88 (MB) / 4345 (MB)
[Open3D DEBUG] #     Got normal field: 0.0870700 (s), 4331.59 (MB) / 4331.59 (MB) / 4345 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048150e-05 / 8.944269e-01
[Open3D DEBUG] #       Finalized tree: 0.972462 (s), 4332.84 (MB) / 4332.84 (MB) / 4345 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.70512 (s), 4332.84 (MB) / 4332.84 (MB) / 4345 (MB)
[Open3D DEBUG] #Set point constraints: 0.584936 (s), 4332.84 (MB) / 4332.84 (MB) / 4345 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4332.836 MB
[Open3D DEBUG] # Linear system solved: 7.71281 (s), 4332.84 (MB) / 4332.84 (MB) / 4345 (MB)
[Open3D DEBUG] Got average: 0.227209 (s), 4332.84 (MB) / 4332.84 (MB) / 4345 (MB)
[Open3D DEBUG] Iso-Value: 5.039395e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      51.9 (s),    4347.4 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0466, mean: -0.0516, std: 0.0020
Selected top reward seqs: tensor([-0.0486, -0.0486, -0.0485, -0.0482, -0.0482, -0.0482, -0.0480, -0.0480,
        -0.0478, -0.0477, -0.0476, -0.0473, -0.0473, -0.0472, -0.0472, -0.0472,
        -0.0472, -0.0466, -0.0466, -0.0466])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 26 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 14 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0471], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0484], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 19 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0467], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0467], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 19 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0468], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 16 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Loss: 0.045309558510780334
Optimal set of params:
mid_point: tensor([[0.5222, 0.1400, 0.4981],
        [0.4653, 0.1400, 0.4419]])
angle: tensor([2.9462, 2.9046], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9146, 0.1400, 0.5758, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8541, 0.1400, 0.5358, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 43840 / 37924
[Open3D DEBUG] #   Got kernel density: 0.214443 (s), 5631.82 (MB) / 5631.82 (MB) / 5663 (MB)
[Open3D DEBUG] #     Got normal field: 0.135093 (s), 5638.61 (MB) / 5638.61 (MB) / 5663 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.480832e-05 / 2.402797e+00
[Open3D DEBUG] #       Finalized tree: 1.34732 (s), 5639.07 (MB) / 5639.07 (MB) / 5663 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.87685 (s), 5639.07 (MB) / 5639.07 (MB) / 5663 (MB)
[Open3D DEBUG] #Set point constraints: 1.05518 (s), 5639.07 (MB) / 5639.07 (MB) / 5663 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 482280 / 440496 / 110681
[Open3D DEBUG] Memory Usage: 5639.074 MB
[Open3D DEBUG] # Linear system solved: 9.92761 (s), 5639.07 (MB) / 5639.07 (MB) / 5663 (MB)
[Open3D DEBUG] Got average: 0.314615 (s), 5639.07 (MB) / 5639.07 (MB) / 5663 (MB)
[Open3D DEBUG] Iso-Value: 5.029106e-01 = 2.204760e+04 / 4.384000e+04
[Open3D DEBUG] #          Total Solve:      59.5 (s),    5652.5 (MB)
TriangleMesh with 66628 points and 133176 triangles.
EMD: tensor([0.0425], dtype=torch.float64)
Chamfer: tensor([0.0448], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0453]); sim_loss: tensor([0.0427], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 45127 / 21374
[Open3D DEBUG] #   Got kernel density: 0.16484 (s), 5645.71 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] #     Got normal field: 0.0531352 (s), 5646.53 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.142846e-05 / 5.157320e-01
[Open3D DEBUG] #       Finalized tree: 0.750707 (s), 5646.56 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.67443 (s), 5646.56 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] #Set point constraints: 0.401907 (s), 5646.56 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 209770 / 239712 / 25
[Open3D DEBUG] Memory Usage: 5646.562 MB
[Open3D DEBUG] # Linear system solved: 5.33358 (s), 5647.28 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] Got average: 0.196839 (s), 5647.28 (MB) / 5652.49 (MB) / 5677 (MB)
[Open3D DEBUG] Iso-Value: 5.119859e-01 = 2.310439e+04 / 4.512700e+04
[Open3D DEBUG] #          Total Solve:      37.8 (s),    5652.5 (MB)
TriangleMesh with 27467 points and 54922 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0455, mean: -0.0515, std: 0.0019
Selected top reward seqs: tensor([-0.0493, -0.0492, -0.0491, -0.0490, -0.0490, -0.0487, -0.0487, -0.0487,
        -0.0487, -0.0480, -0.0476, -0.0474, -0.0473, -0.0471, -0.0471, -0.0467,
        -0.0466, -0.0464, -0.0463, -0.0455])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0505], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 29 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0476], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 14 iterations: tensor([-0.0475], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 14 iterations: tensor([-0.0491], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 17 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0463], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0473], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0468], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0470], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 5 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 19 iterations: tensor([-0.0459], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 4 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Loss: 0.04447227716445923
Optimal set of params:
mid_point: tensor([[0.5738, 0.1400, 0.5200],
        [0.4447, 0.1400, 0.4256]])
angle: tensor([0.8139, 2.8526], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2991, 0.1400, 0.8108, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.1400, 0.5395, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44292 / 38052
[Open3D DEBUG] #   Got kernel density: 0.204233 (s), 5713.98 (MB) / 5713.98 (MB) / 5746 (MB)
[Open3D DEBUG] #     Got normal field: 0.117452 (s), 5715.71 (MB) / 5715.71 (MB) / 5746 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.163069e-05 / 2.286827e+00
[Open3D DEBUG] #       Finalized tree: 1.33354 (s), 5715.74 (MB) / 5715.74 (MB) / 5746 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.11426 (s), 5715.74 (MB) / 5715.74 (MB) / 5746 (MB)
[Open3D DEBUG] #Set point constraints: 0.921062 (s), 5715.74 (MB) / 5715.74 (MB) / 5746 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 486123 / 453016 / 102553
[Open3D DEBUG] Memory Usage: 5715.742 MB
[Open3D DEBUG] # Linear system solved: 10.233 (s), 5716.21 (MB) / 5716.21 (MB) / 5746 (MB)
[Open3D DEBUG] Got average: 0.367293 (s), 5716.21 (MB) / 5716.21 (MB) / 5746 (MB)
[Open3D DEBUG] Iso-Value: 5.027145e-01 = 2.226623e+04 / 4.429200e+04
[Open3D DEBUG] #          Total Solve:      62.3 (s),    5721.7 (MB)
TriangleMesh with 69055 points and 138064 triangles.
EMD: tensor([0.0490], dtype=torch.float64)
Chamfer: tensor([0.0482], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0445]); sim_loss: tensor([0.0490], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43334 / 38656
[Open3D DEBUG] #   Got kernel density: 0.201587 (s), 5719.54 (MB) / 5721.67 (MB) / 5788 (MB)
[Open3D DEBUG] #     Got normal field: 0.168844 (s), 5721.9 (MB) / 5721.9 (MB) / 5788 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 7.175097e-05 / 3.109257e+00
[Open3D DEBUG] #       Finalized tree: 1.43902 (s), 5721.91 (MB) / 5721.91 (MB) / 5788 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.00961 (s), 5721.91 (MB) / 5721.91 (MB) / 5788 (MB)
[Open3D DEBUG] #Set point constraints: 1.00112 (s), 5721.91 (MB) / 5721.91 (MB) / 5788 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 548094 / 494440 / 131953
[Open3D DEBUG] Memory Usage: 5721.906 MB
[Open3D DEBUG] # Linear system solved: 10.7777 (s), 5721.98 (MB) / 5721.98 (MB) / 5788 (MB)
[Open3D DEBUG] Got average: 0.37956 (s), 5721.98 (MB) / 5721.98 (MB) / 5788 (MB)
[Open3D DEBUG] Iso-Value: 5.000678e-01 = 2.166994e+04 / 4.333400e+04
[Open3D DEBUG] #          Total Solve:      64.2 (s),    5731.9 (MB)
TriangleMesh with 78054 points and 155873 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0464, mean: -0.0524, std: 0.0021
Selected top reward seqs: tensor([-0.0493, -0.0493, -0.0493, -0.0492, -0.0492, -0.0492, -0.0491, -0.0489,
        -0.0489, -0.0488, -0.0487, -0.0484, -0.0483, -0.0482, -0.0480, -0.0480,
        -0.0479, -0.0478, -0.0475, -0.0464])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0493], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0498], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0495], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0487], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0494], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0491], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 22 iterations: tensor([-0.0495], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 16 iterations: tensor([-0.0485], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0492], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0481], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 25 iterations: tensor([-0.0481], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0498], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0479], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0467], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0487], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 23 iterations: tensor([-0.0474], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0470], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Loss: 0.04651989787817001
Optimal set of params:
mid_point: tensor([[0.4371, 0.1400, 0.4962],
        [0.4433, 0.1400, 0.4977]])
angle: tensor([2.9707, 2.9229], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0099, 0.0107], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8313, 0.1400, 0.5642, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8337, 0.1400, 0.5844, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44547 / 37895
[Open3D DEBUG] #   Got kernel density: 0.347509 (s), 5776.47 (MB) / 5776.47 (MB) / 5816 (MB)
[Open3D DEBUG] #     Got normal field: 0.512882 (s), 5778.81 (MB) / 5778.81 (MB) / 5816 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.915827e-05 / 2.189853e+00
[Open3D DEBUG] #       Finalized tree: 1.18784 (s), 5779.3 (MB) / 5779.3 (MB) / 5816 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.80444 (s), 5779.3 (MB) / 5779.3 (MB) / 5816 (MB)
[Open3D DEBUG] #Set point constraints: 1.14752 (s), 5779.32 (MB) / 5779.32 (MB) / 5816 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 483505 / 457736 / 94841
[Open3D DEBUG] Memory Usage: 5779.316 MB
[Open3D DEBUG] # Linear system solved: 10.2315 (s), 5779.51 (MB) / 5779.51 (MB) / 5816 (MB)
[Open3D DEBUG] Got average: 0.259522 (s), 5779.51 (MB) / 5779.51 (MB) / 5816 (MB)
[Open3D DEBUG] Iso-Value: 5.042453e-01 = 2.246262e+04 / 4.454700e+04
[Open3D DEBUG] #          Total Solve:      59.9 (s),    5786.3 (MB)
TriangleMesh with 69704 points and 139352 triangles.
EMD: tensor([0.0440], dtype=torch.float64)
Chamfer: tensor([0.0469], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0465]); sim_loss: tensor([0.0443], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44348 / 36454
[Open3D DEBUG] #   Got kernel density: 0.211045 (s), 5780.23 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] #     Got normal field: 0.12893 (s), 5781.13 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.210268e-05 / 1.867170e+00
[Open3D DEBUG] #       Finalized tree: 1.3211 (s), 5781.34 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.90013 (s), 5781.34 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] #Set point constraints: 0.906599 (s), 5781.34 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 462372 / 463632 / 64793
[Open3D DEBUG] Memory Usage: 5781.340 MB
[Open3D DEBUG] # Linear system solved: 9.755 (s), 5781.34 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] Got average: 0.275073 (s), 5781.34 (MB) / 5786.32 (MB) / 5946 (MB)
[Open3D DEBUG] Iso-Value: 5.037444e-01 = 2.234006e+04 / 4.434800e+04
[Open3D DEBUG] #          Total Solve:      59.7 (s),    5790.3 (MB)
TriangleMesh with 69608 points and 139176 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0440, mean: -0.0508, std: 0.0019
Selected top reward seqs: tensor([-0.0482, -0.0481, -0.0481, -0.0480, -0.0480, -0.0479, -0.0478, -0.0477,
        -0.0473, -0.0472, -0.0470, -0.0469, -0.0469, -0.0466, -0.0465, -0.0461,
        -0.0460, -0.0456, -0.0456, -0.0440])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0497], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0456], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0479], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0474], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 12 iterations: tensor([-0.0459], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0467], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 18 iterations: tensor([-0.0459], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 20 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0449], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 15 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Loss: 0.042190905660390854
Optimal set of params:
mid_point: tensor([[0.4516, 0.1400, 0.5108],
        [0.4397, 0.1400, 0.4376]])
angle: tensor([2.8472, 2.9337], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8344, 0.1400, 0.6269, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8310, 0.1400, 0.5202, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 44216 / 38901
[Open3D DEBUG] #   Got kernel density: 0.289028 (s), 5883.72 (MB) / 5883.72 (MB) / 5946 (MB)
[Open3D DEBUG] #     Got normal field: 0.271784 (s), 5884.63 (MB) / 5884.63 (MB) / 5946 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.003336e-05 / 2.654435e+00
[Open3D DEBUG] #       Finalized tree: 1.37764 (s), 5884.71 (MB) / 5884.71 (MB) / 5946 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.02876 (s), 5884.71 (MB) / 5884.71 (MB) / 5946 (MB)
[Open3D DEBUG] #Set point constraints: 1.12038 (s), 5884.71 (MB) / 5884.71 (MB) / 5946 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 520913 / 475472 / 119857
[Open3D DEBUG] Memory Usage: 5884.715 MB
[Open3D DEBUG] # Linear system solved: 11.7406 (s), 5884.71 (MB) / 5884.71 (MB) / 5946 (MB)
[Open3D DEBUG] Got average: 0.290812 (s), 5884.71 (MB) / 5884.71 (MB) / 5946 (MB)
[Open3D DEBUG] Iso-Value: 5.012484e-01 = 2.216320e+04 / 4.421600e+04
[Open3D DEBUG] #          Total Solve:      63.6 (s),    5892.1 (MB)
TriangleMesh with 74661 points and 149184 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0416, mean: -0.0481, std: 0.0020
Selected top reward seqs: tensor([-0.0455, -0.0454, -0.0454, -0.0454, -0.0451, -0.0451, -0.0450, -0.0450,
        -0.0448, -0.0447, -0.0445, -0.0445, -0.0444, -0.0443, -0.0438, -0.0436,
        -0.0433, -0.0430, -0.0429, -0.0416])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 28 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 23 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0437], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 7 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0422], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Loss: 0.03924214094877243
Optimal set of params:
mid_point: tensor([[0.4508, 0.1400, 0.4338]])
angle: tensor([3.0723], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8499, 0.1400, 0.4615, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46520 / 41088
[Open3D DEBUG] #   Got kernel density: 0.433366 (s), 5906.07 (MB) / 5906.07 (MB) / 5947 (MB)
[Open3D DEBUG] #     Got normal field: 0.300034 (s), 5909.04 (MB) / 5909.04 (MB) / 5947 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.779495e-05 / 2.688621e+00
[Open3D DEBUG] #       Finalized tree: 1.43453 (s), 5909.32 (MB) / 5909.32 (MB) / 5947 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.39928 (s), 5909.32 (MB) / 5909.32 (MB) / 5947 (MB)
[Open3D DEBUG] #Set point constraints: 2.78139 (s), 5909.32 (MB) / 5909.32 (MB) / 5947 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 555822 / 517576 / 117649
[Open3D DEBUG] Memory Usage: 5909.320 MB
[Open3D DEBUG] # Linear system solved: 10.9703 (s), 5909.41 (MB) / 5909.41 (MB) / 5947 (MB)
[Open3D DEBUG] Got average: 0.394962 (s), 5909.41 (MB) / 5909.41 (MB) / 5947 (MB)
[Open3D DEBUG] Iso-Value: 5.038426e-01 = 2.343876e+04 / 4.652000e+04
[Open3D DEBUG] #          Total Solve:      67.5 (s),    5912.7 (MB)
TriangleMesh with 83146 points and 166254 triangles.
EMD: tensor([0.0402], dtype=torch.float64)
Chamfer: tensor([0.0464], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0392]); sim_loss: tensor([0.0408], dtype=torch.float64) ===============
torch.Size([5, 11, 14]) torch.Size([5, 40, 12])
Best init pose: tensor([[0.9146, 0.1400, 0.5758, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2991, 0.1400, 0.8108, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8313, 0.1400, 0.5642, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8344, 0.1400, 0.6269, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8499, 0.1400, 0.4615, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0392]); Best sim loss: tensor([0.0408], dtype=torch.float64)
Wrote profile results to control.py.lprof
