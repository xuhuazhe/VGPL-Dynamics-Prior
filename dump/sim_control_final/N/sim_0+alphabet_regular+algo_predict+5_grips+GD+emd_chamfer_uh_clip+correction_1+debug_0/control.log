ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.190970 (s), 4278.62 (MB) / 4278.62 (MB) / 4327 (MB)
[Open3D DEBUG] #     Got normal field: 0.0708740 (s), 4283.23 (MB) / 4283.23 (MB) / 4327 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048154e-05 / 8.944288e-01
[Open3D DEBUG] #       Finalized tree: 0.762077 (s), 4284.7 (MB) / 4284.7 (MB) / 4327 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.61296 (s), 4284.7 (MB) / 4284.7 (MB) / 4327 (MB)
[Open3D DEBUG] #Set point constraints: 0.398069 (s), 4284.7 (MB) / 4284.7 (MB) / 4327 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4284.703 MB
[Open3D DEBUG] # Linear system solved: 6.04809 (s), 4284.7 (MB) / 4284.7 (MB) / 4327 (MB)
[Open3D DEBUG] Got average: 0.185228 (s), 4284.7 (MB) / 4284.7 (MB) / 4327 (MB)
[Open3D DEBUG] Iso-Value: 5.039394e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      47.4 (s),    4297.7 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0295, mean: -0.0352, std: 0.0030
Selected top reward seqs: tensor([-0.0313, -0.0313, -0.0312, -0.0311, -0.0311, -0.0311, -0.0310, -0.0309,
        -0.0309, -0.0308, -0.0307, -0.0306, -0.0304, -0.0303, -0.0302, -0.0301,
        -0.0300, -0.0300, -0.0299, -0.0295])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 14 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 6 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 4 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0294], grad_fn=<CatBackward>)
Loss: 0.02897685579955578
Optimal set of params:
mid_point: tensor([[0.5164, 0.1400, 0.4857],
        [0.4669, 0.1400, 0.5716]])
angle: tensor([1.7345, 2.3989], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0017], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5816, 0.1400, 0.8804, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7615, 0.1400, 0.8421, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 45750 / 32296
[Open3D DEBUG] #   Got kernel density: 0.245978 (s), 5622.41 (MB) / 5622.41 (MB) / 5660 (MB)
[Open3D DEBUG] #     Got normal field: 0.197008 (s), 5630.5 (MB) / 5630.5 (MB) / 5660 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.473896e-05 / 1.131807e+00
[Open3D DEBUG] #       Finalized tree: 0.974028 (s), 5630.83 (MB) / 5630.83 (MB) / 5660 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.70235 (s), 5630.83 (MB) / 5630.83 (MB) / 5660 (MB)
[Open3D DEBUG] #Set point constraints: 0.622728 (s), 5630.83 (MB) / 5630.83 (MB) / 5660 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 374179 / 421808 / 5825
[Open3D DEBUG] Memory Usage: 5630.832 MB
[Open3D DEBUG] # Linear system solved: 7.15276 (s), 5631.2 (MB) / 5631.2 (MB) / 5660 (MB)
[Open3D DEBUG] Got average: 0.204612 (s), 5631.34 (MB) / 5631.34 (MB) / 5660 (MB)
[Open3D DEBUG] Iso-Value: 5.039979e-01 = 2.305790e+04 / 4.575000e+04
[Open3D DEBUG] #          Total Solve:      52.3 (s),    5641.9 (MB)
TriangleMesh with 58684 points and 117356 triangles.
EMD: tensor([0.0260], dtype=torch.float64)
Chamfer: tensor([0.0351], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0290]); sim_loss: tensor([0.0269], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44485 / 38317
[Open3D DEBUG] #   Got kernel density: 0.385108 (s), 5633.73 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] #     Got normal field: 0.469562 (s), 5636.25 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.395071e-05 / 2.399997e+00
[Open3D DEBUG] #       Finalized tree: 1.34248 (s), 5636.61 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.88937 (s), 5636.61 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] #Set point constraints: 0.826141 (s), 5636.61 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 487229 / 447848 / 108985
[Open3D DEBUG] Memory Usage: 5636.613 MB
[Open3D DEBUG] # Linear system solved: 9.2855 (s), 5636.61 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] Got average: 0.298127 (s), 5636.61 (MB) / 5641.87 (MB) / 5665 (MB)
[Open3D DEBUG] Iso-Value: 5.037655e-01 = 2.241001e+04 / 4.448500e+04
[Open3D DEBUG] #          Total Solve:      59.4 (s),    5651.3 (MB)
TriangleMesh with 67842 points and 135618 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0272, mean: -0.0333, std: 0.0031
Selected top reward seqs: tensor([-0.0293, -0.0291, -0.0291, -0.0291, -0.0290, -0.0289, -0.0288, -0.0286,
        -0.0286, -0.0285, -0.0284, -0.0284, -0.0283, -0.0281, -0.0280, -0.0279,
        -0.0277, -0.0274, -0.0273, -0.0272])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 25 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 4 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 6 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 16 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 15 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 5 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 18 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 2 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Loss: 0.026474351063370705
Optimal set of params:
mid_point: tensor([[0.4566, 0.1400, 0.5613],
        [0.4556, 0.1400, 0.5430]])
angle: tensor([2.5902, 1.5265], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0079, 0.0094], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7973, 0.1400, 0.7708, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4379, 0.1400, 0.9426, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44862 / 35882
[Open3D DEBUG] #   Got kernel density: 0.282265 (s), 5709.64 (MB) / 5709.64 (MB) / 5742 (MB)
[Open3D DEBUG] #     Got normal field: 0.392573 (s), 5712.52 (MB) / 5712.52 (MB) / 5742 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.859096e-05 / 1.731267e+00
[Open3D DEBUG] #       Finalized tree: 1.29745 (s), 5713.5 (MB) / 5713.5 (MB) / 5742 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.83492 (s), 5713.5 (MB) / 5713.5 (MB) / 5742 (MB)
[Open3D DEBUG] #Set point constraints: 0.951652 (s), 5713.5 (MB) / 5713.5 (MB) / 5742 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 455127 / 471688 / 48457
[Open3D DEBUG] Memory Usage: 5713.496 MB
[Open3D DEBUG] # Linear system solved: 8.26934 (s), 5713.54 (MB) / 5713.54 (MB) / 5742 (MB)
[Open3D DEBUG] Got average: 0.275171 (s), 5713.54 (MB) / 5713.54 (MB) / 5742 (MB)
[Open3D DEBUG] Iso-Value: 5.046531e-01 = 2.263975e+04 / 4.486200e+04
[Open3D DEBUG] #          Total Solve:      57.8 (s),    5723.5 (MB)
TriangleMesh with 68749 points and 137486 triangles.
EMD: tensor([0.0286], dtype=torch.float64)
Chamfer: tensor([0.0360], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0265]); sim_loss: tensor([0.0293], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 45632 / 36826
[Open3D DEBUG] #   Got kernel density: 0.288444 (s), 5721.83 (MB) / 5723.5 (MB) / 5790 (MB)
[Open3D DEBUG] #     Got normal field: 0.203429 (s), 5725.15 (MB) / 5725.15 (MB) / 5790 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.918404e-05 / 1.788046e+00
[Open3D DEBUG] #       Finalized tree: 1.05653 (s), 5725.25 (MB) / 5725.25 (MB) / 5790 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.94464 (s), 5725.25 (MB) / 5725.25 (MB) / 5790 (MB)
[Open3D DEBUG] #Set point constraints: 0.867121 (s), 5725.25 (MB) / 5725.25 (MB) / 5790 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 465753 / 482792 / 49497
[Open3D DEBUG] Memory Usage: 5725.254 MB
[Open3D DEBUG] # Linear system solved: 7.85716 (s), 5725.3 (MB) / 5725.3 (MB) / 5790 (MB)
[Open3D DEBUG] Got average: 0.278131 (s), 5725.3 (MB) / 5725.3 (MB) / 5790 (MB)
[Open3D DEBUG] Iso-Value: 5.046079e-01 = 2.302627e+04 / 4.563200e+04
[Open3D DEBUG] #          Total Solve:      53.0 (s),    5735.9 (MB)
TriangleMesh with 71367 points and 142722 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0273, mean: -0.0330, std: 0.0028
Selected top reward seqs: tensor([-0.0294, -0.0294, -0.0294, -0.0293, -0.0293, -0.0291, -0.0291, -0.0289,
        -0.0288, -0.0287, -0.0286, -0.0286, -0.0284, -0.0284, -0.0281, -0.0281,
        -0.0279, -0.0279, -0.0275, -0.0273])
Batch 0/20:
reward seqs after 29 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 6 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 3 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 18 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 19 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 16 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 17 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 6 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Loss: 0.02693593129515648
Optimal set of params:
mid_point: tensor([[0.5152, 0.1400, 0.4638],
        [0.5392, 0.1400, 0.4393]])
angle: tensor([0.0854, 1.4299], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1167, 0.1400, 0.4979, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4831, 0.1400, 0.8353, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44389 / 37808
[Open3D DEBUG] #   Got kernel density: 0.232896 (s), 5783.63 (MB) / 5783.63 (MB) / 5823 (MB)
[Open3D DEBUG] #     Got normal field: 0.0988691 (s), 5788.36 (MB) / 5788.36 (MB) / 5823 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.257215e-05 / 2.333625e+00
[Open3D DEBUG] #       Finalized tree: 1.13238 (s), 5788.36 (MB) / 5788.36 (MB) / 5823 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.80906 (s), 5788.36 (MB) / 5788.36 (MB) / 5823 (MB)
[Open3D DEBUG] #Set point constraints: 0.78837 (s), 5788.36 (MB) / 5788.36 (MB) / 5823 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 488552 / 457776 / 100569
[Open3D DEBUG] Memory Usage: 5788.359 MB
[Open3D DEBUG] # Linear system solved: 8.10925 (s), 5788.36 (MB) / 5788.36 (MB) / 5823 (MB)
[Open3D DEBUG] Got average: 0.290311 (s), 5788.36 (MB) / 5788.36 (MB) / 5823 (MB)
[Open3D DEBUG] Iso-Value: 5.036487e-01 = 2.235646e+04 / 4.438900e+04
[Open3D DEBUG] #          Total Solve:      56.1 (s),    5796.1 (MB)
TriangleMesh with 69846 points and 139594 triangles.
EMD: tensor([0.0292], dtype=torch.float64)
Chamfer: tensor([0.0376], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0269]); sim_loss: tensor([0.0301], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 46612 / 22594
[Open3D DEBUG] #   Got kernel density: 0.0208392 (s), 5787.91 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] #     Got normal field: 0.1228 (s), 5788.05 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.198258e-05 / 5.585321e-01
[Open3D DEBUG] #       Finalized tree: 0.603827 (s), 5788.06 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.62642 (s), 5788.06 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] #Set point constraints: 0.350056 (s), 5788.06 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 229279 / 261968 / 65
[Open3D DEBUG] Memory Usage: 5788.062 MB
[Open3D DEBUG] # Linear system solved: 4.34864 (s), 5788.06 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] Got average: 0.270994 (s), 5788.06 (MB) / 5796.07 (MB) / 5953 (MB)
[Open3D DEBUG] Iso-Value: 5.099767e-01 = 2.377103e+04 / 4.661200e+04
[Open3D DEBUG] #          Total Solve:      38.1 (s),    5796.1 (MB)
TriangleMesh with 31566 points and 63120 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0285, mean: -0.0343, std: 0.0032
Selected top reward seqs: tensor([-0.0302, -0.0301, -0.0299, -0.0299, -0.0296, -0.0296, -0.0296, -0.0296,
        -0.0295, -0.0294, -0.0293, -0.0292, -0.0291, -0.0289, -0.0288, -0.0288,
        -0.0288, -0.0288, -0.0286, -0.0285])
Batch 0/20:
reward seqs after 38 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 19 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 16 iterations: tensor([-0.0294], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 3 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 17 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 17 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 3 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 14 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 2 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 4 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Loss: 0.0269195307046175
Optimal set of params:
mid_point: tensor([[0.4971, 0.1400, 0.5223],
        [0.4841, 0.1400, 0.4879]])
angle: tensor([2.5477, 1.7938], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8286, 0.1400, 0.7461, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5726, 0.1400, 0.8780, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 46291 / 27536
[Open3D DEBUG] #   Got kernel density: 0.122318 (s), 5887.46 (MB) / 5887.46 (MB) / 5953 (MB)
[Open3D DEBUG] #     Got normal field: 0.155719 (s), 5888.36 (MB) / 5888.36 (MB) / 5953 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.687068e-05 / 7.809609e-01
[Open3D DEBUG] #       Finalized tree: 0.932775 (s), 5888.37 (MB) / 5888.37 (MB) / 5953 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.7174 (s), 5888.37 (MB) / 5888.37 (MB) / 5953 (MB)
[Open3D DEBUG] #Set point constraints: 0.500042 (s), 5888.37 (MB) / 5888.37 (MB) / 5953 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 288380 / 328632 / 945
[Open3D DEBUG] Memory Usage: 5888.371 MB
[Open3D DEBUG] # Linear system solved: 6.14041 (s), 5888.37 (MB) / 5888.37 (MB) / 5953 (MB)
[Open3D DEBUG] Got average: 0.294002 (s), 5888.37 (MB) / 5888.37 (MB) / 5953 (MB)
[Open3D DEBUG] Iso-Value: 5.051649e-01 = 2.338459e+04 / 4.629100e+04
[Open3D DEBUG] #          Total Solve:      47.0 (s),    5888.9 (MB)
TriangleMesh with 43160 points and 86308 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0262, mean: -0.0311, std: 0.0033
Selected top reward seqs: tensor([-0.0269, -0.0269, -0.0269, -0.0269, -0.0268, -0.0268, -0.0268, -0.0267,
        -0.0267, -0.0267, -0.0266, -0.0266, -0.0265, -0.0265, -0.0264, -0.0264,
        -0.0264, -0.0263, -0.0263, -0.0262])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 4 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 25 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 17 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 4 iterations: tensor([-0.0265], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 30 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 24 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Loss: 0.026111101731657982
Optimal set of params:
mid_point: tensor([[0.5602, 0.1400, 0.4337]])
angle: tensor([1.2986], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0100], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4526, 0.1400, 0.8190, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44792 / 37142
[Open3D DEBUG] #   Got kernel density: 0.262679 (s), 5901.02 (MB) / 5901.02 (MB) / 5953 (MB)
[Open3D DEBUG] #     Got normal field: 0.534123 (s), 5902.25 (MB) / 5902.25 (MB) / 5953 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.548478e-05 / 2.037354e+00
[Open3D DEBUG] #       Finalized tree: 1.31965 (s), 5902.59 (MB) / 5902.59 (MB) / 5953 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.05245 (s), 5902.59 (MB) / 5902.59 (MB) / 5953 (MB)
[Open3D DEBUG] #Set point constraints: 1.37318 (s), 5902.59 (MB) / 5902.59 (MB) / 5953 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 465228 / 454144 / 77545
[Open3D DEBUG] Memory Usage: 5902.594 MB
[Open3D DEBUG] # Linear system solved: 12.0277 (s), 5902.59 (MB) / 5902.59 (MB) / 5953 (MB)
[Open3D DEBUG] Got average: 0.403386 (s), 5902.59 (MB) / 5902.59 (MB) / 5953 (MB)
[Open3D DEBUG] Iso-Value: 5.036384e-01 = 2.255897e+04 / 4.479200e+04
[Open3D DEBUG] #          Total Solve:      62.7 (s),    5906.9 (MB)
TriangleMesh with 68315 points and 136608 triangles.
EMD: tensor([0.0284], dtype=torch.float64)
Chamfer: tensor([0.0368], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0261]); sim_loss: tensor([0.0292], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.5816, 0.1400, 0.8804, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7615, 0.1400, 0.8421, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0290]); Best sim loss: tensor([0.0269], dtype=torch.float64)
Wrote profile results to control.py.lprof
