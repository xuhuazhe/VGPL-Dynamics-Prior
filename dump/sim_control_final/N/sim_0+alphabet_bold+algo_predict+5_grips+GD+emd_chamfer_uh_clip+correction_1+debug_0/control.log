ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.220902 (s), 4336.57 (MB) / 4336.57 (MB) / 4357 (MB)
[Open3D DEBUG] #     Got normal field: 0.0987899 (s), 4342.66 (MB) / 4342.66 (MB) / 4357 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048152e-05 / 8.944278e-01
[Open3D DEBUG] #       Finalized tree: 1.30449 (s), 4344.41 (MB) / 4344.41 (MB) / 4357 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.96015 (s), 4344.41 (MB) / 4344.41 (MB) / 4357 (MB)
[Open3D DEBUG] #Set point constraints: 1.08537 (s), 4344.41 (MB) / 4344.41 (MB) / 4357 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4344.406 MB
[Open3D DEBUG] # Linear system solved: 9.17532 (s), 4344.41 (MB) / 4344.41 (MB) / 4357 (MB)
[Open3D DEBUG] Got average: 0.248298 (s), 4344.41 (MB) / 4344.41 (MB) / 4357 (MB)
[Open3D DEBUG] Iso-Value: 5.039395e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      57.2 (s),    4360.5 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0253, mean: -0.0305, std: 0.0024
Selected top reward seqs: tensor([-0.0274, -0.0274, -0.0272, -0.0272, -0.0271, -0.0269, -0.0269, -0.0269,
        -0.0268, -0.0268, -0.0265, -0.0265, -0.0263, -0.0263, -0.0262, -0.0262,
        -0.0260, -0.0258, -0.0257, -0.0253])
Batch 0/20:
reward seqs after 14 iterations: tensor([-0.0278], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0273], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 4 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 6 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 23 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 5 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 3 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Loss: 0.0247428510338068
Optimal set of params:
mid_point: tensor([[0.5451, 0.1400, 0.4289],
        [0.5705, 0.1400, 0.4954]])
angle: tensor([1.3111, 1.9272], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4424, 0.1400, 0.8155, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7101, 0.1400, 0.8703, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 45274 / 23553
[Open3D DEBUG] #   Got kernel density: 0.077647 (s), 5648.84 (MB) / 5648.84 (MB) / 5681 (MB)
[Open3D DEBUG] #     Got normal field: 0.116227 (s), 5651.07 (MB) / 5651.07 (MB) / 5681 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.366618e-05 / 6.187227e-01
[Open3D DEBUG] #       Finalized tree: 0.984999 (s), 5651.13 (MB) / 5651.13 (MB) / 5681 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.73075 (s), 5651.13 (MB) / 5651.13 (MB) / 5681 (MB)
[Open3D DEBUG] #Set point constraints: 0.545043 (s), 5651.13 (MB) / 5651.13 (MB) / 5681 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 245428 / 279712 / 777
[Open3D DEBUG] Memory Usage: 5651.133 MB
[Open3D DEBUG] # Linear system solved: 8.92882 (s), 5651.14 (MB) / 5651.14 (MB) / 5681 (MB)
[Open3D DEBUG] Got average: 0.197011 (s), 5651.14 (MB) / 5651.14 (MB) / 5681 (MB)
[Open3D DEBUG] Iso-Value: 5.087096e-01 = 2.303132e+04 / 4.527400e+04
[Open3D DEBUG] #          Total Solve:      54.5 (s),    5656.7 (MB)
TriangleMesh with 34592 points and 69172 triangles.
EMD: tensor([0.0274], dtype=torch.float64)
Chamfer: tensor([0.0363], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0247]); sim_loss: tensor([0.0283], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 42758 / 36896
[Open3D DEBUG] #   Got kernel density: 0.352079 (s), 5648.63 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] #     Got normal field: 0.170228 (s), 5651.88 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.645791e-05 / 2.414027e+00
[Open3D DEBUG] #       Finalized tree: 1.42564 (s), 5652.43 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.01572 (s), 5652.43 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] #Set point constraints: 1.07687 (s), 5652.59 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 477135 / 435624 / 109673
[Open3D DEBUG] Memory Usage: 5652.590 MB
[Open3D DEBUG] # Linear system solved: 12.6438 (s), 5652.79 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] Got average: 0.366609 (s), 5652.79 (MB) / 5656.71 (MB) / 5681 (MB)
[Open3D DEBUG] Iso-Value: 5.046369e-01 = 2.157727e+04 / 4.275800e+04
[Open3D DEBUG] #          Total Solve:      68.9 (s),    5660.3 (MB)
TriangleMesh with 65350 points and 130568 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0247, mean: -0.0302, std: 0.0020
Selected top reward seqs: tensor([-0.0276, -0.0276, -0.0276, -0.0275, -0.0274, -0.0272, -0.0272, -0.0272,
        -0.0271, -0.0270, -0.0268, -0.0267, -0.0264, -0.0263, -0.0263, -0.0262,
        -0.0259, -0.0259, -0.0255, -0.0247])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 19 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 16 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 5 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 3 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 19 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 21 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 22 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 7 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Loss: 0.024669604375958443
Optimal set of params:
mid_point: tensor([[0.4381, 0.1400, 0.4205],
        [0.5775, 0.1400, 0.4778]])
angle: tensor([0.1681, 2.3906], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0043, 0.0101], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0437, 0.1400, 0.4874, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8699, 0.1400, 0.7508, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44821 / 39463
[Open3D DEBUG] #   Got kernel density: 0.220483 (s), 5718.34 (MB) / 5718.34 (MB) / 5758 (MB)
[Open3D DEBUG] #     Got normal field: 0.197179 (s), 5721.84 (MB) / 5721.84 (MB) / 5758 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.185620e-05 / 2.772457e+00
[Open3D DEBUG] #       Finalized tree: 1.4335 (s), 5722.27 (MB) / 5722.27 (MB) / 5758 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.01659 (s), 5722.27 (MB) / 5722.27 (MB) / 5758 (MB)
[Open3D DEBUG] #Set point constraints: 1.34799 (s), 5722.27 (MB) / 5722.27 (MB) / 5758 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 531301 / 483416 / 123785
[Open3D DEBUG] Memory Usage: 5722.273 MB
[Open3D DEBUG] # Linear system solved: 14.7743 (s), 5722.27 (MB) / 5722.27 (MB) / 5758 (MB)
[Open3D DEBUG] Got average: 0.324122 (s), 5722.27 (MB) / 5722.27 (MB) / 5758 (MB)
[Open3D DEBUG] Iso-Value: 5.026022e-01 = 2.252713e+04 / 4.482100e+04
[Open3D DEBUG] #          Total Solve:      72.5 (s),    5734.0 (MB)
TriangleMesh with 75486 points and 150828 triangles.
EMD: tensor([0.0282], dtype=torch.float64)
Chamfer: tensor([0.0364], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0247]); sim_loss: tensor([0.0290], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 46289 / 29346
[Open3D DEBUG] #   Got kernel density: 0.198341 (s), 5727.96 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] #     Got normal field: 0.0893199 (s), 5728.27 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.909612e-05 / 8.839405e-01
[Open3D DEBUG] #       Finalized tree: 1.27096 (s), 5728.29 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.01497 (s), 5728.29 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] #Set point constraints: 0.713793 (s), 5728.29 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 315862 / 359352 / 1633
[Open3D DEBUG] Memory Usage: 5728.289 MB
[Open3D DEBUG] # Linear system solved: 9.49080 (s), 5728.33 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] Got average: 0.320432 (s), 5728.33 (MB) / 5734.0 (MB) / 5803 (MB)
[Open3D DEBUG] Iso-Value: 5.045567e-01 = 2.335543e+04 / 4.628900e+04
[Open3D DEBUG] #          Total Solve:      52.5 (s),    5734.0 (MB)
TriangleMesh with 47934 points and 95856 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0240, mean: -0.0296, std: 0.0024
Selected top reward seqs: tensor([-0.0264, -0.0263, -0.0260, -0.0260, -0.0258, -0.0258, -0.0257, -0.0257,
        -0.0257, -0.0256, -0.0256, -0.0256, -0.0255, -0.0255, -0.0252, -0.0251,
        -0.0250, -0.0248, -0.0247, -0.0240])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 22 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 16 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0266], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 18 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 14 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 13 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 5 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 27 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 3 iterations: tensor([-0.0256], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 5 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0247], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 24 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Loss: 0.02450989931821823
Optimal set of params:
mid_point: tensor([[0.4538, 0.1400, 0.5668],
        [0.4797, 0.1400, 0.5025]])
angle: tensor([2.6354, 1.7521], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8036, 0.1400, 0.7608, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5518, 0.1400, 0.8959, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46381 / 40639
[Open3D DEBUG] #   Got kernel density: 0.419413 (s), 5782.14 (MB) / 5782.14 (MB) / 5823 (MB)
[Open3D DEBUG] #     Got normal field: 0.250102 (s), 5784.78 (MB) / 5784.78 (MB) / 5823 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.742280e-05 / 2.663327e+00
[Open3D DEBUG] #       Finalized tree: 1.50468 (s), 5785.11 (MB) / 5785.11 (MB) / 5823 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.08554 (s), 5785.11 (MB) / 5785.11 (MB) / 5823 (MB)
[Open3D DEBUG] #Set point constraints: 1.25498 (s), 5785.11 (MB) / 5785.11 (MB) / 5823 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 538686 / 498864 / 116777
[Open3D DEBUG] Memory Usage: 5785.113 MB
[Open3D DEBUG] # Linear system solved: 15.3096 (s), 5785.11 (MB) / 5785.11 (MB) / 5823 (MB)
[Open3D DEBUG] Got average: 0.34663 (s), 5785.11 (MB) / 5785.11 (MB) / 5823 (MB)
[Open3D DEBUG] Iso-Value: 5.012909e-01 = 2.325037e+04 / 4.638100e+04
[Open3D DEBUG] #          Total Solve:      75.4 (s),    5794.9 (MB)
TriangleMesh with 78622 points and 157158 triangles.
EMD: tensor([0.0272], dtype=torch.float64)
Chamfer: tensor([0.0361], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0245]); sim_loss: tensor([0.0281], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44236 / 38468
[Open3D DEBUG] #   Got kernel density: 0.213424 (s), 5787.97 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] #     Got normal field: 0.202043 (s), 5789.64 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.993475e-05 / 2.651274e+00
[Open3D DEBUG] #       Finalized tree: 1.47677 (s), 5789.69 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.14296 (s), 5789.69 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] #Set point constraints: 1.57815 (s), 5789.69 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 512296 / 468656 / 116825
[Open3D DEBUG] Memory Usage: 5789.691 MB
[Open3D DEBUG] # Linear system solved: 13.8924 (s), 5789.7 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] Got average: 0.338146 (s), 5789.7 (MB) / 5794.91 (MB) / 5954 (MB)
[Open3D DEBUG] Iso-Value: 5.024790e-01 = 2.222766e+04 / 4.423600e+04
[Open3D DEBUG] #          Total Solve:      71.5 (s),    5795.1 (MB)
TriangleMesh with 72150 points and 144182 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0244, mean: -0.0296, std: 0.0022
Selected top reward seqs: tensor([-0.0267, -0.0267, -0.0267, -0.0265, -0.0264, -0.0262, -0.0261, -0.0260,
        -0.0260, -0.0258, -0.0258, -0.0257, -0.0256, -0.0255, -0.0255, -0.0255,
        -0.0254, -0.0250, -0.0247, -0.0244])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0259], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 23 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0270], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 14 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 3 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 18 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 4 iterations: tensor([-0.0255], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0251], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0250], grad_fn=<CatBackward>)
Loss: 0.02491845190525055
Optimal set of params:
mid_point: tensor([[0.4513, 0.1400, 0.5589],
        [0.5340, 0.1400, 0.5356]])
angle: tensor([1.1815, 1.9909], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0093], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2995, 0.1400, 0.9289, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6971, 0.1400, 0.9008, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 45709 / 24148
[Open3D DEBUG] #   Got kernel density: 0.192777 (s), 5897.17 (MB) / 5897.17 (MB) / 5954 (MB)
[Open3D DEBUG] #     Got normal field: 0.0983 (s), 5899.36 (MB) / 5899.36 (MB) / 5954 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.381020e-05 / 6.312505e-01
[Open3D DEBUG] #       Finalized tree: 1.05275 (s), 5899.37 (MB) / 5899.37 (MB) / 5954 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.8344 (s), 5899.37 (MB) / 5899.37 (MB) / 5954 (MB)
[Open3D DEBUG] #Set point constraints: 0.545281 (s), 5899.37 (MB) / 5899.37 (MB) / 5954 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 247850 / 282472 / 785
[Open3D DEBUG] Memory Usage: 5899.367 MB
[Open3D DEBUG] # Linear system solved: 8.76282 (s), 5899.37 (MB) / 5899.37 (MB) / 5954 (MB)
[Open3D DEBUG] Got average: 0.272398 (s), 5899.37 (MB) / 5899.37 (MB) / 5954 (MB)
[Open3D DEBUG] Iso-Value: 5.086433e-01 = 2.324958e+04 / 4.570900e+04
[Open3D DEBUG] #          Total Solve:      53.3 (s),    5900.8 (MB)
TriangleMesh with 35863 points and 71714 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0249, mean: -0.0291, std: 0.0021
Selected top reward seqs: tensor([-0.0261, -0.0261, -0.0261, -0.0261, -0.0259, -0.0259, -0.0259, -0.0259,
        -0.0259, -0.0258, -0.0258, -0.0258, -0.0257, -0.0256, -0.0255, -0.0254,
        -0.0252, -0.0252, -0.0249, -0.0249])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 5 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 21 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 14 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 21 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 4 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 20 iterations: tensor([-0.0253], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0260], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 30 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 20 iterations: tensor([-0.0263], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0258], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 24 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0254], grad_fn=<CatBackward>)
Loss: 0.024943184107542038
Optimal set of params:
mid_point: tensor([[0.4855, 0.1400, 0.5336]])
angle: tensor([1.7689], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5642, 0.1400, 0.9258, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46270 / 40708
[Open3D DEBUG] #   Got kernel density: 0.37955 (s), 5910.66 (MB) / 5910.66 (MB) / 5954 (MB)
[Open3D DEBUG] #     Got normal field: 0.201973 (s), 5910.89 (MB) / 5910.89 (MB) / 5954 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.875174e-05 / 2.718443e+00
[Open3D DEBUG] #       Finalized tree: 1.32348 (s), 5910.95 (MB) / 5910.95 (MB) / 5954 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.86248 (s), 5910.95 (MB) / 5910.95 (MB) / 5954 (MB)
[Open3D DEBUG] #Set point constraints: 1.0281 (s), 5910.95 (MB) / 5910.95 (MB) / 5954 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 540905 / 497680 / 120497
[Open3D DEBUG] Memory Usage: 5910.945 MB
[Open3D DEBUG] # Linear system solved: 13.6454 (s), 5910.95 (MB) / 5910.95 (MB) / 5954 (MB)
[Open3D DEBUG] Got average: 0.359334 (s), 5910.95 (MB) / 5910.95 (MB) / 5954 (MB)
[Open3D DEBUG] Iso-Value: 5.020882e-01 = 2.323162e+04 / 4.627000e+04
[Open3D DEBUG] #          Total Solve:      71.6 (s),    5919.8 (MB)
TriangleMesh with 78140 points and 156196 triangles.
EMD: tensor([0.0267], dtype=torch.float64)
Chamfer: tensor([0.0377], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0249]); sim_loss: tensor([0.0278], dtype=torch.float64) ===============
torch.Size([5, 11, 14]) torch.Size([5, 40, 12])
Best init pose: tensor([[0.4424, 0.1400, 0.8155, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0437, 0.1400, 0.4874, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8036, 0.1400, 0.7608, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2995, 0.1400, 0.9289, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5642, 0.1400, 0.9258, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0249]); Best sim loss: tensor([0.0278], dtype=torch.float64)
Wrote profile results to control.py.lprof
