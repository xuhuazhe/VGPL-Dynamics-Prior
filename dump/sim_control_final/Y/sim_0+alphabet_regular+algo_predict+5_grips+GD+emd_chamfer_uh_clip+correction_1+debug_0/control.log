ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.00813103 (s), 5613.1 (MB) / 5613.1 (MB) / 5655 (MB)
[Open3D DEBUG] #     Got normal field: 0.0813069 (s), 5614.88 (MB) / 5614.88 (MB) / 5655 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997650e-05 / 9.944902e-01
[Open3D DEBUG] #       Finalized tree: 0.074542 (s), 5617.42 (MB) / 5617.42 (MB) / 5655 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.275765 (s), 5617.42 (MB) / 5617.42 (MB) / 5655 (MB)
[Open3D DEBUG] #Set point constraints: 0.0330038 (s), 5617.42 (MB) / 5617.42 (MB) / 5655 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 5617.418 MB
[Open3D DEBUG] # Linear system solved: 6.47887 (s), 5617.42 (MB) / 5617.42 (MB) / 5655 (MB)
[Open3D DEBUG] Got average: 0.018975 (s), 5617.42 (MB) / 5617.42 (MB) / 5655 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      10.9 (s),    5636.6 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0420, mean: -0.0540, std: 0.0050
Selected top reward seqs: tensor([-0.0477, -0.0476, -0.0476, -0.0474, -0.0473, -0.0473, -0.0469, -0.0469,
        -0.0467, -0.0464, -0.0463, -0.0463, -0.0459, -0.0453, -0.0449, -0.0449,
        -0.0443, -0.0431, -0.0423, -0.0420])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0460], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 3 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 14 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 21 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0467], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 4 iterations: tensor([-0.0460], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 6 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 17 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 16 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 16 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Loss: 0.03813686966896057
Optimal set of params:
mid_point: tensor([[0.5195, 0.1400, 0.4701],
        [0.5507, 0.1400, 0.5435]])
angle: tensor([3.0467, 1.3025], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9177, 0.1400, 0.5080, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4446, 0.1400, 0.9291, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50303 / 43079
[Open3D DEBUG] #   Got kernel density: 0.0177631 (s), 6874.52 (MB) / 6874.52 (MB) / 6914 (MB)
[Open3D DEBUG] #     Got normal field: 0.121583 (s), 6876.6 (MB) / 6876.6 (MB) / 6914 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.040702e-05 / 2.535624e+00
[Open3D DEBUG] #       Finalized tree: 0.12352 (s), 6876.88 (MB) / 6876.88 (MB) / 6914 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.378059 (s), 6876.88 (MB) / 6876.88 (MB) / 6914 (MB)
[Open3D DEBUG] #Set point constraints: 0.051219 (s), 6876.88 (MB) / 6876.88 (MB) / 6914 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 549396 / 526960 / 100921
[Open3D DEBUG] Memory Usage: 6876.879 MB
[Open3D DEBUG] # Linear system solved: 8.57373 (s), 6878.43 (MB) / 6878.43 (MB) / 6914 (MB)
[Open3D DEBUG] Got average: 0.027534 (s), 6878.43 (MB) / 6878.43 (MB) / 6914 (MB)
[Open3D DEBUG] Iso-Value: 5.023182e-01 = 2.526811e+04 / 5.030300e+04
[Open3D DEBUG] #          Total Solve:      14.5 (s),    6892.6 (MB)
TriangleMesh with 82902 points and 165828 triangles.
EMD: tensor([0.0434], dtype=torch.float64)
Chamfer: tensor([0.0476], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0381]); sim_loss: tensor([0.0438], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51746 / 43140
[Open3D DEBUG] #   Got kernel density: 0.0170410 (s), 6908.34 (MB) / 6908.34 (MB) / 6947 (MB)
[Open3D DEBUG] #     Got normal field: 0.119886 (s), 6908.34 (MB) / 6908.34 (MB) / 6947 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.396999e-05 / 2.275271e+00
[Open3D DEBUG] #       Finalized tree: 0.11692 (s), 6908.48 (MB) / 6908.48 (MB) / 6947 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.391454 (s), 6908.48 (MB) / 6908.48 (MB) / 6947 (MB)
[Open3D DEBUG] #Set point constraints: 0.0511642 (s), 6908.48 (MB) / 6908.48 (MB) / 6947 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 541913 / 541368 / 77961
[Open3D DEBUG] Memory Usage: 6908.484 MB
[Open3D DEBUG] # Linear system solved: 7.3476 (s), 6908.64 (MB) / 6908.64 (MB) / 6947 (MB)
[Open3D DEBUG] Got average: 0.0236259 (s), 6908.64 (MB) / 6908.64 (MB) / 6947 (MB)
[Open3D DEBUG] Iso-Value: 5.026067e-01 = 2.600789e+04 / 5.174600e+04
[Open3D DEBUG] #          Total Solve:      12.3 (s),    6917.6 (MB)
TriangleMesh with 84514 points and 169056 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0382, mean: -0.0509, std: 0.0054
Selected top reward seqs: tensor([-0.0438, -0.0437, -0.0437, -0.0436, -0.0434, -0.0433, -0.0431, -0.0430,
        -0.0426, -0.0425, -0.0423, -0.0422, -0.0413, -0.0408, -0.0406, -0.0405,
        -0.0402, -0.0396, -0.0384, -0.0382])
Batch 0/20:
reward seqs after 14 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 17 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 35 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 8 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 4 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 29 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 5 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0396], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Loss: 0.037630852311849594
Optimal set of params:
mid_point: tensor([[0.5328, 0.1400, 0.5447],
        [0.5772, 0.1400, 0.5756]])
angle: tensor([1.3860, 1.3033], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4593, 0.1400, 0.9379, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4714, 0.1400, 0.9614, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51764 / 44291
[Open3D DEBUG] #   Got kernel density: 0.0199959 (s), 7092.69 (MB) / 7092.69 (MB) / 7134 (MB)
[Open3D DEBUG] #     Got normal field: 0.127944 (s), 7092.75 (MB) / 7092.75 (MB) / 7134 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.684780e-05 / 2.425029e+00
[Open3D DEBUG] #       Finalized tree: 0.132347 (s), 7092.76 (MB) / 7092.76 (MB) / 7134 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.417514 (s), 7092.76 (MB) / 7092.76 (MB) / 7134 (MB)
[Open3D DEBUG] #Set point constraints: 0.0588901 (s), 7092.76 (MB) / 7092.76 (MB) / 7134 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 584886 / 589232 / 79209
[Open3D DEBUG] Memory Usage: 7092.758 MB
[Open3D DEBUG] # Linear system solved: 8.74878 (s), 7092.95 (MB) / 7092.95 (MB) / 7134 (MB)
[Open3D DEBUG] Got average: 0.0242889 (s), 7092.95 (MB) / 7092.95 (MB) / 7134 (MB)
[Open3D DEBUG] Iso-Value: 5.016791e-01 = 2.596892e+04 / 5.176400e+04
[Open3D DEBUG] #          Total Solve:      14.7 (s),    7102.5 (MB)
TriangleMesh with 92720 points and 185428 triangles.
EMD: tensor([0.0519], dtype=torch.float64)
Chamfer: tensor([0.0498], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0376]); sim_loss: tensor([0.0517], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50848 / 43392
[Open3D DEBUG] #   Got kernel density: 0.021385 (s), 7114.01 (MB) / 7114.01 (MB) / 7154 (MB)
[Open3D DEBUG] #     Got normal field: 0.130658 (s), 7114.07 (MB) / 7114.07 (MB) / 7154 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.897401e-05 / 2.490230e+00
[Open3D DEBUG] #       Finalized tree: 0.130795 (s), 7114.32 (MB) / 7114.32 (MB) / 7154 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.432768 (s), 7114.32 (MB) / 7114.32 (MB) / 7154 (MB)
[Open3D DEBUG] #Set point constraints: 0.0501120 (s), 7114.32 (MB) / 7114.32 (MB) / 7154 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 566056 / 556368 / 90553
[Open3D DEBUG] Memory Usage: 7114.316 MB
[Open3D DEBUG] # Linear system solved: 9.05749 (s), 7114.32 (MB) / 7114.32 (MB) / 7154 (MB)
[Open3D DEBUG] Got average: 0.0265949 (s), 7114.32 (MB) / 7114.32 (MB) / 7154 (MB)
[Open3D DEBUG] Iso-Value: 5.021982e-01 = 2.553577e+04 / 5.084800e+04
[Open3D DEBUG] #          Total Solve:      15.0 (s),    7124.1 (MB)
TriangleMesh with 88114 points and 176244 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0387, mean: -0.0529, std: 0.0057
Selected top reward seqs: tensor([-0.0450, -0.0449, -0.0446, -0.0444, -0.0443, -0.0441, -0.0440, -0.0438,
        -0.0436, -0.0435, -0.0433, -0.0427, -0.0427, -0.0426, -0.0423, -0.0423,
        -0.0422, -0.0415, -0.0404, -0.0387])
Batch 0/20:
reward seqs after 13 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 22 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 20 iterations: tensor([-0.0404], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 31 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 20 iterations: tensor([-0.0426], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 23 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 26 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 25 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 16 iterations: tensor([-0.0362], grad_fn=<CatBackward>)
Loss: 0.036242272704839706
Optimal set of params:
mid_point: tensor([[0.5264, 0.1400, 0.5548],
        [0.4521, 0.1400, 0.5227]])
angle: tensor([0.8608, 2.0867], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2656, 0.1400, 0.8581, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6494, 0.1400, 0.8706, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50812 / 45834
[Open3D DEBUG] #   Got kernel density: 0.025172 (s), 7105.26 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] #     Got normal field: 0.140003 (s), 7106.89 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.009651e-05 / 3.053624e+00
[Open3D DEBUG] #       Finalized tree: 0.131535 (s), 7106.89 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.415452 (s), 7106.89 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] #Set point constraints: 0.053988 (s), 7106.89 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 615910 / 569688 / 134209
[Open3D DEBUG] Memory Usage: 7106.895 MB
[Open3D DEBUG] # Linear system solved: 8.85716 (s), 7107.09 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] Got average: 0.0275011 (s), 7107.09 (MB) / 7124.15 (MB) / 7164 (MB)
[Open3D DEBUG] Iso-Value: 5.014700e-01 = 2.548069e+04 / 5.081200e+04
[Open3D DEBUG] #          Total Solve:      15.0 (s),    7124.1 (MB)
TriangleMesh with 92604 points and 185100 triangles.
EMD: tensor([0.0435], dtype=torch.float64)
Chamfer: tensor([0.0495], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0362]); sim_loss: tensor([0.0441], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50874 / 45199
[Open3D DEBUG] #   Got kernel density: 0.0241771 (s), 7129.03 (MB) / 7129.03 (MB) / 7188 (MB)
[Open3D DEBUG] #     Got normal field: 0.136263 (s), 7130.9 (MB) / 7130.9 (MB) / 7188 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.581642e-05 / 2.839605e+00
[Open3D DEBUG] #       Finalized tree: 0.139509 (s), 7130.93 (MB) / 7130.93 (MB) / 7188 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.423719 (s), 7130.93 (MB) / 7130.93 (MB) / 7188 (MB)
[Open3D DEBUG] #Set point constraints: 0.0580330 (s), 7130.93 (MB) / 7130.93 (MB) / 7188 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 605018 / 574752 / 116697
[Open3D DEBUG] Memory Usage: 7130.926 MB
[Open3D DEBUG] # Linear system solved: 9.42069 (s), 7130.93 (MB) / 7130.93 (MB) / 7188 (MB)
[Open3D DEBUG] Got average: 0.02636 (s), 7130.93 (MB) / 7130.93 (MB) / 7188 (MB)
[Open3D DEBUG] Iso-Value: 5.023357e-01 = 2.555583e+04 / 5.087400e+04
[Open3D DEBUG] #          Total Solve:      15.6 (s),    7141.4 (MB)
TriangleMesh with 91695 points and 183324 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0398, mean: -0.0521, std: 0.0053
Selected top reward seqs: tensor([-0.0454, -0.0454, -0.0451, -0.0449, -0.0449, -0.0447, -0.0447, -0.0438,
        -0.0435, -0.0433, -0.0433, -0.0427, -0.0423, -0.0420, -0.0412, -0.0409,
        -0.0409, -0.0405, -0.0400, -0.0398])
Batch 0/20:
reward seqs after 11 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 25 iterations: tensor([-0.0444], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 17 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 13 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 5 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 5 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Loss: 0.03885289654135704
Optimal set of params:
mid_point: tensor([[0.5351, 0.1400, 0.4953],
        [0.4370, 0.1400, 0.5313]])
angle: tensor([1.0153, 1.9851], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0026, 0.0092], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3242, 0.1400, 0.8352, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5980, 0.1400, 0.8975, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 54147 / 36933
[Open3D DEBUG] #   Got kernel density: 0.00943685 (s), 7417.51 (MB) / 7417.51 (MB) / 7464 (MB)
[Open3D DEBUG] #     Got normal field: 0.0929971 (s), 7417.7 (MB) / 7417.7 (MB) / 7464 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.109895e-05 / 1.142445e+00
[Open3D DEBUG] #       Finalized tree: 0.0875912 (s), 7417.87 (MB) / 7417.87 (MB) / 7464 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.314833 (s), 7417.87 (MB) / 7417.87 (MB) / 7464 (MB)
[Open3D DEBUG] #Set point constraints: 0.0406241 (s), 7417.87 (MB) / 7417.87 (MB) / 7464 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 394969 / 447608 / 3785
[Open3D DEBUG] Memory Usage: 7417.867 MB
[Open3D DEBUG] # Linear system solved: 8.23555 (s), 7417.87 (MB) / 7417.87 (MB) / 7464 (MB)
[Open3D DEBUG] Got average: 0.0200970 (s), 7417.87 (MB) / 7417.87 (MB) / 7464 (MB)
[Open3D DEBUG] Iso-Value: 5.047389e-01 = 2.733010e+04 / 5.414700e+04
[Open3D DEBUG] #          Total Solve:      13.7 (s),    7419.6 (MB)
TriangleMesh with 64134 points and 128256 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0388, mean: -0.0497, std: 0.0047
Selected top reward seqs: tensor([-0.0442, -0.0441, -0.0441, -0.0440, -0.0440, -0.0440, -0.0438, -0.0438,
        -0.0437, -0.0437, -0.0435, -0.0435, -0.0434, -0.0421, -0.0420, -0.0420,
        -0.0420, -0.0419, -0.0418, -0.0388])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0439], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 22 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 3 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 17 iterations: tensor([-0.0427], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 23 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 17 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 20 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Loss: 0.04008657857775688
Optimal set of params:
mid_point: tensor([[0.4653, 0.1400, 0.5467]])
angle: tensor([2.0225], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0098], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6399, 0.1400, 0.9066, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50011 / 43214
[Open3D DEBUG] #   Got kernel density: 0.02177 (s), 7423.5 (MB) / 7423.5 (MB) / 7464 (MB)
[Open3D DEBUG] #     Got normal field: 0.128872 (s), 7424.7 (MB) / 7424.7 (MB) / 7464 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.685230e-05 / 2.343131e+00
[Open3D DEBUG] #       Finalized tree: 0.132486 (s), 7424.8 (MB) / 7424.8 (MB) / 7464 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.398862 (s), 7424.8 (MB) / 7424.8 (MB) / 7464 (MB)
[Open3D DEBUG] #Set point constraints: 0.055866 (s), 7424.8 (MB) / 7424.8 (MB) / 7464 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 564110 / 565432 / 79265
[Open3D DEBUG] Memory Usage: 7424.805 MB
[Open3D DEBUG] # Linear system solved: 9.04421 (s), 7424.81 (MB) / 7424.81 (MB) / 7464 (MB)
[Open3D DEBUG] Got average: 0.0274761 (s), 7424.81 (MB) / 7424.81 (MB) / 7464 (MB)
[Open3D DEBUG] Iso-Value: 5.016994e-01 = 2.509049e+04 / 5.001100e+04
[Open3D DEBUG] #          Total Solve:      15.3 (s),    7435.3 (MB)
TriangleMesh with 89888 points and 179796 triangles.
EMD: tensor([0.0412], dtype=torch.float64)
Chamfer: tensor([0.0419], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0401]); sim_loss: tensor([0.0412], dtype=torch.float64) ===============
torch.Size([5, 11, 14]) torch.Size([5, 40, 12])
Best init pose: tensor([[0.9177, 0.1400, 0.5080, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4593, 0.1400, 0.9379, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.1400, 0.8581, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.1400, 0.8352, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6399, 0.1400, 0.9066, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0401]); Best sim loss: tensor([0.0412], dtype=torch.float64)
Wrote profile results to control.py.lprof
