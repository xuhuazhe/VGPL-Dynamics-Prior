ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.238107 (s), 4285.83 (MB) / 4285.83 (MB) / 4326 (MB)
[Open3D DEBUG] #     Got normal field: 0.167069 (s), 4294.25 (MB) / 4294.25 (MB) / 4326 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997648e-05 / 9.944889e-01
[Open3D DEBUG] #       Finalized tree: 1.2556 (s), 4295.81 (MB) / 4295.81 (MB) / 4326 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.84208 (s), 4295.81 (MB) / 4295.81 (MB) / 4326 (MB)
[Open3D DEBUG] #Set point constraints: 0.700558 (s), 4295.81 (MB) / 4295.81 (MB) / 4326 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4296.004 MB
[Open3D DEBUG] # Linear system solved: 8.92073 (s), 4296.0 (MB) / 4296.0 (MB) / 4326 (MB)
[Open3D DEBUG] Got average: 0.226092 (s), 4296.0 (MB) / 4296.0 (MB) / 4326 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      55.6 (s),    4305.2 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0364, mean: -0.0493, std: 0.0048
Selected top reward seqs: tensor([-0.0425, -0.0424, -0.0424, -0.0421, -0.0420, -0.0420, -0.0414, -0.0413,
        -0.0412, -0.0412, -0.0410, -0.0406, -0.0404, -0.0400, -0.0393, -0.0388,
        -0.0384, -0.0383, -0.0378, -0.0364])
Batch 0/20:
reward seqs after 21 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 19 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0426], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 4 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 21 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 4 iterations: tensor([-0.0424], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 18 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 7 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Loss: 0.03759009763598442
Optimal set of params:
mid_point: tensor([[0.4613, 0.1400, 0.5203],
        [0.5528, 0.1400, 0.4726]])
angle: tensor([0.0946, 0.3982], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0631, 0.1400, 0.5581, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1841, 0.1400, 0.6277, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51932 / 44991
[Open3D DEBUG] #   Got kernel density: 0.295977 (s), 5762.21 (MB) / 5762.21 (MB) / 5792 (MB)
[Open3D DEBUG] #     Got normal field: 0.243658 (s), 5769.75 (MB) / 5769.75 (MB) / 5792 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.270551e-05 / 2.737102e+00
[Open3D DEBUG] #       Finalized tree: 1.47012 (s), 5771.17 (MB) / 5771.17 (MB) / 5792 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.96949 (s), 5771.17 (MB) / 5771.17 (MB) / 5792 (MB)
[Open3D DEBUG] #Set point constraints: 1.13051 (s), 5771.17 (MB) / 5771.17 (MB) / 5792 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 572972 / 540712 / 114113
[Open3D DEBUG] Memory Usage: 5771.172 MB
[Open3D DEBUG] # Linear system solved: 11.9647 (s), 5771.75 (MB) / 5771.75 (MB) / 5792 (MB)
[Open3D DEBUG] Got average: 0.369137 (s), 5771.75 (MB) / 5771.75 (MB) / 5792 (MB)
[Open3D DEBUG] Iso-Value: 5.015976e-01 = 2.604897e+04 / 5.193200e+04
[Open3D DEBUG] #          Total Solve:      68.0 (s),    5787.3 (MB)
TriangleMesh with 84600 points and 169142 triangles.
EMD: tensor([0.0427], dtype=torch.float64)
Chamfer: tensor([0.0420], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0376]); sim_loss: tensor([0.0427], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51367 / 42931
[Open3D DEBUG] #   Got kernel density: 0.270404 (s), 5812.49 (MB) / 5812.49 (MB) / 5844 (MB)
[Open3D DEBUG] #     Got normal field: 0.184722 (s), 5816.75 (MB) / 5816.75 (MB) / 5844 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.381626e-05 / 2.250710e+00
[Open3D DEBUG] #       Finalized tree: 1.40605 (s), 5817.31 (MB) / 5817.31 (MB) / 5844 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.10588 (s), 5817.31 (MB) / 5817.31 (MB) / 5844 (MB)
[Open3D DEBUG] #Set point constraints: 1.19924 (s), 5817.31 (MB) / 5817.31 (MB) / 5844 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 541409 / 541720 / 77033
[Open3D DEBUG] Memory Usage: 5817.309 MB
[Open3D DEBUG] # Linear system solved: 14.6755 (s), 5817.85 (MB) / 5817.85 (MB) / 5844 (MB)
[Open3D DEBUG] Got average: 0.43562 (s), 5817.85 (MB) / 5817.85 (MB) / 5844 (MB)
[Open3D DEBUG] Iso-Value: 5.022921e-01 = 2.580124e+04 / 5.136700e+04
[Open3D DEBUG] #          Total Solve:      68.1 (s),    5825.9 (MB)
TriangleMesh with 83527 points and 167034 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0312, mean: -0.0439, std: 0.0060
Selected top reward seqs: tensor([-0.0357, -0.0355, -0.0353, -0.0351, -0.0350, -0.0348, -0.0347, -0.0345,
        -0.0344, -0.0342, -0.0341, -0.0340, -0.0340, -0.0338, -0.0337, -0.0336,
        -0.0331, -0.0318, -0.0316, -0.0312])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 21 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 25 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 15 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 16 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 15 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Loss: 0.03058433346450329
Optimal set of params:
mid_point: tensor([[0.5459, 0.1400, 0.4407],
        [0.5238, 0.1400, 0.4958]])
angle: tensor([2.3200, 0.1961], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8183, 0.1400, 0.7336, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1315, 0.1400, 0.5737, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53894 / 45745
[Open3D DEBUG] #   Got kernel density: 0.445677 (s), 5874.0 (MB) / 5874.0 (MB) / 5906 (MB)
[Open3D DEBUG] #     Got normal field: 0.257672 (s), 5877.36 (MB) / 5877.36 (MB) / 5906 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.638243e-05 / 2.499735e+00
[Open3D DEBUG] #       Finalized tree: 1.69956 (s), 5878.35 (MB) / 5878.35 (MB) / 5906 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.94496 (s), 5878.35 (MB) / 5878.35 (MB) / 5906 (MB)
[Open3D DEBUG] #Set point constraints: 0.961131 (s), 5878.35 (MB) / 5878.35 (MB) / 5906 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 582443 / 576312 / 89337
[Open3D DEBUG] Memory Usage: 5878.348 MB
[Open3D DEBUG] # Linear system solved: 14.4043 (s), 5878.89 (MB) / 5878.89 (MB) / 5906 (MB)
[Open3D DEBUG] Got average: 0.395561 (s), 5879.35 (MB) / 5879.35 (MB) / 5906 (MB)
[Open3D DEBUG] Iso-Value: 5.024797e-01 = 2.708064e+04 / 5.389400e+04
[Open3D DEBUG] #          Total Solve:      70.0 (s),    5888.9 (MB)
TriangleMesh with 90521 points and 181042 triangles.
EMD: tensor([0.0312], dtype=torch.float64)
Chamfer: tensor([0.0384], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0306]); sim_loss: tensor([0.0319], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 54530 / 35767
[Open3D DEBUG] #   Got kernel density: 0.212579 (s), 5895.96 (MB) / 5895.96 (MB) / 5926 (MB)
[Open3D DEBUG] #     Got normal field: 0.159476 (s), 5897.66 (MB) / 5897.66 (MB) / 5926 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.982853e-05 / 1.081250e+00
[Open3D DEBUG] #       Finalized tree: 1.26443 (s), 5897.93 (MB) / 5897.93 (MB) / 5926 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.85348 (s), 5897.93 (MB) / 5897.93 (MB) / 5926 (MB)
[Open3D DEBUG] #Set point constraints: 0.857748 (s), 5897.93 (MB) / 5897.93 (MB) / 5926 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 376118 / 428216 / 1633
[Open3D DEBUG] Memory Usage: 5897.934 MB
[Open3D DEBUG] # Linear system solved: 10.6499 (s), 5898.54 (MB) / 5898.54 (MB) / 5926 (MB)
[Open3D DEBUG] Got average: 0.263335 (s), 5898.61 (MB) / 5898.61 (MB) / 5926 (MB)
[Open3D DEBUG] Iso-Value: 5.035129e-01 = 2.745656e+04 / 5.453000e+04
[Open3D DEBUG] #          Total Solve:      61.7 (s),    5904.5 (MB)
TriangleMesh with 59926 points and 119840 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0305, mean: -0.0435, std: 0.0054
Selected top reward seqs: tensor([-0.0363, -0.0360, -0.0360, -0.0357, -0.0355, -0.0350, -0.0350, -0.0347,
        -0.0345, -0.0345, -0.0341, -0.0338, -0.0338, -0.0337, -0.0336, -0.0335,
        -0.0327, -0.0321, -0.0313, -0.0305])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 20 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 19 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 2 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 4 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Loss: 0.030232323333621025
Optimal set of params:
mid_point: tensor([[0.5126, 0.1400, 0.4947],
        [0.4726, 0.1400, 0.5218]])
angle: tensor([3.1247, 0.1373], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9125, 0.1400, 0.5015, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0764, 0.1400, 0.5765, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53806 / 43850
[Open3D DEBUG] #   Got kernel density: 0.276841 (s), 5972.38 (MB) / 5972.38 (MB) / 6014 (MB)
[Open3D DEBUG] #     Got normal field: 0.161902 (s), 5975.52 (MB) / 5975.52 (MB) / 6014 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.718805e-05 / 2.000940e+00
[Open3D DEBUG] #       Finalized tree: 1.50548 (s), 5975.54 (MB) / 5975.54 (MB) / 6014 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.25522 (s), 5975.54 (MB) / 5975.54 (MB) / 6014 (MB)
[Open3D DEBUG] #Set point constraints: 1.15564 (s), 5975.54 (MB) / 5975.54 (MB) / 6014 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 555549 / 594648 / 40265
[Open3D DEBUG] Memory Usage: 5975.539 MB
[Open3D DEBUG] # Linear system solved: 12.124 (s), 5975.76 (MB) / 5975.76 (MB) / 6014 (MB)
[Open3D DEBUG] Got average: 0.330919 (s), 5975.76 (MB) / 5975.76 (MB) / 6014 (MB)
[Open3D DEBUG] Iso-Value: 5.027716e-01 = 2.705213e+04 / 5.380600e+04
[Open3D DEBUG] #          Total Solve:      69.3 (s),    5986.6 (MB)
TriangleMesh with 90651 points and 181270 triangles.
EMD: tensor([0.0355], dtype=torch.float64)
Chamfer: tensor([0.0384], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0302]); sim_loss: tensor([0.0358], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 53556 / 45263
[Open3D DEBUG] #   Got kernel density: 0.303460 (s), 5992.21 (MB) / 5992.21 (MB) / 6034 (MB)
[Open3D DEBUG] #     Got normal field: 0.209780 (s), 5993.39 (MB) / 5993.39 (MB) / 6034 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.444883e-05 / 2.380502e+00
[Open3D DEBUG] #       Finalized tree: 1.64535 (s), 5993.63 (MB) / 5993.63 (MB) / 6034 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.20186 (s), 5993.63 (MB) / 5993.63 (MB) / 6034 (MB)
[Open3D DEBUG] #Set point constraints: 1.20746 (s), 5993.63 (MB) / 5993.63 (MB) / 6034 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 576703 / 582376 / 76713
[Open3D DEBUG] Memory Usage: 5993.633 MB
[Open3D DEBUG] # Linear system solved: 13.1987 (s), 5993.93 (MB) / 5993.93 (MB) / 6034 (MB)
[Open3D DEBUG] Got average: 0.390968 (s), 5994.43 (MB) / 5994.43 (MB) / 6034 (MB)
[Open3D DEBUG] Iso-Value: 5.030542e-01 = 2.694157e+04 / 5.355600e+04
[Open3D DEBUG] #          Total Solve:      69.3 (s),    6002.7 (MB)
TriangleMesh with 90948 points and 181888 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0300, mean: -0.0432, std: 0.0056
Selected top reward seqs: tensor([-0.0361, -0.0358, -0.0357, -0.0354, -0.0353, -0.0352, -0.0347, -0.0347,
        -0.0343, -0.0343, -0.0338, -0.0334, -0.0333, -0.0329, -0.0329, -0.0328,
        -0.0327, -0.0325, -0.0319, -0.0300])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 19 iterations: tensor([-0.0337], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0367], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 17 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 3 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 8 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 14 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 20 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 20 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 3 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Loss: 0.03029540181159973
Optimal set of params:
mid_point: tensor([[0.5567, 0.1400, 0.4322],
        [0.4810, 0.1400, 0.4606]])
angle: tensor([0.5798, 2.9427], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0101, 0.0102], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2220, 0.1400, 0.6514, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8731, 0.1400, 0.5397, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52186 / 45649
[Open3D DEBUG] #   Got kernel density: 0.231728 (s), 6129.56 (MB) / 6129.56 (MB) / 6170 (MB)
[Open3D DEBUG] #     Got normal field: 0.243549 (s), 6132.57 (MB) / 6132.57 (MB) / 6170 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.457556e-05 / 2.848080e+00
[Open3D DEBUG] #       Finalized tree: 1.49444 (s), 6132.7 (MB) / 6132.7 (MB) / 6170 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.24975 (s), 6132.7 (MB) / 6132.7 (MB) / 6170 (MB)
[Open3D DEBUG] #Set point constraints: 1.10907 (s), 6132.7 (MB) / 6132.7 (MB) / 6170 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 587896 / 547904 / 123977
[Open3D DEBUG] Memory Usage: 6132.699 MB
[Open3D DEBUG] # Linear system solved: 12.6958 (s), 6132.7 (MB) / 6132.7 (MB) / 6170 (MB)
[Open3D DEBUG] Got average: 0.328576 (s), 6132.7 (MB) / 6132.7 (MB) / 6170 (MB)
[Open3D DEBUG] Iso-Value: 5.022357e-01 = 2.620967e+04 / 5.218600e+04
[Open3D DEBUG] #          Total Solve:      72.2 (s),    6140.4 (MB)
TriangleMesh with 86190 points and 172312 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0330, mean: -0.0393, std: 0.0035
Selected top reward seqs: tensor([-0.0350, -0.0350, -0.0350, -0.0349, -0.0348, -0.0347, -0.0346, -0.0346,
        -0.0346, -0.0345, -0.0342, -0.0341, -0.0340, -0.0340, -0.0339, -0.0335,
        -0.0335, -0.0335, -0.0333, -0.0330])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 13 iterations: tensor([-0.0358], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 6 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 18 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 19 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 5 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 24 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 5 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 33 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 15 iterations: tensor([-0.0340], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 15 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 24 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Loss: 0.0331486240029335
Optimal set of params:
mid_point: tensor([[0.4273, 0.1400, 0.4686]])
angle: tensor([2.8089], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8053, 0.1400, 0.5992, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52457 / 45766
[Open3D DEBUG] #   Got kernel density: 0.433679 (s), 6068.47 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] #     Got normal field: 0.300003 (s), 6070.14 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.076872e-05 / 2.663175e+00
[Open3D DEBUG] #       Finalized tree: 1.47521 (s), 6070.19 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.9824 (s), 6070.19 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] #Set point constraints: 1.12334 (s), 6070.19 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 585677 / 564456 / 104889
[Open3D DEBUG] Memory Usage: 6070.191 MB
[Open3D DEBUG] # Linear system solved: 14.2343 (s), 6070.19 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] Got average: 0.359589 (s), 6070.19 (MB) / 6140.42 (MB) / 6170 (MB)
[Open3D DEBUG] Iso-Value: 5.011600e-01 = 2.628935e+04 / 5.245700e+04
[Open3D DEBUG] #          Total Solve:      73.4 (s),    6140.4 (MB)
TriangleMesh with 90448 points and 180838 triangles.
EMD: tensor([0.0323], dtype=torch.float64)
Chamfer: tensor([0.0410], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0331]); sim_loss: tensor([0.0332], dtype=torch.float64) ===============
torch.Size([3, 11, 14]) torch.Size([3, 40, 12])
Best init pose: tensor([[0.0631, 0.1400, 0.5581, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8183, 0.1400, 0.7336, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1315, 0.1400, 0.5737, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0306]); Best sim loss: tensor([0.0319], dtype=torch.float64)
Wrote profile results to control.py.lprof
