ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.233043 (s), 4294.13 (MB) / 4294.13 (MB) / 4330 (MB)
[Open3D DEBUG] #     Got normal field: 0.0933621 (s), 4301.23 (MB) / 4301.23 (MB) / 4330 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997645e-05 / 9.944876e-01
[Open3D DEBUG] #       Finalized tree: 1.23479 (s), 4303.07 (MB) / 4303.07 (MB) / 4330 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.77265 (s), 4303.07 (MB) / 4303.07 (MB) / 4330 (MB)
[Open3D DEBUG] #Set point constraints: 0.751238 (s), 4303.07 (MB) / 4303.07 (MB) / 4330 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4303.066 MB
[Open3D DEBUG] # Linear system solved: 8.16091 (s), 4303.07 (MB) / 4303.07 (MB) / 4330 (MB)
[Open3D DEBUG] Got average: 0.326003 (s), 4303.07 (MB) / 4303.07 (MB) / 4330 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      53.0 (s),    4319.8 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0415, mean: -0.0484, std: 0.0034
Selected top reward seqs: tensor([-0.0439, -0.0439, -0.0438, -0.0438, -0.0438, -0.0438, -0.0438, -0.0437,
        -0.0437, -0.0437, -0.0437, -0.0435, -0.0435, -0.0431, -0.0429, -0.0425,
        -0.0424, -0.0420, -0.0419, -0.0415])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 6 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 5 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 19 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Loss: 0.04088209941983223
Optimal set of params:
mid_point: tensor([[0.5056, 0.1400, 0.5128],
        [0.4409, 0.1400, 0.4238]])
angle: tensor([2.7536, 2.3724], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8759, 0.1400, 0.6641, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7283, 0.1400, 0.7020, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 49285 / 43643
[Open3D DEBUG] #   Got kernel density: 0.238606 (s), 5958.85 (MB) / 5958.85 (MB) / 5988 (MB)
[Open3D DEBUG] #     Got normal field: 0.138808 (s), 5965.94 (MB) / 5965.94 (MB) / 5988 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.098565e-05 / 3.005678e+00
[Open3D DEBUG] #       Finalized tree: 1.40731 (s), 5966.59 (MB) / 5966.59 (MB) / 5988 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.935 (s), 5966.59 (MB) / 5966.59 (MB) / 5988 (MB)
[Open3D DEBUG] #Set point constraints: 1.28233 (s), 5966.59 (MB) / 5966.59 (MB) / 5988 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 579370 / 530520 / 131617
[Open3D DEBUG] Memory Usage: 5966.586 MB
[Open3D DEBUG] # Linear system solved: 14.5559 (s), 5967.91 (MB) / 5967.91 (MB) / 5988 (MB)
[Open3D DEBUG] Got average: 0.337904 (s), 5967.91 (MB) / 5967.91 (MB) / 5988 (MB)
[Open3D DEBUG] Iso-Value: 5.022347e-01 = 2.475264e+04 / 4.928500e+04
[Open3D DEBUG] #          Total Solve:      68.8 (s),    5983.5 (MB)
TriangleMesh with 83167 points and 166154 triangles.
EMD: tensor([0.0427], dtype=torch.float64)
Chamfer: tensor([0.0496], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0409]); sim_loss: tensor([0.0434], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 52263 / 26174
[Open3D DEBUG] #   Got kernel density: 0.216608 (s), 5991.66 (MB) / 5991.66 (MB) / 6022 (MB)
[Open3D DEBUG] #     Got normal field: 0.0595591 (s), 5993.43 (MB) / 5993.43 (MB) / 6022 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.281674e-05 / 6.698413e-01
[Open3D DEBUG] #       Finalized tree: 0.982634 (s), 5993.45 (MB) / 5993.45 (MB) / 6022 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.64199 (s), 5993.45 (MB) / 5993.45 (MB) / 6022 (MB)
[Open3D DEBUG] #Set point constraints: 0.500911 (s), 5993.45 (MB) / 5993.45 (MB) / 6022 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 252197 / 288128 / 97
[Open3D DEBUG] Memory Usage: 5993.449 MB
[Open3D DEBUG] # Linear system solved: 7.21022 (s), 5993.71 (MB) / 5993.71 (MB) / 6022 (MB)
[Open3D DEBUG] Got average: 0.273685 (s), 5993.71 (MB) / 5993.71 (MB) / 6022 (MB)
[Open3D DEBUG] Iso-Value: 5.102602e-01 = 2.666773e+04 / 5.226300e+04
[Open3D DEBUG] #          Total Solve:      45.2 (s),    5999.5 (MB)
TriangleMesh with 35096 points and 70180 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0415, mean: -0.0486, std: 0.0032
Selected top reward seqs: tensor([-0.0443, -0.0443, -0.0443, -0.0442, -0.0442, -0.0441, -0.0440, -0.0439,
        -0.0439, -0.0438, -0.0436, -0.0435, -0.0434, -0.0433, -0.0433, -0.0433,
        -0.0432, -0.0425, -0.0419, -0.0415])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0452], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 7 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 24 iterations: tensor([-0.0444], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0449], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 3 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 14 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 25 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Loss: 0.040994107723236084
Optimal set of params:
mid_point: tensor([[0.5738, 0.1400, 0.4522],
        [0.5663, 0.1400, 0.5636]])
angle: tensor([1.1758, 2.5867], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4198, 0.1400, 0.8214, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.9063, 0.1400, 0.7743, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50628 / 45106
[Open3D DEBUG] #   Got kernel density: 0.315875 (s), 6247.82 (MB) / 6247.82 (MB) / 6280 (MB)
[Open3D DEBUG] #     Got normal field: 0.291214 (s), 6251.25 (MB) / 6251.25 (MB) / 6280 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.618047e-05 / 2.844305e+00
[Open3D DEBUG] #       Finalized tree: 1.47794 (s), 6252.06 (MB) / 6252.06 (MB) / 6280 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.93466 (s), 6252.06 (MB) / 6252.06 (MB) / 6280 (MB)
[Open3D DEBUG] #Set point constraints: 1.33859 (s), 6252.06 (MB) / 6252.06 (MB) / 6280 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 615315 / 591416 / 111801
[Open3D DEBUG] Memory Usage: 6252.062 MB
[Open3D DEBUG] # Linear system solved: 11.6281 (s), 6252.29 (MB) / 6252.29 (MB) / 6280 (MB)
[Open3D DEBUG] Got average: 0.378529 (s), 6252.29 (MB) / 6252.29 (MB) / 6280 (MB)
[Open3D DEBUG] Iso-Value: 5.019609e-01 = 2.541328e+04 / 5.062800e+04
[Open3D DEBUG] #          Total Solve:      69.1 (s),    6267.0 (MB)
TriangleMesh with 95119 points and 190050 triangles.
EMD: tensor([0.0764], dtype=torch.float64)
Chamfer: tensor([0.0640], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0410]); sim_loss: tensor([0.0752], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50095 / 42779
[Open3D DEBUG] #   Got kernel density: 0.21566 (s), 6272.32 (MB) / 6272.32 (MB) / 6304 (MB)
[Open3D DEBUG] #     Got normal field: 0.158736 (s), 6276.26 (MB) / 6276.26 (MB) / 6304 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.990610e-05 / 2.500046e+00
[Open3D DEBUG] #       Finalized tree: 1.43672 (s), 6276.28 (MB) / 6276.28 (MB) / 6304 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.95265 (s), 6276.28 (MB) / 6276.28 (MB) / 6304 (MB)
[Open3D DEBUG] #Set point constraints: 1.05976 (s), 6276.28 (MB) / 6276.28 (MB) / 6304 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 534612 / 505528 / 105457
[Open3D DEBUG] Memory Usage: 6276.281 MB
[Open3D DEBUG] # Linear system solved: 10.5049 (s), 6276.34 (MB) / 6276.34 (MB) / 6304 (MB)
[Open3D DEBUG] Got average: 0.351022 (s), 6276.34 (MB) / 6276.34 (MB) / 6304 (MB)
[Open3D DEBUG] Iso-Value: 5.020713e-01 = 2.515126e+04 / 5.009500e+04
[Open3D DEBUG] #          Total Solve:      63.7 (s),    6288.5 (MB)
TriangleMesh with 77583 points and 155082 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0400, mean: -0.0499, std: 0.0037
Selected top reward seqs: tensor([-0.0451, -0.0450, -0.0449, -0.0449, -0.0448, -0.0444, -0.0441, -0.0440,
        -0.0439, -0.0436, -0.0427, -0.0426, -0.0424, -0.0422, -0.0422, -0.0421,
        -0.0415, -0.0410, -0.0400, -0.0400])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0452], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 13 iterations: tensor([-0.0459], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 27 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 17 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 22 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 19 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 14 iterations: tensor([-0.0418], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 14 iterations: tensor([-0.0434], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 16 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0430], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Loss: 0.037522777915000916
Optimal set of params:
mid_point: tensor([[0.5180, 0.1400, 0.5314],
        [0.4280, 0.1400, 0.4181]])
angle: tensor([3.0647, 2.1426], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9168, 0.1400, 0.5621, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6444, 0.1400, 0.7544, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52541 / 47162
[Open3D DEBUG] #   Got kernel density: 0.447945 (s), 6289.61 (MB) / 6289.61 (MB) / 6322 (MB)
[Open3D DEBUG] #     Got normal field: 0.221288 (s), 6293.73 (MB) / 6293.73 (MB) / 6322 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.102405e-05 / 3.206264e+00
[Open3D DEBUG] #       Finalized tree: 1.57851 (s), 6293.76 (MB) / 6293.76 (MB) / 6322 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.17822 (s), 6293.76 (MB) / 6293.76 (MB) / 6322 (MB)
[Open3D DEBUG] #Set point constraints: 1.20968 (s), 6293.76 (MB) / 6293.76 (MB) / 6322 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 645947 / 603976 / 134249
[Open3D DEBUG] Memory Usage: 6293.762 MB
[Open3D DEBUG] # Linear system solved: 11.2763 (s), 6293.76 (MB) / 6293.76 (MB) / 6322 (MB)
[Open3D DEBUG] Got average: 0.376877 (s), 6293.76 (MB) / 6293.76 (MB) / 6322 (MB)
[Open3D DEBUG] Iso-Value: 5.014722e-01 = 2.634785e+04 / 5.254100e+04
[Open3D DEBUG] #          Total Solve:      67.7 (s),    6302.2 (MB)
TriangleMesh with 97246 points and 194380 triangles.
EMD: tensor([0.0646], dtype=torch.float64)
Chamfer: tensor([0.0629], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0375]); sim_loss: tensor([0.0644], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51649 / 43596
[Open3D DEBUG] #   Got kernel density: 0.247673 (s), 6308.07 (MB) / 6308.07 (MB) / 6340 (MB)
[Open3D DEBUG] #     Got normal field: 0.190374 (s), 6308.65 (MB) / 6308.65 (MB) / 6340 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.450274e-05 / 2.298522e+00
[Open3D DEBUG] #       Finalized tree: 1.86605 (s), 6308.88 (MB) / 6308.88 (MB) / 6340 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.92309 (s), 6308.88 (MB) / 6308.88 (MB) / 6340 (MB)
[Open3D DEBUG] #Set point constraints: 1.17574 (s), 6308.88 (MB) / 6308.88 (MB) / 6340 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 565272 / 571448 / 74577
[Open3D DEBUG] Memory Usage: 6308.883 MB
[Open3D DEBUG] # Linear system solved: 9.84274 (s), 6308.93 (MB) / 6308.93 (MB) / 6340 (MB)
[Open3D DEBUG] Got average: 0.342047 (s), 6308.93 (MB) / 6308.93 (MB) / 6340 (MB)
[Open3D DEBUG] Iso-Value: 5.016899e-01 = 2.591178e+04 / 5.164900e+04
[Open3D DEBUG] #          Total Solve:      61.3 (s),    6319.1 (MB)
TriangleMesh with 89521 points and 179058 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0399, mean: -0.0493, std: 0.0042
Selected top reward seqs: tensor([-0.0445, -0.0445, -0.0442, -0.0442, -0.0441, -0.0440, -0.0437, -0.0437,
        -0.0436, -0.0433, -0.0432, -0.0420, -0.0418, -0.0417, -0.0416, -0.0413,
        -0.0405, -0.0402, -0.0399, -0.0399])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 3 iterations: tensor([-0.0437], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0442], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 28 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 17 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 7 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0419], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 6 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 6 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Loss: 0.037168145179748535
Optimal set of params:
mid_point: tensor([[0.4226, 0.1400, 0.4395],
        [0.5035, 0.1400, 0.4444]])
angle: tensor([2.4832, 1.0093], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0064], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7390, 0.1400, 0.6842, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2905, 0.1400, 0.7830, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50801 / 44663
[Open3D DEBUG] #   Got kernel density: 0.39524 (s), 6387.13 (MB) / 6387.13 (MB) / 6419 (MB)
[Open3D DEBUG] #     Got normal field: 0.281696 (s), 6389.38 (MB) / 6389.38 (MB) / 6419 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.273948e-05 / 2.679219e+00
[Open3D DEBUG] #       Finalized tree: 1.50626 (s), 6389.98 (MB) / 6389.98 (MB) / 6419 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.02841 (s), 6389.98 (MB) / 6389.98 (MB) / 6419 (MB)
[Open3D DEBUG] #Set point constraints: 1.02092 (s), 6389.98 (MB) / 6389.98 (MB) / 6419 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 592201 / 583432 / 93369
[Open3D DEBUG] Memory Usage: 6389.980 MB
[Open3D DEBUG] # Linear system solved: 11.3669 (s), 6389.98 (MB) / 6389.98 (MB) / 6419 (MB)
[Open3D DEBUG] Got average: 0.284119 (s), 6389.98 (MB) / 6389.98 (MB) / 6419 (MB)
[Open3D DEBUG] Iso-Value: 5.014885e-01 = 2.547612e+04 / 5.080100e+04
[Open3D DEBUG] #          Total Solve:      64.6 (s),    6396.1 (MB)
TriangleMesh with 93347 points and 186670 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0405, mean: -0.0494, std: 0.0035
Selected top reward seqs: tensor([-0.0445, -0.0445, -0.0445, -0.0444, -0.0443, -0.0443, -0.0443, -0.0443,
        -0.0443, -0.0440, -0.0436, -0.0436, -0.0434, -0.0432, -0.0424, -0.0420,
        -0.0419, -0.0418, -0.0413, -0.0405])
Batch 0/20:
reward seqs after 16 iterations: tensor([-0.0440], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 24 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0444], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 15 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 5 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 22 iterations: tensor([-0.0438], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0455], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 22 iterations: tensor([-0.0454], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0435], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 17 iterations: tensor([-0.0432], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 16 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 17 iterations: tensor([-0.0425], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0433], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Loss: 0.04102972894906998
Optimal set of params:
mid_point: tensor([[0.5771, 0.1400, 0.4866]])
angle: tensor([0.6069], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0107], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2486, 0.1400, 0.7147, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50673 / 43636
[Open3D DEBUG] #   Got kernel density: 0.335495 (s), 6385.02 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] #     Got normal field: 0.12728 (s), 6386.02 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.797810e-05 / 2.431195e+00
[Open3D DEBUG] #       Finalized tree: 1.40220 (s), 6386.55 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.66119 (s), 6386.55 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] #Set point constraints: 1.08067 (s), 6386.55 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 573700 / 574512 / 81145
[Open3D DEBUG] Memory Usage: 6386.547 MB
[Open3D DEBUG] # Linear system solved: 10.1834 (s), 6386.55 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] Got average: 0.314973 (s), 6386.55 (MB) / 6396.14 (MB) / 6419 (MB)
[Open3D DEBUG] Iso-Value: 5.026504e-01 = 2.547081e+04 / 5.067300e+04
[Open3D DEBUG] #          Total Solve:      64.7 (s),    6396.7 (MB)
TriangleMesh with 91800 points and 183604 triangles.
EMD: tensor([0.0812], dtype=torch.float64)
Chamfer: tensor([0.0666], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0410]); sim_loss: tensor([0.0797], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.8759, 0.1400, 0.6641, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7283, 0.1400, 0.7020, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0409]); Best sim loss: tensor([0.0434], dtype=torch.float64)
Wrote profile results to control.py.lprof
