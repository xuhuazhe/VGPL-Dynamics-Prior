ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.262826 (s), 4444.74 (MB) / 4444.74 (MB) / 4480 (MB)
[Open3D DEBUG] #     Got normal field: 0.11355 (s), 4454.73 (MB) / 4454.73 (MB) / 4480 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997652e-05 / 9.944910e-01
[Open3D DEBUG] #       Finalized tree: 1.0163 (s), 4456.26 (MB) / 4456.26 (MB) / 4480 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.86585 (s), 4456.26 (MB) / 4456.26 (MB) / 4480 (MB)
[Open3D DEBUG] #Set point constraints: 0.539216 (s), 4456.26 (MB) / 4456.26 (MB) / 4480 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4456.262 MB
[Open3D DEBUG] # Linear system solved: 8.80888 (s), 4456.88 (MB) / 4456.88 (MB) / 4480 (MB)
[Open3D DEBUG] Got average: 0.237887 (s), 4456.88 (MB) / 4456.88 (MB) / 4480 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      65.8 (s),    4467.7 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0294, mean: -0.0417, std: 0.0045
Selected top reward seqs: tensor([-0.0354, -0.0350, -0.0348, -0.0346, -0.0345, -0.0344, -0.0343, -0.0335,
        -0.0333, -0.0331, -0.0331, -0.0326, -0.0325, -0.0325, -0.0321, -0.0320,
        -0.0307, -0.0307, -0.0299, -0.0294])
Batch 0/20:
reward seqs after 3 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 3 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 21 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 24 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 19 iterations: tensor([-0.0340], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 18 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 25 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Loss: 0.028958968818187714
Optimal set of params:
mid_point: tensor([[0.5245, 0.1400, 0.4700],
        [0.5916, 0.1400, 0.5118]])
angle: tensor([2.4294, 0.7459], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8273, 0.1400, 0.7314, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2978, 0.1400, 0.7833, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 49527 / 42961
[Open3D DEBUG] #   Got kernel density: 0.535251 (s), 6434.15 (MB) / 6434.15 (MB) / 6657 (MB)
[Open3D DEBUG] #     Got normal field: 0.570404 (s), 6442.29 (MB) / 6442.29 (MB) / 6657 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.686275e-05 / 2.816241e+00
[Open3D DEBUG] #       Finalized tree: 1.69384 (s), 6443.13 (MB) / 6443.13 (MB) / 6657 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.6689 (s), 6443.13 (MB) / 6443.13 (MB) / 6657 (MB)
[Open3D DEBUG] #Set point constraints: 1.11127 (s), 6443.13 (MB) / 6443.13 (MB) / 6657 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 545504 / 494296 / 129137
[Open3D DEBUG] Memory Usage: 6443.129 MB
[Open3D DEBUG] # Linear system solved: 11.1681 (s), 6443.93 (MB) / 6443.93 (MB) / 6657 (MB)
[Open3D DEBUG] Got average: 0.373314 (s), 6444.15 (MB) / 6444.15 (MB) / 6657 (MB)
[Open3D DEBUG] Iso-Value: 5.049251e-01 = 2.500743e+04 / 4.952700e+04
[Open3D DEBUG] #          Total Solve:      76.5 (s),    6457.1 (MB)
TriangleMesh with 75660 points and 151175 triangles.
EMD: tensor([0.0297], dtype=torch.float64)
Chamfer: tensor([0.0363], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0290]); sim_loss: tensor([0.0303], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51568 / 31540
[Open3D DEBUG] #   Got kernel density: 0.120912 (s), 6465.53 (MB) / 6465.53 (MB) / 6657 (MB)
[Open3D DEBUG] #     Got normal field: 0.13365 (s), 6469.63 (MB) / 6469.63 (MB) / 6657 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.803201e-05 / 9.298745e-01
[Open3D DEBUG] #       Finalized tree: 1.03068 (s), 6469.88 (MB) / 6469.88 (MB) / 6657 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.79654 (s), 6469.88 (MB) / 6469.88 (MB) / 6657 (MB)
[Open3D DEBUG] #Set point constraints: 0.895307 (s), 6470.01 (MB) / 6470.01 (MB) / 6657 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 317955 / 362464 / 913
[Open3D DEBUG] Memory Usage: 6470.008 MB
[Open3D DEBUG] # Linear system solved: 8.711 (s), 6470.07 (MB) / 6470.07 (MB) / 6657 (MB)
[Open3D DEBUG] Got average: 0.359603 (s), 6470.07 (MB) / 6470.07 (MB) / 6657 (MB)
[Open3D DEBUG] Iso-Value: 5.008003e-01 = 2.582527e+04 / 5.156800e+04
[Open3D DEBUG] #          Total Solve:      69.5 (s),    6475.8 (MB)
TriangleMesh with 47854 points and 95696 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0289, mean: -0.0419, std: 0.0048
Selected top reward seqs: tensor([-0.0357, -0.0356, -0.0355, -0.0354, -0.0352, -0.0350, -0.0350, -0.0341,
        -0.0337, -0.0336, -0.0331, -0.0327, -0.0319, -0.0319, -0.0315, -0.0315,
        -0.0312, -0.0309, -0.0297, -0.0289])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 18 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0350], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 15 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 27 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 27 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 5 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0340], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 4 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 17 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 7 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 5 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Loss: 0.028844982385635376
Optimal set of params:
mid_point: tensor([[0.5551, 0.1400, 0.4602],
        [0.5880, 0.1400, 0.4992]])
angle: tensor([0.1603, 0.8087], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1602, 0.1400, 0.5241, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3118, 0.1400, 0.7885, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50039 / 43806
[Open3D DEBUG] #   Got kernel density: 0.291826 (s), 6494.64 (MB) / 6494.64 (MB) / 6657 (MB)
[Open3D DEBUG] #     Got normal field: 0.520491 (s), 6498.81 (MB) / 6498.81 (MB) / 6657 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.986095e-05 / 2.995382e+00
[Open3D DEBUG] #       Finalized tree: 1.61228 (s), 6499.0 (MB) / 6499.0 (MB) / 6657 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.38392 (s), 6499.0 (MB) / 6499.0 (MB) / 6657 (MB)
[Open3D DEBUG] #Set point constraints: 1.29004 (s), 6499.0 (MB) / 6499.0 (MB) / 6657 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 566896 / 509368 / 138513
[Open3D DEBUG] Memory Usage: 6499.000 MB
[Open3D DEBUG] # Linear system solved: 11.1745 (s), 6499.0 (MB) / 6499.0 (MB) / 6657 (MB)
[Open3D DEBUG] Got average: 0.289196 (s), 6499.0 (MB) / 6499.0 (MB) / 6657 (MB)
[Open3D DEBUG] Iso-Value: 5.046739e-01 = 2.525338e+04 / 5.003900e+04
[Open3D DEBUG] #          Total Solve:      76.8 (s),    6511.8 (MB)
TriangleMesh with 78827 points and 157500 triangles.
EMD: tensor([0.0319], dtype=torch.float64)
Chamfer: tensor([0.0381], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0288]); sim_loss: tensor([0.0325], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51144 / 23645
[Open3D DEBUG] #   Got kernel density: 0.288071 (s), 6517.76 (MB) / 6517.76 (MB) / 6657 (MB)
[Open3D DEBUG] #     Got normal field: 0.182969 (s), 6518.76 (MB) / 6518.76 (MB) / 6657 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.109917e-05 / 5.676557e-01
[Open3D DEBUG] #       Finalized tree: 0.730104 (s), 6518.96 (MB) / 6518.96 (MB) / 6657 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.81842 (s), 6518.96 (MB) / 6518.96 (MB) / 6657 (MB)
[Open3D DEBUG] #Set point constraints: 0.374401 (s), 6518.96 (MB) / 6518.96 (MB) / 6657 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 232919 / 265864 / 329
[Open3D DEBUG] Memory Usage: 6518.957 MB
[Open3D DEBUG] # Linear system solved: 6.61878 (s), 6519.16 (MB) / 6519.16 (MB) / 6657 (MB)
[Open3D DEBUG] Got average: 0.194203 (s), 6519.16 (MB) / 6519.16 (MB) / 6657 (MB)
[Open3D DEBUG] Iso-Value: 5.072621e-01 = 2.594341e+04 / 5.114400e+04
[Open3D DEBUG] #          Total Solve:      53.6 (s),    6521.3 (MB)
TriangleMesh with 30785 points and 61558 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0291, mean: -0.0417, std: 0.0044
Selected top reward seqs: tensor([-0.0356, -0.0354, -0.0351, -0.0350, -0.0344, -0.0339, -0.0339, -0.0338,
        -0.0337, -0.0335, -0.0332, -0.0330, -0.0326, -0.0322, -0.0319, -0.0315,
        -0.0313, -0.0303, -0.0298, -0.0291])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 18 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 4 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 36 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 16 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 4 iterations: tensor([-0.0337], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 7 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Loss: 0.028996195644140244
Optimal set of params:
mid_point: tensor([[0.5697, 0.1400, 0.4954],
        [0.5517, 0.1400, 0.4376]])
angle: tensor([0.9454, 1.1276], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0100], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3355, 0.1400, 0.8197, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3802, 0.1400, 0.7990, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50728 / 42828
[Open3D DEBUG] #   Got kernel density: 0.314978 (s), 6546.83 (MB) / 6546.83 (MB) / 6657 (MB)
[Open3D DEBUG] #     Got normal field: 0.25333 (s), 6551.25 (MB) / 6551.25 (MB) / 6657 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.616524e-05 / 2.341870e+00
[Open3D DEBUG] #       Finalized tree: 1.54972 (s), 6551.31 (MB) / 6551.31 (MB) / 6657 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.58745 (s), 6551.31 (MB) / 6551.31 (MB) / 6657 (MB)
[Open3D DEBUG] #Set point constraints: 1.27962 (s), 6551.31 (MB) / 6551.31 (MB) / 6657 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 541283 / 532680 / 85929
[Open3D DEBUG] Memory Usage: 6551.309 MB
[Open3D DEBUG] # Linear system solved: 11.4565 (s), 6551.31 (MB) / 6551.31 (MB) / 6657 (MB)
[Open3D DEBUG] Got average: 0.365134 (s), 6551.31 (MB) / 6551.31 (MB) / 6657 (MB)
[Open3D DEBUG] Iso-Value: 5.024426e-01 = 2.548791e+04 / 5.072800e+04
[Open3D DEBUG] #          Total Solve:      79.3 (s),    6561.9 (MB)
TriangleMesh with 82292 points and 164548 triangles.
EMD: tensor([0.0319], dtype=torch.float64)
Chamfer: tensor([0.0383], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0290]); sim_loss: tensor([0.0326], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50284 / 44276
[Open3D DEBUG] #   Got kernel density: 0.352361 (s), 6567.65 (MB) / 6567.65 (MB) / 6657 (MB)
[Open3D DEBUG] #     Got normal field: 0.314513 (s), 6568.5 (MB) / 6568.5 (MB) / 6657 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.193314e-05 / 3.114246e+00
[Open3D DEBUG] #       Finalized tree: 1.88452 (s), 6568.67 (MB) / 6568.67 (MB) / 6657 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.4283 (s), 6568.67 (MB) / 6568.67 (MB) / 6657 (MB)
[Open3D DEBUG] #Set point constraints: 1.17322 (s), 6568.67 (MB) / 6568.67 (MB) / 6657 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 584319 / 523736 / 144057
[Open3D DEBUG] Memory Usage: 6568.672 MB
[Open3D DEBUG] # Linear system solved: 13.1788 (s), 6568.68 (MB) / 6568.68 (MB) / 6657 (MB)
[Open3D DEBUG] Got average: 0.418987 (s), 6568.68 (MB) / 6568.68 (MB) / 6657 (MB)
[Open3D DEBUG] Iso-Value: 4.997540e-01 = 2.512963e+04 / 5.028400e+04
[Open3D DEBUG] #          Total Solve:      81.0 (s),    6572.1 (MB)
TriangleMesh with 81648 points and 163162 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0267, mean: -0.0380, std: 0.0053
Selected top reward seqs: tensor([-0.0309, -0.0308, -0.0306, -0.0306, -0.0303, -0.0301, -0.0301, -0.0298,
        -0.0298, -0.0297, -0.0296, -0.0294, -0.0292, -0.0291, -0.0288, -0.0287,
        -0.0286, -0.0286, -0.0271, -0.0267])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 26 iterations: tensor([-0.0279], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 2 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 4 iterations: tensor([-0.0277], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 25 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Loss: 0.02644507586956024
Optimal set of params:
mid_point: tensor([[0.5289, 0.1400, 0.4296],
        [0.4873, 0.1400, 0.4388]])
angle: tensor([1.3702, 1.5299], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0100, 0.0105], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4492, 0.1400, 0.8216, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4709, 0.1400, 0.8385, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50705 / 41266
[Open3D DEBUG] #   Got kernel density: 0.402110 (s), 6634.18 (MB) / 6634.18 (MB) / 6666 (MB)
[Open3D DEBUG] #     Got normal field: 0.439979 (s), 6637.48 (MB) / 6637.48 (MB) / 6666 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.914961e-05 / 1.985081e+00
[Open3D DEBUG] #       Finalized tree: 1.49032 (s), 6638.25 (MB) / 6638.25 (MB) / 6666 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.56376 (s), 6638.25 (MB) / 6638.25 (MB) / 6666 (MB)
[Open3D DEBUG] #Set point constraints: 1.20943 (s), 6638.25 (MB) / 6638.25 (MB) / 6666 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 524476 / 549816 / 49585
[Open3D DEBUG] Memory Usage: 6638.246 MB
[Open3D DEBUG] # Linear system solved: 11.5337 (s), 6638.25 (MB) / 6638.25 (MB) / 6666 (MB)
[Open3D DEBUG] Got average: 0.385039 (s), 6638.25 (MB) / 6638.25 (MB) / 6666 (MB)
[Open3D DEBUG] Iso-Value: 5.027233e-01 = 2.549059e+04 / 5.070500e+04
[Open3D DEBUG] #          Total Solve:      78.1 (s),    6651.2 (MB)
TriangleMesh with 83644 points and 167280 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0286, mean: -0.0339, std: 0.0036
Selected top reward seqs: tensor([-0.0297, -0.0296, -0.0295, -0.0294, -0.0294, -0.0294, -0.0293, -0.0292,
        -0.0291, -0.0290, -0.0290, -0.0290, -0.0290, -0.0290, -0.0290, -0.0289,
        -0.0289, -0.0288, -0.0286, -0.0286])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 14 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 3 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 19 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 5 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 7 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 7 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 15 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 6 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Loss: 0.02853683941066265
Optimal set of params:
mid_point: tensor([[0.5102, 0.1400, 0.4807]])
angle: tensor([1.7017], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5624, 0.1400, 0.8772, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52570 / 44419
[Open3D DEBUG] #   Got kernel density: 0.392397 (s), 6597.13 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] #     Got normal field: 0.285407 (s), 6599.53 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.364952e-05 / 2.294656e+00
[Open3D DEBUG] #       Finalized tree: 1.68355 (s), 6599.7 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.11499 (s), 6599.7 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] #Set point constraints: 1.34678 (s), 6599.7 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 573091 / 581752 / 73209
[Open3D DEBUG] Memory Usage: 6599.695 MB
[Open3D DEBUG] # Linear system solved: 11.9188 (s), 6599.7 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] Got average: 0.346731 (s), 6599.7 (MB) / 6651.2 (MB) / 6666 (MB)
[Open3D DEBUG] Iso-Value: 5.025974e-01 = 2.642154e+04 / 5.257000e+04
[Open3D DEBUG] #          Total Solve:      81.0 (s),    6651.2 (MB)
TriangleMesh with 90429 points and 180850 triangles.
EMD: tensor([0.0317], dtype=torch.float64)
Chamfer: tensor([0.0381], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0285]); sim_loss: tensor([0.0323], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.8273, 0.1400, 0.7314, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2978, 0.1400, 0.7833, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0290]); Best sim loss: tensor([0.0303], dtype=torch.float64)
Wrote profile results to control.py.lprof
