ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.403615 (s), 4445.95 (MB) / 4445.95 (MB) / 4486 (MB)
[Open3D DEBUG] #     Got normal field: 0.520588 (s), 4452.36 (MB) / 4452.36 (MB) / 4486 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997653e-05 / 9.944913e-01
[Open3D DEBUG] #       Finalized tree: 1.69695 (s), 4455.41 (MB) / 4455.41 (MB) / 4486 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.91288 (s), 4455.41 (MB) / 4455.41 (MB) / 4486 (MB)
[Open3D DEBUG] #Set point constraints: 0.63953 (s), 4455.41 (MB) / 4455.41 (MB) / 4486 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4455.414 MB
[Open3D DEBUG] # Linear system solved: 9.76505 (s), 4455.41 (MB) / 4455.41 (MB) / 4486 (MB)
[Open3D DEBUG] Got average: 0.276862 (s), 4455.41 (MB) / 4455.41 (MB) / 4486 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      69.8 (s),    4471.9 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0289, mean: -0.0399, std: 0.0034
Selected top reward seqs: tensor([-0.0350, -0.0350, -0.0348, -0.0348, -0.0346, -0.0346, -0.0341, -0.0340,
        -0.0340, -0.0333, -0.0332, -0.0331, -0.0330, -0.0330, -0.0327, -0.0326,
        -0.0323, -0.0321, -0.0295, -0.0289])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0350], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 5 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0350], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 27 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 21 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 25 iterations: tensor([-0.0298], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 5 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 27 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0322], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 8 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 28 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Loss: 0.02816854417324066
Optimal set of params:
mid_point: tensor([[0.5517, 0.1400, 0.4675],
        [0.5107, 0.1400, 0.4247]])
angle: tensor([1.1777, 1.4624], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3985, 0.1400, 0.8370, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4675, 0.1400, 0.8224, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50625 / 42507
[Open3D DEBUG] #   Got kernel density: 0.339137 (s), 6388.4 (MB) / 6388.4 (MB) / 6419 (MB)
[Open3D DEBUG] #     Got normal field: 0.254559 (s), 6395.98 (MB) / 6395.98 (MB) / 6419 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.568705e-05 / 2.312907e+00
[Open3D DEBUG] #       Finalized tree: 1.5673 (s), 6396.71 (MB) / 6396.71 (MB) / 6419 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.67284 (s), 6396.71 (MB) / 6396.71 (MB) / 6419 (MB)
[Open3D DEBUG] #Set point constraints: 1.37978 (s), 6396.71 (MB) / 6396.71 (MB) / 6419 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 542228 / 538720 / 80969
[Open3D DEBUG] Memory Usage: 6396.711 MB
[Open3D DEBUG] # Linear system solved: 14.7564 (s), 6396.71 (MB) / 6396.71 (MB) / 6419 (MB)
[Open3D DEBUG] Got average: 0.405561 (s), 6396.72 (MB) / 6396.72 (MB) / 6419 (MB)
[Open3D DEBUG] Iso-Value: 5.011958e-01 = 2.537304e+04 / 5.062500e+04
[Open3D DEBUG] #          Total Solve:      86.1 (s),    6415.4 (MB)
TriangleMesh with 83300 points and 166576 triangles.
EMD: tensor([0.0401], dtype=torch.float64)
Chamfer: tensor([0.0439], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0282]); sim_loss: tensor([0.0405], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50319 / 43095
[Open3D DEBUG] #   Got kernel density: 0.368438 (s), 6433.38 (MB) / 6433.38 (MB) / 6465 (MB)
[Open3D DEBUG] #     Got normal field: 0.526642 (s), 6436.73 (MB) / 6436.73 (MB) / 6465 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.031769e-05 / 2.531936e+00
[Open3D DEBUG] #       Finalized tree: 1.58448 (s), 6436.99 (MB) / 6436.99 (MB) / 6465 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.33851 (s), 6436.99 (MB) / 6436.99 (MB) / 6465 (MB)
[Open3D DEBUG] #Set point constraints: 1.36904 (s), 6436.99 (MB) / 6436.99 (MB) / 6465 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 541864 / 511800 / 107473
[Open3D DEBUG] Memory Usage: 6436.988 MB
[Open3D DEBUG] # Linear system solved: 13.2976 (s), 6436.99 (MB) / 6436.99 (MB) / 6465 (MB)
[Open3D DEBUG] Got average: 0.313878 (s), 6436.99 (MB) / 6436.99 (MB) / 6465 (MB)
[Open3D DEBUG] Iso-Value: 5.025914e-01 = 2.528990e+04 / 5.031900e+04
[Open3D DEBUG] #          Total Solve:      84.0 (s),    6444.2 (MB)
TriangleMesh with 78902 points and 157758 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0319, mean: -0.0395, std: 0.0030
Selected top reward seqs: tensor([-0.0353, -0.0352, -0.0350, -0.0350, -0.0349, -0.0349, -0.0347, -0.0346,
        -0.0345, -0.0344, -0.0343, -0.0343, -0.0337, -0.0335, -0.0335, -0.0328,
        -0.0327, -0.0326, -0.0321, -0.0319])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0354], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 13 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 22 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0340], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 26 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 16 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 5 iterations: tensor([-0.0342], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 5 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 15 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 5 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0340], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 16 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 20 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Loss: 0.031261738389730453
Optimal set of params:
mid_point: tensor([[0.4558, 0.1400, 0.4714],
        [0.5721, 0.1400, 0.4551]])
angle: tensor([0.0680, 1.0737], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0076, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0568, 0.1400, 0.4985, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3813, 0.1400, 0.8067, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51575 / 43467
[Open3D DEBUG] #   Got kernel density: 0.286831 (s), 6741.93 (MB) / 6741.93 (MB) / 6781 (MB)
[Open3D DEBUG] #     Got normal field: 0.373579 (s), 6743.71 (MB) / 6743.71 (MB) / 6781 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.499639e-05 / 2.320689e+00
[Open3D DEBUG] #       Finalized tree: 1.72039 (s), 6744.85 (MB) / 6744.85 (MB) / 6781 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.7736 (s), 6744.85 (MB) / 6744.85 (MB) / 6781 (MB)
[Open3D DEBUG] #Set point constraints: 2.00490 (s), 6744.85 (MB) / 6744.85 (MB) / 6781 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 548409 / 541088 / 85665
[Open3D DEBUG] Memory Usage: 6744.848 MB
[Open3D DEBUG] # Linear system solved: 13.1010 (s), 6744.85 (MB) / 6744.85 (MB) / 6781 (MB)
[Open3D DEBUG] Got average: 0.298677 (s), 6744.85 (MB) / 6744.85 (MB) / 6781 (MB)
[Open3D DEBUG] Iso-Value: 5.016479e-01 = 2.587249e+04 / 5.157500e+04
[Open3D DEBUG] #          Total Solve:      82.9 (s),    6756.7 (MB)
TriangleMesh with 83315 points and 166622 triangles.
EMD: tensor([0.0379], dtype=torch.float64)
Chamfer: tensor([0.0444], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0313]); sim_loss: tensor([0.0386], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51529 / 37978
[Open3D DEBUG] #   Got kernel density: 0.301997 (s), 6762.5 (MB) / 6762.5 (MB) / 6801 (MB)
[Open3D DEBUG] #     Got normal field: 0.551991 (s), 6764.36 (MB) / 6764.36 (MB) / 6801 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.696584e-05 / 1.389523e+00
[Open3D DEBUG] #       Finalized tree: 1.69272 (s), 6764.72 (MB) / 6764.72 (MB) / 6801 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.45591 (s), 6764.72 (MB) / 6764.72 (MB) / 6801 (MB)
[Open3D DEBUG] #Set point constraints: 1.15605 (s), 6764.72 (MB) / 6764.72 (MB) / 6801 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 445866 / 501504 / 8057
[Open3D DEBUG] Memory Usage: 6764.719 MB
[Open3D DEBUG] # Linear system solved: 10.127 (s), 6764.88 (MB) / 6764.88 (MB) / 6801 (MB)
[Open3D DEBUG] Got average: 0.300257 (s), 6764.88 (MB) / 6764.88 (MB) / 6801 (MB)
[Open3D DEBUG] Iso-Value: 5.029448e-01 = 2.591624e+04 / 5.152900e+04
[Open3D DEBUG] #          Total Solve:      67.9 (s),    6770.7 (MB)
TriangleMesh with 73087 points and 146158 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0301, mean: -0.0399, std: 0.0037
Selected top reward seqs: tensor([-0.0348, -0.0347, -0.0347, -0.0346, -0.0343, -0.0341, -0.0339, -0.0338,
        -0.0337, -0.0335, -0.0335, -0.0335, -0.0334, -0.0326, -0.0325, -0.0324,
        -0.0323, -0.0318, -0.0318, -0.0301])
Batch 0/20:
reward seqs after 32 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 3 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 10 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 2 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 14 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 4 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Loss: 0.030938703566789627
Optimal set of params:
mid_point: tensor([[0.4381, 0.1400, 0.4749],
        [0.5233, 0.1400, 0.4295]])
angle: tensor([2.6072, 1.3400], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7824, 0.1400, 0.6786, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4318, 0.1400, 0.8189, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50471 / 42822
[Open3D DEBUG] #   Got kernel density: 0.22583 (s), 6906.82 (MB) / 6906.82 (MB) / 6946 (MB)
[Open3D DEBUG] #     Got normal field: 0.274109 (s), 6909.76 (MB) / 6909.76 (MB) / 6946 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.729747e-05 / 2.387151e+00
[Open3D DEBUG] #       Finalized tree: 2.43043 (s), 6910.55 (MB) / 6910.55 (MB) / 6946 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.59657 (s), 6910.55 (MB) / 6910.55 (MB) / 6946 (MB)
[Open3D DEBUG] #Set point constraints: 1.58665 (s), 6910.55 (MB) / 6910.55 (MB) / 6946 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 542130 / 527400 / 92177
[Open3D DEBUG] Memory Usage: 6910.547 MB
[Open3D DEBUG] # Linear system solved: 12.3305 (s), 6910.68 (MB) / 6910.68 (MB) / 6946 (MB)
[Open3D DEBUG] Got average: 0.409774 (s), 6910.68 (MB) / 6910.68 (MB) / 6946 (MB)
[Open3D DEBUG] Iso-Value: 5.019777e-01 = 2.533532e+04 / 5.047100e+04
[Open3D DEBUG] #          Total Solve:      85.4 (s),    6920.2 (MB)
TriangleMesh with 81877 points and 163698 triangles.
EMD: tensor([0.0380], dtype=torch.float64)
Chamfer: tensor([0.0429], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0309]); sim_loss: tensor([0.0385], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 53922 / 31001
[Open3D DEBUG] #   Got kernel density: 0.255443 (s), 6926.14 (MB) / 6926.14 (MB) / 6966 (MB)
[Open3D DEBUG] #     Got normal field: 0.221533 (s), 6928.12 (MB) / 6928.12 (MB) / 6966 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.516148e-05 / 8.175375e-01
[Open3D DEBUG] #       Finalized tree: 1.07709 (s), 6928.14 (MB) / 6928.14 (MB) / 6966 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.08108 (s), 6928.14 (MB) / 6928.14 (MB) / 6966 (MB)
[Open3D DEBUG] #Set point constraints: 0.762271 (s), 6928.14 (MB) / 6928.14 (MB) / 6966 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 306321 / 349576 / 505
[Open3D DEBUG] Memory Usage: 6928.145 MB
[Open3D DEBUG] # Linear system solved: 9.00824 (s), 6928.25 (MB) / 6928.25 (MB) / 6966 (MB)
[Open3D DEBUG] Got average: 0.239837 (s), 6928.25 (MB) / 6928.25 (MB) / 6966 (MB)
[Open3D DEBUG] Iso-Value: 5.082343e-01 = 2.740501e+04 / 5.392200e+04
[Open3D DEBUG] #          Total Solve:      61.5 (s),    6932.0 (MB)
TriangleMesh with 46840 points and 93668 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0329, mean: -0.0403, std: 0.0033
Selected top reward seqs: tensor([-0.0363, -0.0363, -0.0362, -0.0359, -0.0359, -0.0354, -0.0352, -0.0351,
        -0.0350, -0.0350, -0.0348, -0.0347, -0.0347, -0.0343, -0.0342, -0.0340,
        -0.0340, -0.0337, -0.0332, -0.0329])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 23 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 7 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0358], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 22 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 24 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 7 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0338], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 20 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 6 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 15 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 17 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 7 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Loss: 0.031363315880298615
Optimal set of params:
mid_point: tensor([[0.5164, 0.1400, 0.4425],
        [0.5676, 0.1400, 0.5072]])
angle: tensor([1.4546, 2.4148], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0106, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4701, 0.1400, 0.8398, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8665, 0.1400, 0.7729, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50718 / 42382
[Open3D DEBUG] #   Got kernel density: 0.494246 (s), 7028.29 (MB) / 7028.29 (MB) / 7061 (MB)
[Open3D DEBUG] #     Got normal field: 0.227045 (s), 7030.91 (MB) / 7030.91 (MB) / 7061 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.280520e-05 / 2.170994e+00
[Open3D DEBUG] #       Finalized tree: 1.73692 (s), 7031.19 (MB) / 7031.19 (MB) / 7061 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.36276 (s), 7031.19 (MB) / 7031.19 (MB) / 7061 (MB)
[Open3D DEBUG] #Set point constraints: 1.81918 (s), 7031.19 (MB) / 7031.19 (MB) / 7061 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 539190 / 545952 / 70265
[Open3D DEBUG] Memory Usage: 7031.188 MB
[Open3D DEBUG] # Linear system solved: 13.159 (s), 7031.19 (MB) / 7031.19 (MB) / 7061 (MB)
[Open3D DEBUG] Got average: 0.340818 (s), 7031.19 (MB) / 7031.19 (MB) / 7061 (MB)
[Open3D DEBUG] Iso-Value: 5.024970e-01 = 2.548564e+04 / 5.071800e+04
[Open3D DEBUG] #          Total Solve:      83.6 (s),    7033.2 (MB)
TriangleMesh with 86057 points and 172142 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0307, mean: -0.0369, std: 0.0030
Selected top reward seqs: tensor([-0.0329, -0.0328, -0.0328, -0.0327, -0.0326, -0.0326, -0.0326, -0.0325,
        -0.0325, -0.0324, -0.0323, -0.0323, -0.0322, -0.0321, -0.0321, -0.0320,
        -0.0319, -0.0311, -0.0310, -0.0307])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 13 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 5 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 6 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 16 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 16 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 5 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 27 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 15 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 3 iterations: tensor([-0.0322], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Loss: 0.030785415321588516
Optimal set of params:
mid_point: tensor([[0.5407, 0.1400, 0.5591]])
angle: tensor([2.9347], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0084], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9321, 0.1400, 0.6413, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51224 / 39942
[Open3D DEBUG] #   Got kernel density: 0.396887 (s), 7004.46 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] #     Got normal field: 0.430388 (s), 7005.55 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.255908e-05 / 1.667807e+00
[Open3D DEBUG] #       Finalized tree: 1.70210 (s), 7006.04 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.50425 (s), 7006.04 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] #Set point constraints: 1.96248 (s), 7006.04 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 496791 / 547696 / 20065
[Open3D DEBUG] Memory Usage: 7006.035 MB
[Open3D DEBUG] # Linear system solved: 14.6904 (s), 7006.04 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] Got average: 0.414244 (s), 7006.04 (MB) / 7033.15 (MB) / 7061 (MB)
[Open3D DEBUG] Iso-Value: 5.035394e-01 = 2.579330e+04 / 5.122400e+04
[Open3D DEBUG] #          Total Solve:      78.7 (s),    7033.2 (MB)
TriangleMesh with 82733 points and 165462 triangles.
EMD: tensor([0.0379], dtype=torch.float64)
Chamfer: tensor([0.0464], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0308]); sim_loss: tensor([0.0388], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.3985, 0.1400, 0.8370, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0568, 0.1400, 0.4985, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7824, 0.1400, 0.6786, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4318, 0.1400, 0.8189, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0309]); Best sim loss: tensor([0.0385], dtype=torch.float64)
Wrote profile results to control.py.lprof
