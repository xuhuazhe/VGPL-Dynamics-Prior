ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49784 / 31795
[Open3D DEBUG] #   Got kernel density: 0.00952101 (s), 5207.29 (MB) / 5207.29 (MB) / 5222 (MB)
[Open3D DEBUG] #     Got normal field: 0.079814 (s), 5211.36 (MB) / 5211.36 (MB) / 5222 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.980663e-05 / 9.860532e-01
[Open3D DEBUG] #       Finalized tree: 0.072983 (s), 5213.9 (MB) / 5213.9 (MB) / 5222 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.322498 (s), 5214.25 (MB) / 5214.25 (MB) / 5222 (MB)
[Open3D DEBUG] #Set point constraints: 0.0299761 (s), 5214.25 (MB) / 5214.25 (MB) / 5222 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336449 / 382056 / 2457
[Open3D DEBUG] Memory Usage: 5214.254 MB
[Open3D DEBUG] # Linear system solved: 3.46145 (s), 5216.95 (MB) / 5216.95 (MB) / 5222 (MB)
[Open3D DEBUG] Got average: 0.0148239 (s), 5216.95 (MB) / 5216.95 (MB) / 5222 (MB)
[Open3D DEBUG] Iso-Value: 4.985180e-01 = 2.481822e+04 / 4.978400e+04
[Open3D DEBUG] #          Total Solve:       6.1 (s),    5233.8 (MB)
TriangleMesh with 50977 points and 101942 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0285, mean: -0.0368, std: 0.0035
Selected top reward seqs: tensor([-0.0322, -0.0319, -0.0318, -0.0316, -0.0313, -0.0313, -0.0312, -0.0307,
        -0.0307, -0.0306, -0.0306, -0.0306, -0.0301, -0.0299, -0.0298, -0.0295,
        -0.0293, -0.0292, -0.0290, -0.0285])
Batch 0/20:
reward seqs after 6 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 13 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 14 iterations: tensor([-0.0294], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 20 iterations: tensor([-0.0298], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 4 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 15 iterations: tensor([-0.0298], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 4 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 15 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Loss: 0.028064770624041557
Optimal set of params:
mid_point: tensor([[0.5448, 0.1400, 0.4371],
        [0.5741, 0.1400, 0.4747]])
angle: tensor([2.3908, 1.9874], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0102, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8372, 0.1400, 0.7100, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7360, 0.1400, 0.8405, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50718 / 43676
[Open3D DEBUG] #   Got kernel density: 0.0246060 (s), 6252.08 (MB) / 6252.08 (MB) / 6281 (MB)
[Open3D DEBUG] #     Got normal field: 0.0920579 (s), 6253.82 (MB) / 6253.82 (MB) / 6281 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.042091e-05 / 2.557247e+00
[Open3D DEBUG] #       Finalized tree: 0.0971031 (s), 6254.46 (MB) / 6254.46 (MB) / 6281 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.3886 (s), 6254.46 (MB) / 6254.46 (MB) / 6281 (MB)
[Open3D DEBUG] #Set point constraints: 0.0520730 (s), 6254.46 (MB) / 6254.46 (MB) / 6281 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 547884 / 517784 / 108369
[Open3D DEBUG] Memory Usage: 6254.461 MB
[Open3D DEBUG] # Linear system solved: 4.39174 (s), 6254.46 (MB) / 6254.46 (MB) / 6281 (MB)
[Open3D DEBUG] Got average: 0.022366 (s), 6254.46 (MB) / 6254.46 (MB) / 6281 (MB)
[Open3D DEBUG] Iso-Value: 5.020931e-01 = 2.546516e+04 / 5.071800e+04
[Open3D DEBUG] #          Total Solve:       7.9 (s),    6267.4 (MB)
TriangleMesh with 79516 points and 158964 triangles.
EMD: tensor([0.0374], dtype=torch.float64)
Chamfer: tensor([0.0410], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0281]); sim_loss: tensor([0.0378], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49511 / 43820
[Open3D DEBUG] #   Got kernel density: 0.0282831 (s), 6282.2 (MB) / 6282.2 (MB) / 6313 (MB)
[Open3D DEBUG] #     Got normal field: 0.110978 (s), 6284.06 (MB) / 6284.06 (MB) / 6313 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.537804e-05 / 3.236932e+00
[Open3D DEBUG] #       Finalized tree: 0.105062 (s), 6284.39 (MB) / 6284.39 (MB) / 6313 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.471103 (s), 6284.39 (MB) / 6284.39 (MB) / 6313 (MB)
[Open3D DEBUG] #Set point constraints: 0.048888 (s), 6284.39 (MB) / 6284.39 (MB) / 6313 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 576262 / 514656 / 143929
[Open3D DEBUG] Memory Usage: 6284.387 MB
[Open3D DEBUG] # Linear system solved: 4.28117 (s), 6284.71 (MB) / 6284.71 (MB) / 6313 (MB)
[Open3D DEBUG] Got average: 0.0239689 (s), 6284.71 (MB) / 6284.71 (MB) / 6313 (MB)
[Open3D DEBUG] Iso-Value: 5.028875e-01 = 2.489846e+04 / 4.951100e+04
[Open3D DEBUG] #          Total Solve:       8.0 (s),    6296.6 (MB)
TriangleMesh with 81321 points and 162505 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0287, mean: -0.0369, std: 0.0039
Selected top reward seqs: tensor([-0.0312, -0.0312, -0.0310, -0.0309, -0.0308, -0.0306, -0.0306, -0.0305,
        -0.0302, -0.0301, -0.0301, -0.0299, -0.0298, -0.0294, -0.0292, -0.0290,
        -0.0288, -0.0287, -0.0287, -0.0287])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 16 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 6 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 20 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 25 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 17 iterations: tensor([-0.0281], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 30 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 25 iterations: tensor([-0.0280], grad_fn=<CatBackward>)
Loss: 0.028006091713905334
Optimal set of params:
mid_point: tensor([[0.4908, 0.1400, 0.4922],
        [0.4830, 0.1400, 0.5564]])
angle: tensor([1.5701, 0.0917], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4905, 0.1400, 0.8922, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0847, 0.1400, 0.5931, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52864 / 44879
[Open3D DEBUG] #   Got kernel density: 0.0376050 (s), 6446.45 (MB) / 6446.45 (MB) / 6478 (MB)
[Open3D DEBUG] #     Got normal field: 0.122405 (s), 6447.77 (MB) / 6447.77 (MB) / 6478 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.573046e-05 / 2.417495e+00
[Open3D DEBUG] #       Finalized tree: 0.126869 (s), 6448.07 (MB) / 6448.07 (MB) / 6478 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.440100 (s), 6448.07 (MB) / 6448.07 (MB) / 6478 (MB)
[Open3D DEBUG] #Set point constraints: 0.055687 (s), 6448.07 (MB) / 6448.07 (MB) / 6478 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 583297 / 586664 / 79961
[Open3D DEBUG] Memory Usage: 6448.066 MB
[Open3D DEBUG] # Linear system solved: 3.96656 (s), 6448.07 (MB) / 6448.07 (MB) / 6478 (MB)
[Open3D DEBUG] Got average: 0.02564 (s), 6448.07 (MB) / 6448.07 (MB) / 6478 (MB)
[Open3D DEBUG] Iso-Value: 5.016705e-01 = 2.652031e+04 / 5.286400e+04
[Open3D DEBUG] #          Total Solve:       7.4 (s),    6459.1 (MB)
TriangleMesh with 92950 points and 185908 triangles.
EMD: tensor([0.0321], dtype=torch.float64)
Chamfer: tensor([0.0393], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0280]); sim_loss: tensor([0.0328], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 52496 / 44030
[Open3D DEBUG] #   Got kernel density: 0.0233879 (s), 6469.74 (MB) / 6469.74 (MB) / 6502 (MB)
[Open3D DEBUG] #     Got normal field: 0.120955 (s), 6469.74 (MB) / 6469.74 (MB) / 6502 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.451224e-05 / 2.336715e+00
[Open3D DEBUG] #       Finalized tree: 0.119808 (s), 6469.87 (MB) / 6469.87 (MB) / 6502 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.480282 (s), 6469.87 (MB) / 6469.87 (MB) / 6502 (MB)
[Open3D DEBUG] #Set point constraints: 0.0558741 (s), 6469.87 (MB) / 6469.87 (MB) / 6502 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 567309 / 571000 / 77353
[Open3D DEBUG] Memory Usage: 6469.871 MB
[Open3D DEBUG] # Linear system solved: 4.83139 (s), 6470.16 (MB) / 6470.16 (MB) / 6502 (MB)
[Open3D DEBUG] Got average: 0.023571 (s), 6470.16 (MB) / 6470.16 (MB) / 6502 (MB)
[Open3D DEBUG] Iso-Value: 5.028262e-01 = 2.639636e+04 / 5.249600e+04
[Open3D DEBUG] #          Total Solve:       8.6 (s),    6480.0 (MB)
TriangleMesh with 89385 points and 178774 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0300, mean: -0.0388, std: 0.0037
Selected top reward seqs: tensor([-0.0337, -0.0336, -0.0335, -0.0334, -0.0331, -0.0331, -0.0328, -0.0327,
        -0.0326, -0.0325, -0.0322, -0.0321, -0.0319, -0.0319, -0.0317, -0.0315,
        -0.0313, -0.0307, -0.0301, -0.0300])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0290], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 31 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 6 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 15 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 3 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 3 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 14 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 8 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 7 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 21 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Loss: 0.02888927049934864
Optimal set of params:
mid_point: tensor([[0.5161, 0.1400, 0.5291],
        [0.4958, 0.1400, 0.5778]])
angle: tensor([2.6474, 3.0500], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8682, 0.1400, 0.7188, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8941, 0.1400, 0.6143, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 52166 / 43993
[Open3D DEBUG] #   Got kernel density: 0.0248442 (s), 6507.95 (MB) / 6507.95 (MB) / 6540 (MB)
[Open3D DEBUG] #     Got normal field: 0.100475 (s), 6507.96 (MB) / 6507.96 (MB) / 6540 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.354422e-05 / 2.271528e+00
[Open3D DEBUG] #       Finalized tree: 0.11159 (s), 6508.1 (MB) / 6508.1 (MB) / 6540 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.427025 (s), 6508.1 (MB) / 6508.1 (MB) / 6540 (MB)
[Open3D DEBUG] #Set point constraints: 0.052763 (s), 6508.1 (MB) / 6508.1 (MB) / 6540 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 565377 / 574296 / 71849
[Open3D DEBUG] Memory Usage: 6508.098 MB
[Open3D DEBUG] # Linear system solved: 3.79206 (s), 6508.18 (MB) / 6508.18 (MB) / 6540 (MB)
[Open3D DEBUG] Got average: 0.0233881 (s), 6508.18 (MB) / 6508.18 (MB) / 6540 (MB)
[Open3D DEBUG] Iso-Value: 5.015678e-01 = 2.616479e+04 / 5.216600e+04
[Open3D DEBUG] #          Total Solve:       7.0 (s),    6514.8 (MB)
TriangleMesh with 90051 points and 180074 triangles.
EMD: tensor([0.0285], dtype=torch.float64)
Chamfer: tensor([0.0362], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0289]); sim_loss: tensor([0.0292], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 55307 / 31011
[Open3D DEBUG] #   Got kernel density: 0.00889707 (s), 6525.98 (MB) / 6525.98 (MB) / 6557 (MB)
[Open3D DEBUG] #     Got normal field: 0.065577 (s), 6525.98 (MB) / 6525.98 (MB) / 6557 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.474363e-05 / 8.154258e-01
[Open3D DEBUG] #       Finalized tree: 0.0681019 (s), 6526.08 (MB) / 6526.08 (MB) / 6557 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.275731 (s), 6526.08 (MB) / 6526.08 (MB) / 6557 (MB)
[Open3D DEBUG] #Set point constraints: 0.0272832 (s), 6526.08 (MB) / 6526.08 (MB) / 6557 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 310444 / 354240 / 553
[Open3D DEBUG] Memory Usage: 6526.078 MB
[Open3D DEBUG] # Linear system solved: 3.21676 (s), 6526.09 (MB) / 6526.09 (MB) / 6557 (MB)
[Open3D DEBUG] Got average: 0.0169978 (s), 6526.09 (MB) / 6526.09 (MB) / 6557 (MB)
[Open3D DEBUG] Iso-Value: 5.055926e-01 = 2.796281e+04 / 5.530700e+04
[Open3D DEBUG] #          Total Solve:       5.7 (s),    6527.3 (MB)
TriangleMesh with 46941 points and 93870 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0287, mean: -0.0403, std: 0.0042
Selected top reward seqs: tensor([-0.0351, -0.0350, -0.0349, -0.0348, -0.0348, -0.0347, -0.0339, -0.0338,
        -0.0332, -0.0328, -0.0325, -0.0320, -0.0319, -0.0315, -0.0310, -0.0310,
        -0.0302, -0.0295, -0.0291, -0.0287])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0359], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 3 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 16 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 10 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 18 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 13 iterations: tensor([-0.0329], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 6 iterations: tensor([-0.0287], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 19 iterations: tensor([-0.0289], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 18 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0295], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Loss: 0.028704417869448662
Optimal set of params:
mid_point: tensor([[0.5721, 0.1400, 0.5231],
        [0.4863, 0.1400, 0.5589]])
angle: tensor([1.2526, 0.1407], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4470, 0.1400, 0.9031, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0902, 0.1400, 0.6150, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 53231 / 27975
[Open3D DEBUG] #   Got kernel density: 0.00709009 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] #     Got normal field: 0.0507371 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.318132e-05 / 7.016546e-01
[Open3D DEBUG] #       Finalized tree: 0.0464048 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.231749 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] #Set point constraints: 0.0240500 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 275780 / 314768 / 409
[Open3D DEBUG] Memory Usage: 6643.109 MB
[Open3D DEBUG] # Linear system solved: 2.95961 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] Got average: 0.0132401 (s), 6643.11 (MB) / 6643.11 (MB) / 6675 (MB)
[Open3D DEBUG] Iso-Value: 5.075374e-01 = 2.701672e+04 / 5.323100e+04
[Open3D DEBUG] #          Total Solve:       5.6 (s),    6646.1 (MB)
TriangleMesh with 40933 points and 81854 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0312, mean: -0.0412, std: 0.0035
Selected top reward seqs: tensor([-0.0360, -0.0360, -0.0357, -0.0356, -0.0355, -0.0355, -0.0353, -0.0351,
        -0.0348, -0.0348, -0.0347, -0.0341, -0.0340, -0.0337, -0.0336, -0.0334,
        -0.0327, -0.0324, -0.0319, -0.0312])
Batch 0/20:
reward seqs after 9 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 23 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 21 iterations: tensor([-0.0357], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0359], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 21 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 21 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0355], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 16 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 6 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0342], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 18 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 6 iterations: tensor([-0.0328], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 13 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 25 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 25 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Loss: 0.03077653795480728
Optimal set of params:
mid_point: tensor([[0.4766, 0.1400, 0.5412]])
angle: tensor([0.1251], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0797, 0.1400, 0.5911, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 53032 / 45176
[Open3D DEBUG] #   Got kernel density: 0.0314 (s), 6623.71 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] #     Got normal field: 0.106188 (s), 6625.31 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.659667e-05 / 2.471114e+00
[Open3D DEBUG] #       Finalized tree: 0.117685 (s), 6625.31 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.43398 (s), 6625.31 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] #Set point constraints: 0.053226 (s), 6625.31 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 584998 / 582592 / 85977
[Open3D DEBUG] Memory Usage: 6625.309 MB
[Open3D DEBUG] # Linear system solved: 3.89931 (s), 6625.31 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] Got average: 0.0222011 (s), 6625.31 (MB) / 6646.1 (MB) / 6675 (MB)
[Open3D DEBUG] Iso-Value: 5.020822e-01 = 2.662643e+04 / 5.303200e+04
[Open3D DEBUG] #          Total Solve:       7.2 (s),    6646.1 (MB)
TriangleMesh with 92847 points and 185678 triangles.
EMD: tensor([0.0319], dtype=torch.float64)
Chamfer: tensor([0.0410], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0308]); sim_loss: tensor([0.0328], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.8372, 0.1400, 0.7100, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4905, 0.1400, 0.8922, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8682, 0.1400, 0.7188, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8941, 0.1400, 0.6143, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0289]); Best sim loss: tensor([0.0292], dtype=torch.float64)
Wrote profile results to control.py.lprof
