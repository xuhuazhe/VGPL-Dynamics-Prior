ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.219529 (s), 4328.82 (MB) / 4328.82 (MB) / 4350 (MB)
[Open3D DEBUG] #     Got normal field: 0.145951 (s), 4334.39 (MB) / 4334.39 (MB) / 4350 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048150e-05 / 8.944269e-01
[Open3D DEBUG] #       Finalized tree: 0.964662 (s), 4336.22 (MB) / 4336.22 (MB) / 4350 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.66696 (s), 4336.22 (MB) / 4336.22 (MB) / 4350 (MB)
[Open3D DEBUG] #Set point constraints: 0.504887 (s), 4336.22 (MB) / 4336.22 (MB) / 4350 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4336.223 MB
[Open3D DEBUG] # Linear system solved: 6.42217 (s), 4336.22 (MB) / 4336.22 (MB) / 4350 (MB)
[Open3D DEBUG] Got average: 0.260749 (s), 4336.22 (MB) / 4336.22 (MB) / 4350 (MB)
[Open3D DEBUG] Iso-Value: 5.039395e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      48.5 (s),    4353.5 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0377, mean: -0.0434, std: 0.0023
Selected top reward seqs: tensor([-0.0404, -0.0403, -0.0403, -0.0403, -0.0403, -0.0402, -0.0401, -0.0399,
        -0.0398, -0.0396, -0.0395, -0.0394, -0.0393, -0.0393, -0.0392, -0.0392,
        -0.0392, -0.0392, -0.0389, -0.0377])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 23 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 18 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 6 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 18 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 18 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 14 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 27 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 27 iterations: tensor([-0.0375], grad_fn=<CatBackward>)
Loss: 0.0375182144343853
Optimal set of params:
mid_point: tensor([[0.5037, 0.1400, 0.4879],
        [0.4247, 0.1400, 0.5218]])
angle: tensor([0.0798, 0.9876], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0106, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1050, 0.1400, 0.5198, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2044, 0.1400, 0.8557, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44984 / 40923
[Open3D DEBUG] #   Got kernel density: 0.275966 (s), 5651.0 (MB) / 5651.0 (MB) / 5682 (MB)
[Open3D DEBUG] #     Got normal field: 0.258491 (s), 5659.13 (MB) / 5659.13 (MB) / 5682 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 7.517762e-05 / 3.381790e+00
[Open3D DEBUG] #       Finalized tree: 1.3574 (s), 5659.95 (MB) / 5659.95 (MB) / 5682 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.29007 (s), 5660.14 (MB) / 5660.14 (MB) / 5682 (MB)
[Open3D DEBUG] #Set point constraints: 0.978209 (s), 5660.14 (MB) / 5660.14 (MB) / 5682 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 595610 / 537128 / 143569
[Open3D DEBUG] Memory Usage: 5660.145 MB
[Open3D DEBUG] # Linear system solved: 10.5539 (s), 5660.14 (MB) / 5660.14 (MB) / 5682 (MB)
[Open3D DEBUG] Got average: 0.322673 (s), 5660.15 (MB) / 5660.15 (MB) / 5682 (MB)
[Open3D DEBUG] Iso-Value: 5.006641e-01 = 2.252187e+04 / 4.498400e+04
[Open3D DEBUG] #          Total Solve:      64.4 (s),    5676.0 (MB)
TriangleMesh with 86809 points and 173382 triangles.
EMD: tensor([0.0347], dtype=torch.float64)
Chamfer: tensor([0.0380], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0375]); sim_loss: tensor([0.0351], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43958 / 36523
[Open3D DEBUG] #   Got kernel density: 0.272338 (s), 5666.12 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] #     Got normal field: 0.201240 (s), 5669.8 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.621674e-05 / 2.031596e+00
[Open3D DEBUG] #       Finalized tree: 1.2922 (s), 5669.91 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.85329 (s), 5669.91 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] #Set point constraints: 0.946567 (s), 5669.91 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 450605 / 429912 / 85065
[Open3D DEBUG] Memory Usage: 5669.910 MB
[Open3D DEBUG] # Linear system solved: 8.43478 (s), 5670.14 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] Got average: 0.24792 (s), 5670.14 (MB) / 5676.04 (MB) / 5698 (MB)
[Open3D DEBUG] Iso-Value: 5.043263e-01 = 2.216918e+04 / 4.395800e+04
[Open3D DEBUG] #          Total Solve:      53.7 (s),    5678.1 (MB)
TriangleMesh with 64044 points and 128092 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0384, mean: -0.0437, std: 0.0022
Selected top reward seqs: tensor([-0.0408, -0.0407, -0.0407, -0.0407, -0.0406, -0.0405, -0.0405, -0.0404,
        -0.0403, -0.0401, -0.0400, -0.0400, -0.0399, -0.0399, -0.0399, -0.0393,
        -0.0393, -0.0390, -0.0390, -0.0384])
Batch 0/20:
reward seqs after 4 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 21 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 5 iterations: tensor([-0.0407], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 7 iterations: tensor([-0.0386], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 6 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0390], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0396], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 10 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 43 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 14 iterations: tensor([-0.0377], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0378], grad_fn=<CatBackward>)
Loss: 0.03765716776251793
Optimal set of params:
mid_point: tensor([[0.5812, 0.1400, 0.4747],
        [0.4505, 0.1400, 0.5803]])
angle: tensor([2.3308, 2.5426], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8567, 0.1400, 0.7646, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.7809, 0.1400, 0.8058, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46965 / 28158
[Open3D DEBUG] #   Got kernel density: 0.229133 (s), 5740.28 (MB) / 5740.28 (MB) / 5772 (MB)
[Open3D DEBUG] #     Got normal field: 0.113486 (s), 5741.81 (MB) / 5741.81 (MB) / 5772 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.694188e-05 / 7.956753e-01
[Open3D DEBUG] #       Finalized tree: 1.39584 (s), 5741.9 (MB) / 5741.9 (MB) / 5772 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.73985 (s), 5741.9 (MB) / 5741.9 (MB) / 5772 (MB)
[Open3D DEBUG] #Set point constraints: 0.557567 (s), 5741.9 (MB) / 5741.9 (MB) / 5772 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 297088 / 338560 / 969
[Open3D DEBUG] Memory Usage: 5741.898 MB
[Open3D DEBUG] # Linear system solved: 7.46688 (s), 5741.9 (MB) / 5741.9 (MB) / 5772 (MB)
[Open3D DEBUG] Got average: 0.23871 (s), 5741.9 (MB) / 5741.9 (MB) / 5772 (MB)
[Open3D DEBUG] Iso-Value: 5.062492e-01 = 2.377599e+04 / 4.696500e+04
[Open3D DEBUG] #          Total Solve:      50.6 (s),    5747.1 (MB)
TriangleMesh with 44747 points and 89482 triangles.
EMD: tensor([0.0355], dtype=torch.float64)
Chamfer: tensor([0.0364], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0377]); sim_loss: tensor([0.0356], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 44670 / 39826
[Open3D DEBUG] #   Got kernel density: 0.372817 (s), 5746.89 (MB) / 5747.13 (MB) / 5810 (MB)
[Open3D DEBUG] #     Got normal field: 0.236941 (s), 5747.98 (MB) / 5747.98 (MB) / 5810 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.633982e-05 / 2.963400e+00
[Open3D DEBUG] #       Finalized tree: 1.32666 (s), 5748.62 (MB) / 5748.62 (MB) / 5810 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.86758 (s), 5748.64 (MB) / 5748.64 (MB) / 5810 (MB)
[Open3D DEBUG] #Set point constraints: 0.950450 (s), 5748.64 (MB) / 5748.64 (MB) / 5810 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 546757 / 491328 / 133537
[Open3D DEBUG] Memory Usage: 5748.637 MB
[Open3D DEBUG] # Linear system solved: 10.5991 (s), 5748.73 (MB) / 5748.73 (MB) / 5810 (MB)
[Open3D DEBUG] Got average: 0.312242 (s), 5748.73 (MB) / 5748.73 (MB) / 5810 (MB)
[Open3D DEBUG] Iso-Value: 5.015358e-01 = 2.240360e+04 / 4.467000e+04
[Open3D DEBUG] #          Total Solve:      61.4 (s),    5753.7 (MB)
TriangleMesh with 76666 points and 153106 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0372, mean: -0.0432, std: 0.0024
Selected top reward seqs: tensor([-0.0402, -0.0402, -0.0401, -0.0400, -0.0400, -0.0399, -0.0399, -0.0397,
        -0.0397, -0.0397, -0.0396, -0.0396, -0.0395, -0.0390, -0.0389, -0.0387,
        -0.0385, -0.0382, -0.0377, -0.0372])
Batch 0/20:
reward seqs after 2 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 5 iterations: tensor([-0.0387], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 16 iterations: tensor([-0.0371], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 15 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 4 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0366], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0384], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 14 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 2 iterations: tensor([-0.0372], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0385], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 26 iterations: tensor([-0.0371], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0380], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 21 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 2 iterations: tensor([-0.0370], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 7 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 19 iterations: tensor([-0.0369], grad_fn=<CatBackward>)
Loss: 0.036542002111673355
Optimal set of params:
mid_point: tensor([[0.5462, 0.1400, 0.4446],
        [0.4431, 0.1400, 0.5449]])
angle: tensor([0.0557, 1.3071], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0104, 0.0104], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1468, 0.1400, 0.4669, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3388, 0.1400, 0.9310, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44254 / 38249
[Open3D DEBUG] #   Got kernel density: 0.211197 (s), 5791.52 (MB) / 5791.52 (MB) / 5824 (MB)
[Open3D DEBUG] #     Got normal field: 0.103684 (s), 5794.05 (MB) / 5794.05 (MB) / 5824 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.142751e-05 / 2.275873e+00
[Open3D DEBUG] #       Finalized tree: 1.25171 (s), 5794.25 (MB) / 5794.25 (MB) / 5824 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.1157 (s), 5794.25 (MB) / 5794.25 (MB) / 5824 (MB)
[Open3D DEBUG] #Set point constraints: 1.03635 (s), 5794.25 (MB) / 5794.25 (MB) / 5824 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 499703 / 479552 / 91537
[Open3D DEBUG] Memory Usage: 5794.250 MB
[Open3D DEBUG] # Linear system solved: 9.77649 (s), 5794.25 (MB) / 5794.25 (MB) / 5824 (MB)
[Open3D DEBUG] Got average: 0.315529 (s), 5794.25 (MB) / 5794.25 (MB) / 5824 (MB)
[Open3D DEBUG] Iso-Value: 5.031515e-01 = 2.226647e+04 / 4.425400e+04
[Open3D DEBUG] #          Total Solve:      61.3 (s),    5802.0 (MB)
TriangleMesh with 74776 points and 149502 triangles.
EMD: tensor([0.0329], dtype=torch.float64)
Chamfer: tensor([0.0351], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0365]); sim_loss: tensor([0.0332], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 45289 / 38160
[Open3D DEBUG] #   Got kernel density: 0.259177 (s), 5796.31 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] #     Got normal field: 0.241999 (s), 5797.63 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.550255e-05 / 2.060765e+00
[Open3D DEBUG] #       Finalized tree: 1.28281 (s), 5797.8 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.75192 (s), 5797.8 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] #Set point constraints: 0.958735 (s), 5797.8 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 492290 / 490040 / 72577
[Open3D DEBUG] Memory Usage: 5797.797 MB
[Open3D DEBUG] # Linear system solved: 8.74305 (s), 5797.85 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] Got average: 0.309268 (s), 5797.85 (MB) / 5801.99 (MB) / 5963 (MB)
[Open3D DEBUG] Iso-Value: 5.050184e-01 = 2.287178e+04 / 4.528900e+04
[Open3D DEBUG] #          Total Solve:      56.9 (s),    5808.9 (MB)
TriangleMesh with 74510 points and 149006 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0389, mean: -0.0453, std: 0.0027
Selected top reward seqs: tensor([-0.0419, -0.0419, -0.0418, -0.0416, -0.0414, -0.0414, -0.0414, -0.0413,
        -0.0412, -0.0411, -0.0411, -0.0410, -0.0407, -0.0407, -0.0406, -0.0404,
        -0.0400, -0.0400, -0.0397, -0.0389])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 19 iterations: tensor([-0.0417], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0413], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0420], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 7 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 12 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 26 iterations: tensor([-0.0406], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 7 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 28 iterations: tensor([-0.0410], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 27 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 27 iterations: tensor([-0.0401], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0409], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0405], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 7 iterations: tensor([-0.0400], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0408], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0397], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 10 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0394], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Loss: 0.03831086307764053
Optimal set of params:
mid_point: tensor([[0.5694, 0.1400, 0.4317],
        [0.4616, 0.1400, 0.5595]])
angle: tensor([2.8420, 1.4182], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0103, 0.0109], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9516, 0.1400, 0.5497, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4008, 0.1400, 0.9548, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 45598 / 38898
[Open3D DEBUG] #   Got kernel density: 0.241773 (s), 5907.95 (MB) / 5907.95 (MB) / 5963 (MB)
[Open3D DEBUG] #     Got normal field: 0.277767 (s), 5909.34 (MB) / 5909.34 (MB) / 5963 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.706499e-05 / 2.146070e+00
[Open3D DEBUG] #       Finalized tree: 1.50193 (s), 5909.53 (MB) / 5909.53 (MB) / 5963 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.159 (s), 5909.53 (MB) / 5909.53 (MB) / 5963 (MB)
[Open3D DEBUG] #Set point constraints: 1.03942 (s), 5909.53 (MB) / 5909.53 (MB) / 5963 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 498905 / 489944 / 80233
[Open3D DEBUG] Memory Usage: 5909.531 MB
[Open3D DEBUG] # Linear system solved: 9.95674 (s), 5909.53 (MB) / 5909.53 (MB) / 5963 (MB)
[Open3D DEBUG] Got average: 0.29897 (s), 5909.53 (MB) / 5909.53 (MB) / 5963 (MB)
[Open3D DEBUG] Iso-Value: 5.024701e-01 = 2.291163e+04 / 4.559800e+04
[Open3D DEBUG] #          Total Solve:      58.5 (s),    5916.9 (MB)
TriangleMesh with 74670 points and 149314 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0383, mean: -0.0465, std: 0.0033
Selected top reward seqs: tensor([-0.0413, -0.0411, -0.0411, -0.0411, -0.0410, -0.0409, -0.0409, -0.0407,
        -0.0406, -0.0406, -0.0405, -0.0400, -0.0398, -0.0398, -0.0396, -0.0395,
        -0.0390, -0.0389, -0.0387, -0.0383])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0411], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 4 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 7 iterations: tensor([-0.0415], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 6 iterations: tensor([-0.0403], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0402], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0398], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 3 iterations: tensor([-0.0382], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 28 iterations: tensor([-0.0414], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0395], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0393], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0392], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 6 iterations: tensor([-0.0399], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 19 iterations: tensor([-0.0381], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 22 iterations: tensor([-0.0383], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0374], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 31 iterations: tensor([-0.0376], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0379], grad_fn=<CatBackward>)
Loss: 0.037382129579782486
Optimal set of params:
mid_point: tensor([[0.4576, 0.1400, 0.5612]])
angle: tensor([1.2199], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0101], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3201, 0.1400, 0.9368, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 43207 / 37291
[Open3D DEBUG] #   Got kernel density: 0.262199 (s), 5929.31 (MB) / 5929.31 (MB) / 5963 (MB)
[Open3D DEBUG] #     Got normal field: 0.202619 (s), 5931.39 (MB) / 5931.39 (MB) / 5963 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.998473e-05 / 2.159690e+00
[Open3D DEBUG] #       Finalized tree: 1.33945 (s), 5931.41 (MB) / 5931.41 (MB) / 5963 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.6725 (s), 5931.41 (MB) / 5931.41 (MB) / 5963 (MB)
[Open3D DEBUG] #Set point constraints: 0.842311 (s), 5931.41 (MB) / 5931.41 (MB) / 5963 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 488937 / 475472 / 83313
[Open3D DEBUG] Memory Usage: 5931.406 MB
[Open3D DEBUG] # Linear system solved: 9.44841 (s), 5931.41 (MB) / 5931.41 (MB) / 5963 (MB)
[Open3D DEBUG] Got average: 0.286504 (s), 5931.41 (MB) / 5931.41 (MB) / 5963 (MB)
[Open3D DEBUG] Iso-Value: 5.034834e-01 = 2.175401e+04 / 4.320700e+04
[Open3D DEBUG] #          Total Solve:      62.2 (s),    5931.9 (MB)
TriangleMesh with 73849 points and 147650 triangles.
EMD: tensor([0.0452], dtype=torch.float64)
Chamfer: tensor([0.0399], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0374]); sim_loss: tensor([0.0446], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.1050, 0.1400, 0.5198, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8567, 0.1400, 0.7646, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1468, 0.1400, 0.4669, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3388, 0.1400, 0.9310, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0365]); Best sim loss: tensor([0.0332], dtype=torch.float64)
Wrote profile results to control.py.lprof
