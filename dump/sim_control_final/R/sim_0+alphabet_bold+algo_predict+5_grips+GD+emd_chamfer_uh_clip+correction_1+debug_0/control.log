ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.298993 (s), 4436.79 (MB) / 4436.79 (MB) / 4477 (MB)
[Open3D DEBUG] #     Got normal field: 0.319249 (s), 4445.93 (MB) / 4445.93 (MB) / 4477 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997651e-05 / 9.944904e-01
[Open3D DEBUG] #       Finalized tree: 1.43595 (s), 4447.28 (MB) / 4447.28 (MB) / 4477 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.63109 (s), 4447.41 (MB) / 4447.41 (MB) / 4477 (MB)
[Open3D DEBUG] #Set point constraints: 1.14206 (s), 4447.41 (MB) / 4447.41 (MB) / 4477 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4447.410 MB
[Open3D DEBUG] # Linear system solved: 18.5994 (s), 4447.56 (MB) / 4447.56 (MB) / 4477 (MB)
[Open3D DEBUG] Got average: 0.515431 (s), 4447.56 (MB) / 4447.56 (MB) / 4477 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      83.4 (s),    4465.5 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0244, mean: -0.0336, std: 0.0041
Selected top reward seqs: tensor([-0.0282, -0.0282, -0.0281, -0.0281, -0.0281, -0.0281, -0.0277, -0.0277,
        -0.0276, -0.0276, -0.0275, -0.0266, -0.0265, -0.0263, -0.0261, -0.0260,
        -0.0255, -0.0250, -0.0246, -0.0244])
Batch 0/20:
reward seqs after 16 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0284], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 26 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 2 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 20 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0244], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0246], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 5 iterations: tensor([-0.0239], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 12 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0240], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0225], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0245], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0243], grad_fn=<CatBackward>)
Loss: 0.02246920019388199
Optimal set of params:
mid_point: tensor([[0.5189, 0.1400, 0.4773],
        [0.5032, 0.1400, 0.5435]])
angle: tensor([0.3568, 1.6341], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0105, 0.0100], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1441, 0.1400, 0.6170, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5285, 0.1400, 0.9427, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51275 / 42064
[Open3D DEBUG] #   Got kernel density: 0.359887 (s), 6742.0 (MB) / 6742.0 (MB) / 6773 (MB)
[Open3D DEBUG] #     Got normal field: 0.601272 (s), 6751.62 (MB) / 6751.62 (MB) / 6773 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.930597e-05 / 2.015414e+00
[Open3D DEBUG] #       Finalized tree: 1.89271 (s), 6754.82 (MB) / 6754.82 (MB) / 6773 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.54333 (s), 6754.82 (MB) / 6754.82 (MB) / 6773 (MB)
[Open3D DEBUG] #Set point constraints: 1.64382 (s), 6754.82 (MB) / 6754.82 (MB) / 6773 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 536691 / 564136 / 49225
[Open3D DEBUG] Memory Usage: 6754.824 MB
[Open3D DEBUG] # Linear system solved: 18.7307 (s), 6755.02 (MB) / 6755.02 (MB) / 6773 (MB)
[Open3D DEBUG] Got average: 0.43574 (s), 6755.02 (MB) / 6755.02 (MB) / 6773 (MB)
[Open3D DEBUG] Iso-Value: 5.030376e-01 = 2.579325e+04 / 5.127500e+04
[Open3D DEBUG] #          Total Solve:      94.2 (s),    6773.2 (MB)
TriangleMesh with 86707 points and 173434 triangles.
EMD: tensor([0.0310], dtype=torch.float64)
Chamfer: tensor([0.0399], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0225]); sim_loss: tensor([0.0319], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50846 / 42660
[Open3D DEBUG] #   Got kernel density: 0.287975 (s), 6762.82 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] #     Got normal field: 0.284096 (s), 6766.91 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.551063e-05 / 2.314033e+00
[Open3D DEBUG] #       Finalized tree: 1.8647 (s), 6767.2 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.38040 (s), 6767.2 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] #Set point constraints: 1.4224 (s), 6767.2 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 532491 / 520920 / 87641
[Open3D DEBUG] Memory Usage: 6767.203 MB
[Open3D DEBUG] # Linear system solved: 19.4997 (s), 6768.04 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] Got average: 0.777286 (s), 6768.04 (MB) / 6773.23 (MB) / 6793 (MB)
[Open3D DEBUG] Iso-Value: 5.042673e-01 = 2.563998e+04 / 5.084600e+04
[Open3D DEBUG] #          Total Solve:      88.7 (s),    6774.7 (MB)
TriangleMesh with 80326 points and 160612 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0255, mean: -0.0357, std: 0.0041
Selected top reward seqs: tensor([-0.0300, -0.0299, -0.0299, -0.0299, -0.0299, -0.0298, -0.0290, -0.0289,
        -0.0288, -0.0288, -0.0277, -0.0276, -0.0274, -0.0274, -0.0274, -0.0272,
        -0.0271, -0.0270, -0.0257, -0.0255])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 9 iterations: tensor([-0.0285], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0291], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 5 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 17 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0249], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0267], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 17 iterations: tensor([-0.0268], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 26 iterations: tensor([-0.0262], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0276], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0272], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0234], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0269], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0252], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0257], grad_fn=<CatBackward>)
Loss: 0.023427987471222878
Optimal set of params:
mid_point: tensor([[0.5692, 0.1400, 0.4950],
        [0.4676, 0.1400, 0.5791]])
angle: tensor([2.6774, 1.3441], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0080], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.9269, 0.1400, 0.6741, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.3778, 0.1400, 0.9689, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 49043 / 38028
[Open3D DEBUG] #   Got kernel density: 0.385576 (s), 7012.22 (MB) / 7012.22 (MB) / 7044 (MB)
[Open3D DEBUG] #     Got normal field: 0.404806 (s), 7013.99 (MB) / 7013.99 (MB) / 7044 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.081188e-05 / 1.511107e+00
[Open3D DEBUG] #       Finalized tree: 1.5813 (s), 7014.04 (MB) / 7014.04 (MB) / 7044 (MB)
[Open3D DEBUG] #  Set FEM constraints: 3.0131 (s), 7014.04 (MB) / 7014.04 (MB) / 7044 (MB)
[Open3D DEBUG] #Set point constraints: 1.32751 (s), 7014.04 (MB) / 7014.04 (MB) / 7044 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 449590 / 492920 / 20897
[Open3D DEBUG] Memory Usage: 7014.035 MB
[Open3D DEBUG] # Linear system solved: 17.3124 (s), 7014.04 (MB) / 7014.04 (MB) / 7044 (MB)
[Open3D DEBUG] Got average: 0.325533 (s), 7014.04 (MB) / 7014.04 (MB) / 7044 (MB)
[Open3D DEBUG] Iso-Value: 5.038347e-01 = 2.470956e+04 / 4.904300e+04
[Open3D DEBUG] #          Total Solve:      88.1 (s),    7021.6 (MB)
TriangleMesh with 74103 points and 148206 triangles.
EMD: tensor([0.0469], dtype=torch.float64)
Chamfer: tensor([0.0440], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0234]); sim_loss: tensor([0.0466], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50445 / 44479
[Open3D DEBUG] #   Got kernel density: 0.548751 (s), 7027.12 (MB) / 7027.12 (MB) / 7059 (MB)
[Open3D DEBUG] #     Got normal field: 0.388612 (s), 7030.1 (MB) / 7030.1 (MB) / 7059 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.424210e-05 / 2.736243e+00
[Open3D DEBUG] #       Finalized tree: 2.20210 (s), 7030.21 (MB) / 7030.21 (MB) / 7059 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.7276 (s), 7030.21 (MB) / 7030.21 (MB) / 7059 (MB)
[Open3D DEBUG] #Set point constraints: 1.63437 (s), 7030.21 (MB) / 7030.21 (MB) / 7059 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 575933 / 545776 / 112433
[Open3D DEBUG] Memory Usage: 7030.207 MB
[Open3D DEBUG] # Linear system solved: 23.785 (s), 7030.45 (MB) / 7030.45 (MB) / 7059 (MB)
[Open3D DEBUG] Got average: 0.671050 (s), 7030.45 (MB) / 7030.45 (MB) / 7059 (MB)
[Open3D DEBUG] Iso-Value: 5.014256e-01 = 2.529441e+04 / 5.044500e+04
[Open3D DEBUG] #          Total Solve:      96.5 (s),    7039.3 (MB)
TriangleMesh with 86452 points and 172812 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0266, mean: -0.0396, std: 0.0058
Selected top reward seqs: tensor([-0.0318, -0.0318, -0.0314, -0.0313, -0.0313, -0.0312, -0.0311, -0.0311,
        -0.0308, -0.0306, -0.0305, -0.0304, -0.0304, -0.0302, -0.0297, -0.0297,
        -0.0284, -0.0277, -0.0274, -0.0266])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 26 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 19 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0286], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 36 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 16 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0323], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 14 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 34 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 17 iterations: tensor([-0.0298], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 27 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 27 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 27 iterations: tensor([-0.0283], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 26 iterations: tensor([-0.0261], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0264], grad_fn=<CatBackward>)
Loss: 0.026101278141140938
Optimal set of params:
mid_point: tensor([[0.4502, 0.1400, 0.5108],
        [0.5425, 0.1400, 0.5666]])
angle: tensor([0.2937, 1.7636], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0099, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0673, 0.1400, 0.6266, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6191, 0.1400, 0.9592, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 49946 / 41662
[Open3D DEBUG] #   Got kernel density: 0.519492 (s), 7327.97 (MB) / 7327.97 (MB) / 7368 (MB)
[Open3D DEBUG] #     Got normal field: 0.347594 (s), 7329.37 (MB) / 7329.37 (MB) / 7368 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.011665e-05 / 2.003666e+00
[Open3D DEBUG] #       Finalized tree: 1.70932 (s), 7329.37 (MB) / 7329.37 (MB) / 7368 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.45471 (s), 7329.37 (MB) / 7329.37 (MB) / 7368 (MB)
[Open3D DEBUG] #Set point constraints: 1.49592 (s), 7329.37 (MB) / 7329.37 (MB) / 7368 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 534605 / 560032 / 50945
[Open3D DEBUG] Memory Usage: 7329.371 MB
[Open3D DEBUG] # Linear system solved: 16.9981 (s), 7329.42 (MB) / 7329.42 (MB) / 7368 (MB)
[Open3D DEBUG] Got average: 0.39173 (s), 7329.42 (MB) / 7329.42 (MB) / 7368 (MB)
[Open3D DEBUG] Iso-Value: 5.029190e-01 = 2.511879e+04 / 4.994600e+04
[Open3D DEBUG] #          Total Solve:      90.6 (s),    7336.5 (MB)
TriangleMesh with 88797 points and 177626 triangles.
EMD: tensor([0.0359], dtype=torch.float64)
Chamfer: tensor([0.0422], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0261]); sim_loss: tensor([0.0365], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 53061 / 44671
[Open3D DEBUG] #   Got kernel density: 0.324566 (s), 7342.55 (MB) / 7342.55 (MB) / 7384 (MB)
[Open3D DEBUG] #     Got normal field: 0.515646 (s), 7343.24 (MB) / 7343.24 (MB) / 7384 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.240640e-05 / 2.250126e+00
[Open3D DEBUG] #       Finalized tree: 1.74291 (s), 7343.42 (MB) / 7343.42 (MB) / 7384 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.62461 (s), 7343.42 (MB) / 7343.42 (MB) / 7384 (MB)
[Open3D DEBUG] #Set point constraints: 1.27637 (s), 7343.42 (MB) / 7343.42 (MB) / 7384 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 572972 / 593304 / 61521
[Open3D DEBUG] Memory Usage: 7343.418 MB
[Open3D DEBUG] # Linear system solved: 17.6297 (s), 7343.42 (MB) / 7343.42 (MB) / 7384 (MB)
[Open3D DEBUG] Got average: 0.855424 (s), 7343.42 (MB) / 7343.42 (MB) / 7384 (MB)
[Open3D DEBUG] Iso-Value: 5.022247e-01 = 2.664854e+04 / 5.306100e+04
[Open3D DEBUG] #          Total Solve:      90.3 (s),    7351.5 (MB)
TriangleMesh with 93172 points and 186340 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0272, mean: -0.0441, std: 0.0070
Selected top reward seqs: tensor([-0.0351, -0.0345, -0.0344, -0.0343, -0.0343, -0.0343, -0.0338, -0.0335,
        -0.0334, -0.0325, -0.0325, -0.0323, -0.0319, -0.0315, -0.0308, -0.0307,
        -0.0305, -0.0303, -0.0277, -0.0272])
Batch 0/20:
reward seqs after 29 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 7 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0348], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 26 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 15 iterations: tensor([-0.0330], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 7 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 11 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 15 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0288], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 16 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 21 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0292], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0275], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 13 iterations: tensor([-0.0274], grad_fn=<CatBackward>)
Loss: 0.027350982651114464
Optimal set of params:
mid_point: tensor([[0.5341, 0.1400, 0.5218],
        [0.5758, 0.1400, 0.5180]])
angle: tensor([1.5176, 2.2371], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0106, 0.0102], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5129, 0.1400, 0.9212, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8230, 0.1400, 0.8325, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 50753 / 43372
[Open3D DEBUG] #   Got kernel density: 0.427747 (s), 7393.73 (MB) / 7393.73 (MB) / 7434 (MB)
[Open3D DEBUG] #     Got normal field: 0.304111 (s), 7396.02 (MB) / 7396.02 (MB) / 7434 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.601324e-05 / 2.335310e+00
[Open3D DEBUG] #       Finalized tree: 1.86529 (s), 7396.17 (MB) / 7396.17 (MB) / 7434 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.77595 (s), 7396.17 (MB) / 7396.17 (MB) / 7434 (MB)
[Open3D DEBUG] #Set point constraints: 2.00384 (s), 7396.17 (MB) / 7396.17 (MB) / 7434 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 562199 / 566952 / 75561
[Open3D DEBUG] Memory Usage: 7396.172 MB
[Open3D DEBUG] # Linear system solved: 16.6178 (s), 7396.17 (MB) / 7396.17 (MB) / 7434 (MB)
[Open3D DEBUG] Got average: 0.507518 (s), 7396.17 (MB) / 7396.17 (MB) / 7434 (MB)
[Open3D DEBUG] Iso-Value: 5.023673e-01 = 2.549664e+04 / 5.075300e+04
[Open3D DEBUG] #          Total Solve:      94.0 (s),    7403.6 (MB)
TriangleMesh with 90186 points and 180368 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0282, mean: -0.0418, std: 0.0049
Selected top reward seqs: tensor([-0.0352, -0.0352, -0.0344, -0.0343, -0.0342, -0.0340, -0.0335, -0.0335,
        -0.0332, -0.0330, -0.0329, -0.0321, -0.0318, -0.0316, -0.0315, -0.0304,
        -0.0304, -0.0297, -0.0293, -0.0282])
Batch 0/20:
reward seqs after 14 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0325], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0344], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0336], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0332], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 14 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0303], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0298], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0296], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0282], grad_fn=<CatBackward>)
Loss: 0.028192508965730667
Optimal set of params:
mid_point: tensor([[0.5692, 0.1400, 0.5745]])
angle: tensor([1.9709], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0103], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.7250, 0.1400, 0.9429, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 48930 / 42948
[Open3D DEBUG] #   Got kernel density: 0.394987 (s), 7363.7 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] #     Got normal field: 0.385859 (s), 7366.15 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.171018e-05 / 2.530179e+00
[Open3D DEBUG] #       Finalized tree: 1.89059 (s), 7366.54 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.45803 (s), 7366.54 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] #Set point constraints: 1.29312 (s), 7366.54 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 565363 / 553600 / 92529
[Open3D DEBUG] Memory Usage: 7366.539 MB
[Open3D DEBUG] # Linear system solved: 16.5604 (s), 7366.54 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] Got average: 0.400862 (s), 7366.54 (MB) / 7403.65 (MB) / 7434 (MB)
[Open3D DEBUG] Iso-Value: 5.021348e-01 = 2.456945e+04 / 4.893000e+04
[Open3D DEBUG] #          Total Solve:      92.4 (s),    7403.6 (MB)
TriangleMesh with 88915 points and 177802 triangles.
EMD: tensor([0.0471], dtype=torch.float64)
Chamfer: tensor([0.0497], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0282]); sim_loss: tensor([0.0473], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.1441, 0.1400, 0.6170, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.5285, 0.1400, 0.9427, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0225]); Best sim loss: tensor([0.0319], dtype=torch.float64)
Wrote profile results to control.py.lprof
