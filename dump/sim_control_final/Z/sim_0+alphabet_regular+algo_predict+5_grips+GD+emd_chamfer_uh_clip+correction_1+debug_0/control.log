ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.199961 (s), 4342.62 (MB) / 4342.62 (MB) / 4363 (MB)
[Open3D DEBUG] #     Got normal field: 0.0706220 (s), 4345.39 (MB) / 4345.39 (MB) / 4363 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048150e-05 / 8.944272e-01
[Open3D DEBUG] #       Finalized tree: 0.972317 (s), 4347.02 (MB) / 4347.02 (MB) / 4363 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.84474 (s), 4347.02 (MB) / 4347.02 (MB) / 4363 (MB)
[Open3D DEBUG] #Set point constraints: 0.58575 (s), 4347.02 (MB) / 4347.02 (MB) / 4363 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4347.020 MB
[Open3D DEBUG] # Linear system solved: 7.17933 (s), 4347.02 (MB) / 4347.02 (MB) / 4363 (MB)
[Open3D DEBUG] Got average: 0.204650 (s), 4347.33 (MB) / 4347.33 (MB) / 4363 (MB)
[Open3D DEBUG] Iso-Value: 5.039395e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      50.4 (s),    4362.3 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0342, mean: -0.0417, std: 0.0037
Selected top reward seqs: tensor([-0.0367, -0.0366, -0.0366, -0.0364, -0.0363, -0.0360, -0.0360, -0.0360,
        -0.0356, -0.0353, -0.0349, -0.0348, -0.0347, -0.0346, -0.0346, -0.0345,
        -0.0345, -0.0345, -0.0343, -0.0342])
Batch 0/20:
reward seqs after 14 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 17 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0358], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0358], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0357], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 17 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 5 iterations: tensor([-0.0357], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 15 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 5 iterations: tensor([-0.0342], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 18 iterations: tensor([-0.0331], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 10 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 10 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 15 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 18 iterations: tensor([-0.0342], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0337], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 20 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0339], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0337], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0349], grad_fn=<CatBackward>)
Loss: 0.03311796858906746
Optimal set of params:
mid_point: tensor([[0.5197, 0.1400, 0.5298],
        [0.4721, 0.1400, 0.5041]])
angle: tensor([1.7581, 0.2759], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5942, 0.1400, 0.9228, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0872, 0.1400, 0.6130, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 43969 / 37952
[Open3D DEBUG] #   Got kernel density: 0.27438 (s), 5649.01 (MB) / 5649.01 (MB) / 5680 (MB)
[Open3D DEBUG] #     Got normal field: 0.141884 (s), 5658.39 (MB) / 5658.39 (MB) / 5680 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.613649e-05 / 2.468265e+00
[Open3D DEBUG] #       Finalized tree: 1.24004 (s), 5658.86 (MB) / 5658.86 (MB) / 5680 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.94726 (s), 5658.86 (MB) / 5658.86 (MB) / 5680 (MB)
[Open3D DEBUG] #Set point constraints: 0.954916 (s), 5658.86 (MB) / 5658.86 (MB) / 5680 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 488230 / 445736 / 112241
[Open3D DEBUG] Memory Usage: 5658.859 MB
[Open3D DEBUG] # Linear system solved: 10.0806 (s), 5659.94 (MB) / 5659.94 (MB) / 5680 (MB)
[Open3D DEBUG] Got average: 0.324511 (s), 5659.94 (MB) / 5659.94 (MB) / 5680 (MB)
[Open3D DEBUG] Iso-Value: 5.003353e-01 = 2.199924e+04 / 4.396900e+04
[Open3D DEBUG] #          Total Solve:      58.6 (s),    5671.1 (MB)
TriangleMesh with 67590 points and 135084 triangles.
EMD: tensor([0.0304], dtype=torch.float64)
Chamfer: tensor([0.0390], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0331]); sim_loss: tensor([0.0313], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43744 / 20638
[Open3D DEBUG] #   Got kernel density: 0.126071 (s), 5663.45 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] #     Got normal field: 0.0429020 (s), 5665.99 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.142388e-05 / 4.997263e-01
[Open3D DEBUG] #       Finalized tree: 0.740559 (s), 5666.14 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.38121 (s), 5666.14 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] #Set point constraints: 0.374256 (s), 5666.14 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 204877 / 233952 / 193
[Open3D DEBUG] Memory Usage: 5666.137 MB
[Open3D DEBUG] # Linear system solved: 5.2578 (s), 5666.14 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] Got average: 0.210594 (s), 5666.14 (MB) / 5671.09 (MB) / 5695 (MB)
[Open3D DEBUG] Iso-Value: 5.078219e-01 = 2.221416e+04 / 4.374400e+04
[Open3D DEBUG] #          Total Solve:      43.1 (s),    5671.1 (MB)
TriangleMesh with 27231 points and 54450 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0331, mean: -0.0416, std: 0.0034
Selected top reward seqs: tensor([-0.0371, -0.0370, -0.0366, -0.0363, -0.0362, -0.0360, -0.0360, -0.0360,
        -0.0358, -0.0357, -0.0356, -0.0356, -0.0354, -0.0353, -0.0352, -0.0349,
        -0.0348, -0.0345, -0.0333, -0.0331])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0365], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0360], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 4 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0351], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 16 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 28 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 19 iterations: tensor([-0.0361], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 18 iterations: tensor([-0.0345], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 7 iterations: tensor([-0.0356], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 11 iterations: tensor([-0.0343], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0352], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0341], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0363], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0353], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0347], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0346], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 25 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 13 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Loss: 0.031943775713443756
Optimal set of params:
mid_point: tensor([[0.4752, 0.1400, 0.5144],
        [0.5382, 0.1400, 0.5057]])
angle: tensor([0.4513, 0.0815], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1152, 0.1400, 0.6888, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1395, 0.1400, 0.5382, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 45427 / 39537
[Open3D DEBUG] #   Got kernel density: 0.405846 (s), 5729.01 (MB) / 5729.01 (MB) / 5761 (MB)
[Open3D DEBUG] #     Got normal field: 0.274237 (s), 5731.13 (MB) / 5731.13 (MB) / 5761 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.428740e-05 / 2.466114e+00
[Open3D DEBUG] #       Finalized tree: 1.40189 (s), 5731.59 (MB) / 5731.59 (MB) / 5761 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.82606 (s), 5731.59 (MB) / 5731.59 (MB) / 5761 (MB)
[Open3D DEBUG] #Set point constraints: 0.946354 (s), 5731.59 (MB) / 5731.59 (MB) / 5761 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 511239 / 476592 / 107681
[Open3D DEBUG] Memory Usage: 5731.594 MB
[Open3D DEBUG] # Linear system solved: 10.4644 (s), 5731.77 (MB) / 5731.77 (MB) / 5761 (MB)
[Open3D DEBUG] Got average: 0.331185 (s), 5731.91 (MB) / 5731.91 (MB) / 5761 (MB)
[Open3D DEBUG] Iso-Value: 5.037068e-01 = 2.288189e+04 / 4.542700e+04
[Open3D DEBUG] #          Total Solve:      61.0 (s),    5735.8 (MB)
TriangleMesh with 73176 points and 146288 triangles.
EMD: tensor([0.0280], dtype=torch.float64)
Chamfer: tensor([0.0374], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0319]); sim_loss: tensor([0.0290], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43694 / 38561
[Open3D DEBUG] #   Got kernel density: 0.235611 (s), 5753.08 (MB) / 5753.08 (MB) / 5807 (MB)
[Open3D DEBUG] #     Got normal field: 0.189337 (s), 5755.25 (MB) / 5755.25 (MB) / 5807 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.465973e-05 / 2.825242e+00
[Open3D DEBUG] #       Finalized tree: 1.63386 (s), 5755.54 (MB) / 5755.54 (MB) / 5807 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.88885 (s), 5755.54 (MB) / 5755.54 (MB) / 5807 (MB)
[Open3D DEBUG] #Set point constraints: 1.21593 (s), 5755.54 (MB) / 5755.54 (MB) / 5807 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 522964 / 472776 / 124897
[Open3D DEBUG] Memory Usage: 5755.543 MB
[Open3D DEBUG] # Linear system solved: 9.14107 (s), 5755.54 (MB) / 5755.54 (MB) / 5807 (MB)
[Open3D DEBUG] Got average: 0.274016 (s), 5755.54 (MB) / 5755.54 (MB) / 5807 (MB)
[Open3D DEBUG] Iso-Value: 5.014377e-01 = 2.190982e+04 / 4.369400e+04
[Open3D DEBUG] #          Total Solve:      59.0 (s),    5767.0 (MB)
TriangleMesh with 73385 points and 146594 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0315, mean: -0.0397, std: 0.0038
Selected top reward seqs: tensor([-0.0346, -0.0345, -0.0345, -0.0345, -0.0341, -0.0338, -0.0337, -0.0336,
        -0.0335, -0.0333, -0.0333, -0.0333, -0.0327, -0.0327, -0.0327, -0.0326,
        -0.0326, -0.0324, -0.0321, -0.0315])
Batch 0/20:
reward seqs after 11 iterations: tensor([-0.0334], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0324], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0335], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 4 iterations: tensor([-0.0333], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 9 iterations: tensor([-0.0322], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 14 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 11 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 26 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 17 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0299], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 30 iterations: tensor([-0.0320], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 15 iterations: tensor([-0.0319], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 15 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Loss: 0.029687868431210518
Optimal set of params:
mid_point: tensor([[0.4785, 0.1400, 0.4431],
        [0.4922, 0.1400, 0.4812]])
angle: tensor([0.2154, 0.0438], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0877, 0.1400, 0.5286, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0926, 0.1400, 0.4987, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 45664 / 39676
[Open3D DEBUG] #   Got kernel density: 0.369186 (s), 5794.39 (MB) / 5794.39 (MB) / 5834 (MB)
[Open3D DEBUG] #     Got normal field: 0.263171 (s), 5796.5 (MB) / 5796.5 (MB) / 5834 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.477100e-05 / 2.501063e+00
[Open3D DEBUG] #       Finalized tree: 1.52503 (s), 5797.55 (MB) / 5797.55 (MB) / 5834 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.80655 (s), 5797.55 (MB) / 5797.55 (MB) / 5834 (MB)
[Open3D DEBUG] #Set point constraints: 1.11255 (s), 5797.55 (MB) / 5797.55 (MB) / 5834 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 511897 / 473208 / 111817
[Open3D DEBUG] Memory Usage: 5797.547 MB
[Open3D DEBUG] # Linear system solved: 9.32543 (s), 5797.55 (MB) / 5797.55 (MB) / 5834 (MB)
[Open3D DEBUG] Got average: 0.363996 (s), 5797.55 (MB) / 5797.55 (MB) / 5834 (MB)
[Open3D DEBUG] Iso-Value: 5.028926e-01 = 2.296409e+04 / 4.566400e+04
[Open3D DEBUG] #          Total Solve:      58.2 (s),    5804.6 (MB)
TriangleMesh with 72895 points and 145706 triangles.
EMD: tensor([0.0294], dtype=torch.float64)
Chamfer: tensor([0.0367], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0297]); sim_loss: tensor([0.0301], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 47042 / 23470
[Open3D DEBUG] #   Got kernel density: 0.148606 (s), 5799.23 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] #     Got normal field: 0.0517578 (s), 5800.44 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.227685e-05 / 5.775274e-01
[Open3D DEBUG] #       Finalized tree: 0.849241 (s), 5800.47 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.48311 (s), 5800.47 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] #Set point constraints: 0.440602 (s), 5800.47 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 237721 / 271592 / 89
[Open3D DEBUG] Memory Usage: 5800.473 MB
[Open3D DEBUG] # Linear system solved: 6.04149 (s), 5800.7 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] Got average: 0.295678 (s), 5800.7 (MB) / 5804.56 (MB) / 5963 (MB)
[Open3D DEBUG] Iso-Value: 5.101032e-01 = 2.399627e+04 / 4.704200e+04
[Open3D DEBUG] #          Total Solve:      42.6 (s),    5804.6 (MB)
TriangleMesh with 32857 points and 65702 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0299, mean: -0.0386, std: 0.0034
Selected top reward seqs: tensor([-0.0339, -0.0338, -0.0338, -0.0337, -0.0334, -0.0333, -0.0329, -0.0329,
        -0.0328, -0.0327, -0.0324, -0.0322, -0.0319, -0.0317, -0.0315, -0.0314,
        -0.0308, -0.0303, -0.0301, -0.0299])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 12 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 6 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 2 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0326], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 12 iterations: tensor([-0.0327], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0317], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 15 iterations: tensor([-0.0301], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 14 iterations: tensor([-0.0297], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 23 iterations: tensor([-0.0304], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 14 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 3 iterations: tensor([-0.0309], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 13 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 14 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 30 iterations: tensor([-0.0293], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0300], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 8 iterations: tensor([-0.0294], grad_fn=<CatBackward>)
Loss: 0.029264839366078377
Optimal set of params:
mid_point: tensor([[0.5202, 0.1400, 0.5718],
        [0.4966, 0.1400, 0.4868]])
angle: tensor([2.6366, 3.1328], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0065, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8703, 0.1400, 0.7653, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8966, 0.1400, 0.4904, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 45674 / 34865
[Open3D DEBUG] #   Got kernel density: 0.211992 (s), 5905.61 (MB) / 5905.61 (MB) / 5963 (MB)
[Open3D DEBUG] #     Got normal field: 0.276014 (s), 5907.88 (MB) / 5907.88 (MB) / 5963 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 3.089883e-05 / 1.411273e+00
[Open3D DEBUG] #       Finalized tree: 1.14458 (s), 5908.2 (MB) / 5908.2 (MB) / 5963 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.46542 (s), 5908.2 (MB) / 5908.2 (MB) / 5963 (MB)
[Open3D DEBUG] #Set point constraints: 1.46129 (s), 5908.2 (MB) / 5908.2 (MB) / 5963 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 433056 / 481280 / 13641
[Open3D DEBUG] Memory Usage: 5908.199 MB
[Open3D DEBUG] # Linear system solved: 9.07337 (s), 5908.2 (MB) / 5908.2 (MB) / 5963 (MB)
[Open3D DEBUG] Got average: 0.231404 (s), 5908.2 (MB) / 5908.2 (MB) / 5963 (MB)
[Open3D DEBUG] Iso-Value: 5.042924e-01 = 2.303305e+04 / 4.567400e+04
[Open3D DEBUG] #          Total Solve:      57.6 (s),    5917.6 (MB)
TriangleMesh with 69573 points and 139134 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0305, mean: -0.0367, std: 0.0031
Selected top reward seqs: tensor([-0.0325, -0.0324, -0.0324, -0.0323, -0.0322, -0.0321, -0.0321, -0.0320,
        -0.0319, -0.0316, -0.0315, -0.0313, -0.0313, -0.0312, -0.0312, -0.0311,
        -0.0311, -0.0310, -0.0308, -0.0305])
Batch 0/20:
reward seqs after 14 iterations: tensor([-0.0302], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0314], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0321], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0315], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0318], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0313], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 12 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 13 iterations: tensor([-0.0316], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 7 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 18 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 4 iterations: tensor([-0.0307], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 4 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 26 iterations: tensor([-0.0312], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0305], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0310], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 17 iterations: tensor([-0.0311], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 14 iterations: tensor([-0.0306], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 3 iterations: tensor([-0.0308], grad_fn=<CatBackward>)
Loss: 0.030197737738490105
Optimal set of params:
mid_point: tensor([[0.5389, 0.1400, 0.4208]])
angle: tensor([0.6121], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0098], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2115, 0.1400, 0.6506, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 46147 / 40433
[Open3D DEBUG] #   Got kernel density: 0.301842 (s), 5927.26 (MB) / 5927.26 (MB) / 5963 (MB)
[Open3D DEBUG] #     Got normal field: 0.256578 (s), 5928.92 (MB) / 5928.92 (MB) / 5963 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.753769e-05 / 2.655192e+00
[Open3D DEBUG] #       Finalized tree: 1.41243 (s), 5929.05 (MB) / 5929.05 (MB) / 5963 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.9573 (s), 5929.05 (MB) / 5929.05 (MB) / 5963 (MB)
[Open3D DEBUG] #Set point constraints: 1.08854 (s), 5929.05 (MB) / 5929.05 (MB) / 5963 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 519912 / 468360 / 125825
[Open3D DEBUG] Memory Usage: 5929.047 MB
[Open3D DEBUG] # Linear system solved: 12.7158 (s), 5929.05 (MB) / 5929.05 (MB) / 5963 (MB)
[Open3D DEBUG] Got average: 0.373391 (s), 5929.05 (MB) / 5929.05 (MB) / 5963 (MB)
[Open3D DEBUG] Iso-Value: 5.003814e-01 = 2.309110e+04 / 4.614700e+04
[Open3D DEBUG] #          Total Solve:      64.7 (s),    5932.1 (MB)
TriangleMesh with 71857 points and 143608 triangles.
EMD: tensor([0.0295], dtype=torch.float64)
Chamfer: tensor([0.0385], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0302]); sim_loss: tensor([0.0304], dtype=torch.float64) ===============
torch.Size([3, 11, 14]) torch.Size([3, 40, 12])
Best init pose: tensor([[0.5942, 0.1400, 0.9228, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1400, 0.6888, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1395, 0.1400, 0.5382, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0319]); Best sim loss: tensor([0.0290], dtype=torch.float64)
Wrote profile results to control.py.lprof
