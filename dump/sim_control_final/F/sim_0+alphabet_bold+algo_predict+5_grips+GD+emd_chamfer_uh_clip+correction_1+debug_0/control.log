ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.206941 (s), 4343.27 (MB) / 4343.27 (MB) / 4356 (MB)
[Open3D DEBUG] #     Got normal field: 0.191218 (s), 4351.47 (MB) / 4351.47 (MB) / 4356 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997650e-05 / 9.944899e-01
[Open3D DEBUG] #       Finalized tree: 1.08069 (s), 4353.51 (MB) / 4353.51 (MB) / 4356 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.56863 (s), 4353.51 (MB) / 4353.51 (MB) / 4356 (MB)
[Open3D DEBUG] #Set point constraints: 0.65643 (s), 4353.51 (MB) / 4353.51 (MB) / 4356 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 4353.508 MB
[Open3D DEBUG] # Linear system solved: 8.51874 (s), 4353.51 (MB) / 4353.51 (MB) / 4356 (MB)
[Open3D DEBUG] Got average: 0.260048 (s), 4353.51 (MB) / 4353.51 (MB) / 4356 (MB)
[Open3D DEBUG] Iso-Value: 4.966238e-01 = 2.472342e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:      54.5 (s),    4368.3 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0441, mean: -0.0616, std: 0.0052
Selected top reward seqs: tensor([-0.0543, -0.0542, -0.0542, -0.0542, -0.0541, -0.0540, -0.0540, -0.0535,
        -0.0533, -0.0530, -0.0529, -0.0519, -0.0517, -0.0516, -0.0502, -0.0497,
        -0.0494, -0.0464, -0.0452, -0.0441])
Batch 0/20:
reward seqs after 16 iterations: tensor([-0.0546], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 17 iterations: tensor([-0.0537], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 12 iterations: tensor([-0.0536], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 11 iterations: tensor([-0.0488], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0528], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0531], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 3 iterations: tensor([-0.0559], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0542], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 25 iterations: tensor([-0.0532], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 14 iterations: tensor([-0.0532], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 25 iterations: tensor([-0.0476], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 7 iterations: tensor([-0.0518], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0523], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 12 iterations: tensor([-0.0532], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 12 iterations: tensor([-0.0476], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 25 iterations: tensor([-0.0500], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0497], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 28 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 8 iterations: tensor([-0.0453], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0445], grad_fn=<CatBackward>)
Loss: 0.04453074187040329
Optimal set of params:
mid_point: tensor([[0.4517, 0.1400, 0.4987],
        [0.4632, 0.1400, 0.5478]])
angle: tensor([0.2017, 0.9750], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0097], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0598, 0.1400, 0.5788, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2388, 0.1400, 0.8789, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50387 / 43667
[Open3D DEBUG] #   Got kernel density: 0.332632 (s), 6018.45 (MB) / 6018.45 (MB) / 6048 (MB)
[Open3D DEBUG] #     Got normal field: 0.343487 (s), 6025.77 (MB) / 6025.77 (MB) / 6048 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.027215e-05 / 2.533063e+00
[Open3D DEBUG] #       Finalized tree: 1.32422 (s), 6026.66 (MB) / 6026.66 (MB) / 6048 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.96571 (s), 6026.66 (MB) / 6026.66 (MB) / 6048 (MB)
[Open3D DEBUG] #Set point constraints: 1.01818 (s), 6026.66 (MB) / 6026.66 (MB) / 6048 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 559098 / 536208 / 102761
[Open3D DEBUG] Memory Usage: 6026.656 MB
[Open3D DEBUG] # Linear system solved: 13.0393 (s), 6027.34 (MB) / 6027.34 (MB) / 6048 (MB)
[Open3D DEBUG] Got average: 0.365537 (s), 6027.7 (MB) / 6027.7 (MB) / 6048 (MB)
[Open3D DEBUG] Iso-Value: 5.020171e-01 = 2.529513e+04 / 5.038700e+04
[Open3D DEBUG] #          Total Solve:      68.9 (s),    6039.5 (MB)
TriangleMesh with 83599 points and 167176 triangles.
EMD: tensor([0.0444], dtype=torch.float64)
Chamfer: tensor([0.0454], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0445]); sim_loss: tensor([0.0445], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50742 / 42522
[Open3D DEBUG] #   Got kernel density: 0.293174 (s), 6057.77 (MB) / 6057.77 (MB) / 6097 (MB)
[Open3D DEBUG] #     Got normal field: 0.195118 (s), 6061.92 (MB) / 6061.92 (MB) / 6097 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.482412e-05 / 2.274465e+00
[Open3D DEBUG] #       Finalized tree: 1.41999 (s), 6062.23 (MB) / 6062.23 (MB) / 6097 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.03378 (s), 6062.23 (MB) / 6062.23 (MB) / 6097 (MB)
[Open3D DEBUG] #Set point constraints: 1.21501 (s), 6062.23 (MB) / 6062.23 (MB) / 6097 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 535697 / 529096 / 83129
[Open3D DEBUG] Memory Usage: 6062.227 MB
[Open3D DEBUG] # Linear system solved: 13.89 (s), 6062.3 (MB) / 6062.3 (MB) / 6097 (MB)
[Open3D DEBUG] Got average: 0.334491 (s), 6062.3 (MB) / 6062.3 (MB) / 6097 (MB)
[Open3D DEBUG] Iso-Value: 5.020115e-01 = 2.547307e+04 / 5.074200e+04
[Open3D DEBUG] #          Total Solve:      65.4 (s),    6072.7 (MB)
TriangleMesh with 81641 points and 163246 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0454, mean: -0.0582, std: 0.0047
Selected top reward seqs: tensor([-0.0518, -0.0518, -0.0518, -0.0516, -0.0516, -0.0510, -0.0508, -0.0506,
        -0.0504, -0.0503, -0.0492, -0.0490, -0.0486, -0.0480, -0.0476, -0.0476,
        -0.0470, -0.0468, -0.0458, -0.0454])
Batch 0/20:
reward seqs after 29 iterations: tensor([-0.0481], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 15 iterations: tensor([-0.0501], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 3 iterations: tensor([-0.0488], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 24 iterations: tensor([-0.0515], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0523], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 32 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 9 iterations: tensor([-0.0508], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 5 iterations: tensor([-0.0444], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0518], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 8 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 9 iterations: tensor([-0.0515], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 23 iterations: tensor([-0.0491], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 6 iterations: tensor([-0.0473], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 10 iterations: tensor([-0.0492], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0497], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 7 iterations: tensor([-0.0474], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0459], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0463], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0456], grad_fn=<CatBackward>)
Loss: 0.04438440129160881
Optimal set of params:
mid_point: tensor([[0.4559, 0.1400, 0.4679],
        [0.4657, 0.1400, 0.4410]])
angle: tensor([0.5744, 2.8462], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0000], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1201, 0.1400, 0.6853, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.8484, 0.1400, 0.5575, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 55079 / 28379
[Open3D DEBUG] #   Got kernel density: 0.0940959 (s), 6117.62 (MB) / 6117.62 (MB) / 6147 (MB)
[Open3D DEBUG] #     Got normal field: 0.0703681 (s), 6119.23 (MB) / 6119.23 (MB) / 6147 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.250414e-05 / 6.887153e-01
[Open3D DEBUG] #       Finalized tree: 1.01009 (s), 6119.27 (MB) / 6119.27 (MB) / 6147 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.70122 (s), 6119.27 (MB) / 6119.27 (MB) / 6147 (MB)
[Open3D DEBUG] #Set point constraints: 0.558278 (s), 6119.27 (MB) / 6119.27 (MB) / 6147 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 275878 / 315168 / 121
[Open3D DEBUG] Memory Usage: 6119.273 MB
[Open3D DEBUG] # Linear system solved: 6.88501 (s), 6119.63 (MB) / 6119.63 (MB) / 6147 (MB)
[Open3D DEBUG] Got average: 0.279752 (s), 6119.63 (MB) / 6119.63 (MB) / 6147 (MB)
[Open3D DEBUG] Iso-Value: 5.086296e-01 = 2.801481e+04 / 5.507900e+04
[Open3D DEBUG] #          Total Solve:      46.3 (s),    6122.8 (MB)
TriangleMesh with 39954 points and 79896 triangles.
EMD: tensor([0.0461], dtype=torch.float64)
Chamfer: tensor([0.0460], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0444]); sim_loss: tensor([0.0461], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50925 / 45437
[Open3D DEBUG] #   Got kernel density: 0.208244 (s), 6128.12 (MB) / 6128.12 (MB) / 6160 (MB)
[Open3D DEBUG] #     Got normal field: 0.142875 (s), 6130.77 (MB) / 6130.77 (MB) / 6160 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 6.048190e-05 / 3.080041e+00
[Open3D DEBUG] #       Finalized tree: 1.24652 (s), 6130.89 (MB) / 6130.89 (MB) / 6160 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.17199 (s), 6130.89 (MB) / 6130.89 (MB) / 6160 (MB)
[Open3D DEBUG] #Set point constraints: 1.20969 (s), 6130.89 (MB) / 6130.89 (MB) / 6160 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 600888 / 551648 / 135081
[Open3D DEBUG] Memory Usage: 6130.895 MB
[Open3D DEBUG] # Linear system solved: 10.9733 (s), 6130.89 (MB) / 6130.89 (MB) / 6160 (MB)
[Open3D DEBUG] Got average: 0.338673 (s), 6130.89 (MB) / 6130.89 (MB) / 6160 (MB)
[Open3D DEBUG] Iso-Value: 5.018682e-01 = 2.555764e+04 / 5.092500e+04
[Open3D DEBUG] #          Total Solve:      64.9 (s),    6139.7 (MB)
TriangleMesh with 87292 points and 174488 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0443, mean: -0.0558, std: 0.0047
Selected top reward seqs: tensor([-0.0497, -0.0492, -0.0491, -0.0490, -0.0488, -0.0487, -0.0487, -0.0485,
        -0.0485, -0.0483, -0.0482, -0.0481, -0.0475, -0.0474, -0.0468, -0.0467,
        -0.0463, -0.0453, -0.0443, -0.0443])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0469], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 22 iterations: tensor([-0.0470], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0485], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 6 iterations: tensor([-0.0485], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 11 iterations: tensor([-0.0485], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 4 iterations: tensor([-0.0474], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 21 iterations: tensor([-0.0479], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0488], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 12 iterations: tensor([-0.0451], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0467], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 16 iterations: tensor([-0.0486], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 28 iterations: tensor([-0.0484], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 16 iterations: tensor([-0.0485], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 16 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 12 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 18 iterations: tensor([-0.0460], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 23 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Loss: 0.04412030801177025
Optimal set of params:
mid_point: tensor([[0.4398, 0.1400, 0.5697],
        [0.4327, 0.1400, 0.4537]])
angle: tensor([2.2139, 0.7531], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0096, 0.0102], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.6797, 0.1400, 0.8898, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1409, 0.1400, 0.7273, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51237 / 45809
[Open3D DEBUG] #   Got kernel density: 0.305126 (s), 6500.11 (MB) / 6500.11 (MB) / 6532 (MB)
[Open3D DEBUG] #     Got normal field: 0.207690 (s), 6502.12 (MB) / 6502.12 (MB) / 6532 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.740351e-05 / 2.941184e+00
[Open3D DEBUG] #       Finalized tree: 1.43952 (s), 6502.16 (MB) / 6502.16 (MB) / 6532 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.19847 (s), 6502.16 (MB) / 6502.16 (MB) / 6532 (MB)
[Open3D DEBUG] #Set point constraints: 1.35408 (s), 6502.16 (MB) / 6502.16 (MB) / 6532 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 596170 / 547632 / 133705
[Open3D DEBUG] Memory Usage: 6502.156 MB
[Open3D DEBUG] # Linear system solved: 11.6736 (s), 6502.16 (MB) / 6502.16 (MB) / 6532 (MB)
[Open3D DEBUG] Got average: 0.319311 (s), 6502.16 (MB) / 6502.16 (MB) / 6532 (MB)
[Open3D DEBUG] Iso-Value: 5.020381e-01 = 2.572293e+04 / 5.123700e+04
[Open3D DEBUG] #          Total Solve:      67.2 (s),    6512.2 (MB)
TriangleMesh with 86196 points and 172286 triangles.
EMD: tensor([0.0391], dtype=torch.float64)
Chamfer: tensor([0.0414], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0441]); sim_loss: tensor([0.0393], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49526 / 42192
[Open3D DEBUG] #   Got kernel density: 0.34556 (s), 6518.3 (MB) / 6518.3 (MB) / 6550 (MB)
[Open3D DEBUG] #     Got normal field: 0.230313 (s), 6519.72 (MB) / 6519.72 (MB) / 6550 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.600603e-05 / 2.278494e+00
[Open3D DEBUG] #       Finalized tree: 1.54261 (s), 6520.27 (MB) / 6520.27 (MB) / 6550 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.91448 (s), 6520.27 (MB) / 6520.27 (MB) / 6550 (MB)
[Open3D DEBUG] #Set point constraints: 1.57694 (s), 6520.27 (MB) / 6520.27 (MB) / 6550 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 544223 / 545576 / 76393
[Open3D DEBUG] Memory Usage: 6520.266 MB
[Open3D DEBUG] # Linear system solved: 11.1295 (s), 6520.27 (MB) / 6520.27 (MB) / 6550 (MB)
[Open3D DEBUG] Got average: 0.264864 (s), 6520.27 (MB) / 6520.27 (MB) / 6550 (MB)
[Open3D DEBUG] Iso-Value: 5.022994e-01 = 2.487688e+04 / 4.952600e+04
[Open3D DEBUG] #          Total Solve:      66.4 (s),    6533.7 (MB)
TriangleMesh with 86085 points and 172146 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0393, mean: -0.0545, std: 0.0053
Selected top reward seqs: tensor([-0.0475, -0.0473, -0.0469, -0.0461, -0.0460, -0.0459, -0.0458, -0.0457,
        -0.0455, -0.0454, -0.0454, -0.0453, -0.0452, -0.0449, -0.0445, -0.0444,
        -0.0443, -0.0426, -0.0424, -0.0393])
Batch 0/20:
reward seqs after 12 iterations: tensor([-0.0479], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 14 iterations: tensor([-0.0465], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 2 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 14 iterations: tensor([-0.0463], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 2 iterations: tensor([-0.0448], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 2 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 30 iterations: tensor([-0.0416], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 2 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 2 iterations: tensor([-0.0441], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 28 iterations: tensor([-0.0431], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 22 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 15 iterations: tensor([-0.0446], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 7 iterations: tensor([-0.0429], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 3 iterations: tensor([-0.0436], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0423], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 26 iterations: tensor([-0.0421], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0389], grad_fn=<CatBackward>)
Loss: 0.0388602688908577
Optimal set of params:
mid_point: tensor([[0.5051, 0.1400, 0.5717],
        [0.4203, 0.1400, 0.5495]])
angle: tensor([1.1297, 0.9244], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0105, 0.0096], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3343, 0.1400, 0.9334, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1793, 0.1400, 0.8688, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 49370 / 41800
[Open3D DEBUG] #   Got kernel density: 0.280665 (s), 6575.77 (MB) / 6575.77 (MB) / 6615 (MB)
[Open3D DEBUG] #     Got normal field: 0.182108 (s), 6578.37 (MB) / 6578.37 (MB) / 6615 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.313755e-05 / 2.129701e+00
[Open3D DEBUG] #       Finalized tree: 1.33861 (s), 6578.61 (MB) / 6578.61 (MB) / 6615 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.02472 (s), 6578.61 (MB) / 6578.61 (MB) / 6615 (MB)
[Open3D DEBUG] #Set point constraints: 1.09446 (s), 6578.61 (MB) / 6578.61 (MB) / 6615 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 539498 / 555176 / 61393
[Open3D DEBUG] Memory Usage: 6578.605 MB
[Open3D DEBUG] # Linear system solved: 9.71029 (s), 6578.61 (MB) / 6578.61 (MB) / 6615 (MB)
[Open3D DEBUG] Got average: 0.310153 (s), 6578.61 (MB) / 6578.61 (MB) / 6615 (MB)
[Open3D DEBUG] Iso-Value: 5.028802e-01 = 2.482720e+04 / 4.937000e+04
[Open3D DEBUG] #          Total Solve:      63.4 (s),    6581.0 (MB)
TriangleMesh with 86478 points and 172948 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0416, mean: -0.0548, std: 0.0046
Selected top reward seqs: tensor([-0.0488, -0.0488, -0.0487, -0.0485, -0.0482, -0.0481, -0.0480, -0.0480,
        -0.0479, -0.0479, -0.0474, -0.0467, -0.0463, -0.0460, -0.0460, -0.0455,
        -0.0452, -0.0451, -0.0446, -0.0416])
Batch 0/20:
reward seqs after 17 iterations: tensor([-0.0473], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 6 iterations: tensor([-0.0494], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 10 iterations: tensor([-0.0478], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 27 iterations: tensor([-0.0482], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 10 iterations: tensor([-0.0483], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0471], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0480], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0470], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 26 iterations: tensor([-0.0477], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 17 iterations: tensor([-0.0479], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 4 iterations: tensor([-0.0457], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0462], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0468], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 4 iterations: tensor([-0.0464], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0456], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 9 iterations: tensor([-0.0443], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 17 iterations: tensor([-0.0447], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0428], grad_fn=<CatBackward>)
Loss: 0.04284379631280899
Optimal set of params:
mid_point: tensor([[0.4787, 0.1400, 0.5732]])
angle: tensor([1.1836], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3277, 0.1400, 0.9436, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50066 / 42165
[Open3D DEBUG] #   Got kernel density: 0.217441 (s), 6558.29 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] #     Got normal field: 0.113681 (s), 6561.15 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.258105e-05 / 2.131863e+00
[Open3D DEBUG] #       Finalized tree: 1.40199 (s), 6561.41 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.02049 (s), 6561.41 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] #Set point constraints: 1.0324 (s), 6561.41 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 546519 / 567656 / 56937
[Open3D DEBUG] Memory Usage: 6561.410 MB
[Open3D DEBUG] # Linear system solved: 10.1893 (s), 6561.41 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] Got average: 0.364427 (s), 6561.41 (MB) / 6580.97 (MB) / 6615 (MB)
[Open3D DEBUG] Iso-Value: 5.036044e-01 = 2.521346e+04 / 5.006600e+04
[Open3D DEBUG] #          Total Solve:      63.8 (s),    6581.0 (MB)
TriangleMesh with 88524 points and 177052 triangles.
EMD: tensor([0.0521], dtype=torch.float64)
Chamfer: tensor([0.0525], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0428]); sim_loss: tensor([0.0522], dtype=torch.float64) ===============
torch.Size([4, 11, 14]) torch.Size([4, 40, 12])
Best init pose: tensor([[0.0598, 0.1400, 0.5788, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.1400, 0.6853, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.6797, 0.1400, 0.8898, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.1409, 0.1400, 0.7273, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0441]); Best sim loss: tensor([0.0393], dtype=torch.float64)
Wrote profile results to control.py.lprof
