ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.49119963 0.14       0.92617013 1.         0.         0.
  0.        ]
 [0.90975371 0.14       0.62744569 1.         0.         0.
  0.        ]
 [0.66744627 0.14       0.8448659  1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43670 / 28229
[Open3D DEBUG] #   Got kernel density: 0.190421 (s), 4323.55 (MB) / 4323.55 (MB) / 4345 (MB)
[Open3D DEBUG] #     Got normal field: 0.0912449 (s), 4330.57 (MB) / 4330.57 (MB) / 4345 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 2.048147e-05 / 8.944259e-01
[Open3D DEBUG] #       Finalized tree: 1.07897 (s), 4331.33 (MB) / 4331.33 (MB) / 4345 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.49372 (s), 4331.48 (MB) / 4331.48 (MB) / 4345 (MB)
[Open3D DEBUG] #Set point constraints: 0.597049 (s), 4331.48 (MB) / 4331.48 (MB) / 4345 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 309163 / 351456 / 1873
[Open3D DEBUG] Memory Usage: 4331.477 MB
[Open3D DEBUG] # Linear system solved: 7.9542 (s), 4331.48 (MB) / 4331.48 (MB) / 4345 (MB)
[Open3D DEBUG] Got average: 0.343818 (s), 4331.48 (MB) / 4331.48 (MB) / 4345 (MB)
[Open3D DEBUG] Iso-Value: 5.039396e-01 = 2.200704e+04 / 4.367000e+04
[Open3D DEBUG] #          Total Solve:      51.6 (s),    4341.8 (MB)
TriangleMesh with 45345 points and 90678 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0610, mean: -0.0685, std: 0.0024
Selected top reward seqs: tensor([-0.0651, -0.0651, -0.0650, -0.0650, -0.0650, -0.0648, -0.0648, -0.0646,
        -0.0645, -0.0645, -0.0644, -0.0644, -0.0640, -0.0629, -0.0628, -0.0624,
        -0.0622, -0.0621, -0.0614, -0.0610])
Batch 0/20:
reward seqs after 26 iterations: tensor([-0.0639], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 17 iterations: tensor([-0.0645], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 8 iterations: tensor([-0.0638], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0641], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 23 iterations: tensor([-0.0638], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 25 iterations: tensor([-0.0644], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 18 iterations: tensor([-0.0646], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 9 iterations: tensor([-0.0635], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 4 iterations: tensor([-0.0635], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 2 iterations: tensor([-0.0589], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 20 iterations: tensor([-0.0633], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 9 iterations: tensor([-0.0612], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 20 iterations: tensor([-0.0629], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 13 iterations: tensor([-0.0617], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 11 iterations: tensor([-0.0619], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 19 iterations: tensor([-0.0575], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 4 iterations: tensor([-0.0609], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 6 iterations: tensor([-0.0602], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 4 iterations: tensor([-0.0604], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 14 iterations: tensor([-0.0594], grad_fn=<CatBackward>)
Loss: 0.05751762166619301
Optimal set of params:
mid_point: tensor([[0.5022, 0.1400, 0.4706],
        [0.4213, 0.1400, 0.4353]])
angle: tensor([1.1227, 0.1453], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.3289, 0.1400, 0.8311, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0255, 0.1400, 0.4932, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 43207 / 36920
[Open3D DEBUG] #   Got kernel density: 0.331208 (s), 5630.45 (MB) / 5630.45 (MB) / 5661 (MB)
[Open3D DEBUG] #     Got normal field: 0.252144 (s), 5640.34 (MB) / 5640.34 (MB) / 5661 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.261302e-05 / 2.273251e+00
[Open3D DEBUG] #       Finalized tree: 1.34299 (s), 5640.88 (MB) / 5640.88 (MB) / 5661 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.00747 (s), 5640.88 (MB) / 5640.88 (MB) / 5661 (MB)
[Open3D DEBUG] #Set point constraints: 1.04557 (s), 5640.88 (MB) / 5640.88 (MB) / 5661 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 468455 / 432296 / 103081
[Open3D DEBUG] Memory Usage: 5640.883 MB
[Open3D DEBUG] # Linear system solved: 8.66009 (s), 5640.96 (MB) / 5640.96 (MB) / 5661 (MB)
[Open3D DEBUG] Got average: 0.306848 (s), 5640.96 (MB) / 5640.96 (MB) / 5661 (MB)
[Open3D DEBUG] Iso-Value: 5.035770e-01 = 2.175805e+04 / 4.320700e+04
[Open3D DEBUG] #          Total Solve:      56.4 (s),    5651.0 (MB)
TriangleMesh with 63950 points and 127782 triangles.
EMD: tensor([0.0594], dtype=torch.float64)
Chamfer: tensor([0.0508], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0575]); sim_loss: tensor([0.0585], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43918 / 22818
[Open3D DEBUG] #   Got kernel density: 0.237106 (s), 5641.36 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] #     Got normal field: 0.14537 (s), 5642.93 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.395615e-05 / 6.129262e-01
[Open3D DEBUG] #       Finalized tree: 0.765298 (s), 5642.93 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.60394 (s), 5642.93 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] #Set point constraints: 0.458997 (s), 5642.93 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 240241 / 274312 / 249
[Open3D DEBUG] Memory Usage: 5642.934 MB
[Open3D DEBUG] # Linear system solved: 7.08145 (s), 5643.02 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] Got average: 0.200116 (s), 5643.02 (MB) / 5650.98 (MB) / 5673 (MB)
[Open3D DEBUG] Iso-Value: 5.112992e-01 = 2.245524e+04 / 4.391800e+04
[Open3D DEBUG] #          Total Solve:      48.8 (s),    5651.0 (MB)
TriangleMesh with 31529 points and 63046 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0603, mean: -0.0682, std: 0.0028
Selected top reward seqs: tensor([-0.0634, -0.0634, -0.0632, -0.0632, -0.0631, -0.0629, -0.0627, -0.0626,
        -0.0625, -0.0624, -0.0623, -0.0623, -0.0623, -0.0622, -0.0620, -0.0618,
        -0.0614, -0.0613, -0.0609, -0.0603])
Batch 0/20:
reward seqs after 5 iterations: tensor([-0.0611], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 9 iterations: tensor([-0.0630], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0616], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 15 iterations: tensor([-0.0612], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 27 iterations: tensor([-0.0621], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 23 iterations: tensor([-0.0600], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0620], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 14 iterations: tensor([-0.0601], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0616], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 21 iterations: tensor([-0.0620], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 11 iterations: tensor([-0.0585], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0603], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 11 iterations: tensor([-0.0609], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0594], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 13 iterations: tensor([-0.0611], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 3 iterations: tensor([-0.0595], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 4 iterations: tensor([-0.0588], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 11 iterations: tensor([-0.0593], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0590], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 12 iterations: tensor([-0.0597], grad_fn=<CatBackward>)
Loss: 0.0584576390683651
Optimal set of params:
mid_point: tensor([[0.4624, 0.1400, 0.4765],
        [0.4264, 0.1400, 0.4492]])
angle: tensor([1.4505, 0.3610], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.4144, 0.1400, 0.8736, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.1400, 0.5905, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 42862 / 37175
[Open3D DEBUG] #   Got kernel density: 0.182341 (s), 5709.45 (MB) / 5709.45 (MB) / 5742 (MB)
[Open3D DEBUG] #     Got normal field: 0.103807 (s), 5712.35 (MB) / 5712.35 (MB) / 5742 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.575064e-05 / 2.389584e+00
[Open3D DEBUG] #       Finalized tree: 1.2649 (s), 5712.81 (MB) / 5712.81 (MB) / 5742 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.96975 (s), 5712.81 (MB) / 5712.81 (MB) / 5742 (MB)
[Open3D DEBUG] #Set point constraints: 1.17165 (s), 5712.81 (MB) / 5712.81 (MB) / 5742 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 479298 / 440832 / 106937
[Open3D DEBUG] Memory Usage: 5712.812 MB
[Open3D DEBUG] # Linear system solved: 11.518 (s), 5713.12 (MB) / 5713.12 (MB) / 5742 (MB)
[Open3D DEBUG] Got average: 0.3394 (s), 5713.21 (MB) / 5713.21 (MB) / 5742 (MB)
[Open3D DEBUG] Iso-Value: 5.053774e-01 = 2.166149e+04 / 4.286200e+04
[Open3D DEBUG] #          Total Solve:      60.1 (s),    5722.5 (MB)
TriangleMesh with 66072 points and 132028 triangles.
EMD: tensor([0.0511], dtype=torch.float64)
Chamfer: tensor([0.0455], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0585]); sim_loss: tensor([0.0505], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 43693 / 20468
[Open3D DEBUG] #   Got kernel density: 0.12356 (s), 5715.88 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] #     Got normal field: 0.0470920 (s), 5715.91 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.135368e-05 / 4.960763e-01
[Open3D DEBUG] #       Finalized tree: 0.779315 (s), 5716.02 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.50496 (s), 5716.02 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] #Set point constraints: 0.410532 (s), 5716.02 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 203988 / 233024 / 105
[Open3D DEBUG] Memory Usage: 5716.016 MB
[Open3D DEBUG] # Linear system solved: 5.8483 (s), 5716.39 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] Got average: 0.216236 (s), 5716.39 (MB) / 5722.47 (MB) / 5790 (MB)
[Open3D DEBUG] Iso-Value: 5.086831e-01 = 2.222589e+04 / 4.369300e+04
[Open3D DEBUG] #          Total Solve:      45.6 (s),    5722.5 (MB)
TriangleMesh with 26755 points and 53498 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0605, mean: -0.0683, std: 0.0026
Selected top reward seqs: tensor([-0.0646, -0.0645, -0.0645, -0.0645, -0.0641, -0.0639, -0.0637, -0.0635,
        -0.0633, -0.0633, -0.0632, -0.0632, -0.0632, -0.0631, -0.0630, -0.0627,
        -0.0625, -0.0624, -0.0618, -0.0605])
Batch 0/20:
reward seqs after 3 iterations: tensor([-0.0632], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0643], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 15 iterations: tensor([-0.0639], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0647], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 12 iterations: tensor([-0.0623], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 10 iterations: tensor([-0.0619], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 13 iterations: tensor([-0.0631], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 4 iterations: tensor([-0.0625], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 9 iterations: tensor([-0.0626], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 9 iterations: tensor([-0.0622], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 10 iterations: tensor([-0.0601], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 26 iterations: tensor([-0.0629], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 27 iterations: tensor([-0.0615], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 18 iterations: tensor([-0.0626], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 23 iterations: tensor([-0.0614], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 6 iterations: tensor([-0.0618], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 10 iterations: tensor([-0.0614], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 14 iterations: tensor([-0.0607], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 11 iterations: tensor([-0.0600], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 5 iterations: tensor([-0.0581], grad_fn=<CatBackward>)
Loss: 0.05805070698261261
Optimal set of params:
mid_point: tensor([[0.4255, 0.1400, 0.4455],
        [0.4305, 0.1400, 0.4731]])
angle: tensor([0.1363, 0.3962], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0292, 0.1400, 0.4998, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0615, 0.1400, 0.6274, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 42863 / 37644
[Open3D DEBUG] #   Got kernel density: 0.315213 (s), 5766.82 (MB) / 5766.82 (MB) / 5799 (MB)
[Open3D DEBUG] #     Got normal field: 0.4462 (s), 5767.79 (MB) / 5767.79 (MB) / 5799 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.959526e-05 / 2.554432e+00
[Open3D DEBUG] #       Finalized tree: 1.35738 (s), 5768.29 (MB) / 5768.29 (MB) / 5799 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.69463 (s), 5768.44 (MB) / 5768.44 (MB) / 5799 (MB)
[Open3D DEBUG] #Set point constraints: 0.939121 (s), 5768.44 (MB) / 5768.44 (MB) / 5799 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 491744 / 447880 / 114113
[Open3D DEBUG] Memory Usage: 5768.441 MB
[Open3D DEBUG] # Linear system solved: 10.6898 (s), 5768.44 (MB) / 5768.44 (MB) / 5799 (MB)
[Open3D DEBUG] Got average: 0.318321 (s), 5768.44 (MB) / 5768.44 (MB) / 5799 (MB)
[Open3D DEBUG] Iso-Value: 5.002339e-01 = 2.144152e+04 / 4.286300e+04
[Open3D DEBUG] #          Total Solve:      60.0 (s),    5780.0 (MB)
TriangleMesh with 68113 points and 136098 triangles.
EMD: tensor([0.0548], dtype=torch.float64)
Chamfer: tensor([0.0499], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0581]); sim_loss: tensor([0.0543], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 45071 / 20916
[Open3D DEBUG] #   Got kernel density: 0.120113 (s), 5772.68 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] #     Got normal field: 0.08814 (s), 5772.89 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.112755e-05 / 5.015299e-01
[Open3D DEBUG] #       Finalized tree: 0.739282 (s), 5772.92 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] #  Set FEM constraints: 1.55127 (s), 5772.92 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] #Set point constraints: 0.381824 (s), 5772.92 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 210386 / 240408 / 33
[Open3D DEBUG] Memory Usage: 5772.918 MB
[Open3D DEBUG] # Linear system solved: 5.4767 (s), 5772.94 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] Got average: 0.227011 (s), 5772.94 (MB) / 5779.95 (MB) / 5937 (MB)
[Open3D DEBUG] Iso-Value: 5.126162e-01 = 2.310412e+04 / 4.507100e+04
[Open3D DEBUG] #          Total Solve:      40.2 (s),    5780.0 (MB)
TriangleMesh with 26988 points and 53964 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0605, mean: -0.0684, std: 0.0029
Selected top reward seqs: tensor([-0.0641, -0.0640, -0.0639, -0.0639, -0.0638, -0.0638, -0.0637, -0.0636,
        -0.0636, -0.0635, -0.0634, -0.0633, -0.0632, -0.0632, -0.0628, -0.0627,
        -0.0626, -0.0623, -0.0617, -0.0605])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0629], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0624], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0618], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 13 iterations: tensor([-0.0628], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 19 iterations: tensor([-0.0623], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 3 iterations: tensor([-0.0632], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 21 iterations: tensor([-0.0628], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 8 iterations: tensor([-0.0626], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0625], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 12 iterations: tensor([-0.0619], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0624], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 14 iterations: tensor([-0.0623], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 9 iterations: tensor([-0.0609], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0621], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 18 iterations: tensor([-0.0617], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 10 iterations: tensor([-0.0611], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 8 iterations: tensor([-0.0612], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 4 iterations: tensor([-0.0603], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0605], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 7 iterations: tensor([-0.0590], grad_fn=<CatBackward>)
Loss: 0.0589648075401783
Optimal set of params:
mid_point: tensor([[0.4500, 0.1400, 0.4986],
        [0.4258, 0.1400, 0.4787]])
angle: tensor([0.5851, 0.4284], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113, 0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1165, 0.1400, 0.7195, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0620, 0.1400, 0.6449, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 42899 / 38599
[Open3D DEBUG] #   Got kernel density: 0.320264 (s), 5874.07 (MB) / 5874.07 (MB) / 5937 (MB)
[Open3D DEBUG] #     Got normal field: 0.252235 (s), 5875.44 (MB) / 5875.44 (MB) / 5937 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 7.213260e-05 / 3.094416e+00
[Open3D DEBUG] #       Finalized tree: 1.42058 (s), 5875.74 (MB) / 5875.74 (MB) / 5937 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.16632 (s), 5875.74 (MB) / 5875.74 (MB) / 5937 (MB)
[Open3D DEBUG] #Set point constraints: 0.871563 (s), 5875.74 (MB) / 5875.74 (MB) / 5937 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 551020 / 499200 / 130537
[Open3D DEBUG] Memory Usage: 5875.738 MB
[Open3D DEBUG] # Linear system solved: 11.8486 (s), 5875.74 (MB) / 5875.74 (MB) / 5937 (MB)
[Open3D DEBUG] Got average: 0.324951 (s), 5875.74 (MB) / 5875.74 (MB) / 5937 (MB)
[Open3D DEBUG] Iso-Value: 4.994251e-01 = 2.142484e+04 / 4.289900e+04
[Open3D DEBUG] #          Total Solve:      62.7 (s),    5882.5 (MB)
TriangleMesh with 79179 points and 158100 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0621, mean: -0.0670, std: 0.0022
Selected top reward seqs: tensor([-0.0635, -0.0635, -0.0634, -0.0634, -0.0633, -0.0633, -0.0633, -0.0632,
        -0.0631, -0.0628, -0.0628, -0.0627, -0.0627, -0.0626, -0.0626, -0.0626,
        -0.0626, -0.0624, -0.0622, -0.0621])
Batch 0/20:
reward seqs after 10 iterations: tensor([-0.0633], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 11 iterations: tensor([-0.0622], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 2 iterations: tensor([-0.0626], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 4 iterations: tensor([-0.0633], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 19 iterations: tensor([-0.0625], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0601], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 8 iterations: tensor([-0.0622], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0625], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 2 iterations: tensor([-0.0626], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 13 iterations: tensor([-0.0616], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 16 iterations: tensor([-0.0617], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 13 iterations: tensor([-0.0620], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 3 iterations: tensor([-0.0618], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 9 iterations: tensor([-0.0621], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 18 iterations: tensor([-0.0618], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 9 iterations: tensor([-0.0619], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 9 iterations: tensor([-0.0614], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 7 iterations: tensor([-0.0620], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0610], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 4 iterations: tensor([-0.0595], grad_fn=<CatBackward>)
Loss: 0.05945369228720665
Optimal set of params:
mid_point: tensor([[0.4221, 0.1400, 0.4640]])
angle: tensor([0.3889], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0113], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.0520, 0.1400, 0.6157, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 44400 / 39027
[Open3D DEBUG] #   Got kernel density: 0.296975 (s), 5903.33 (MB) / 5903.33 (MB) / 5937 (MB)
[Open3D DEBUG] #     Got normal field: 0.191534 (s), 5904.02 (MB) / 5904.02 (MB) / 5937 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.669462e-05 / 2.517241e+00
[Open3D DEBUG] #       Finalized tree: 1.3427 (s), 5904.15 (MB) / 5904.15 (MB) / 5937 (MB)
[Open3D DEBUG] #  Set FEM constraints: 2.072 (s), 5904.15 (MB) / 5904.15 (MB) / 5937 (MB)
[Open3D DEBUG] #Set point constraints: 1.24571 (s), 5904.15 (MB) / 5904.15 (MB) / 5937 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 512163 / 472144 / 113185
[Open3D DEBUG] Memory Usage: 5904.148 MB
[Open3D DEBUG] # Linear system solved: 11.5333 (s), 5904.15 (MB) / 5904.15 (MB) / 5937 (MB)
[Open3D DEBUG] Got average: 0.292445 (s), 5904.15 (MB) / 5904.15 (MB) / 5937 (MB)
[Open3D DEBUG] Iso-Value: 5.020814e-01 = 2.229241e+04 / 4.440000e+04
[Open3D DEBUG] #          Total Solve:      62.8 (s),    5908.8 (MB)
TriangleMesh with 71890 points and 143650 triangles.
EMD: tensor([0.0559], dtype=torch.float64)
Chamfer: tensor([0.0470], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0595]); sim_loss: tensor([0.0550], dtype=torch.float64) ===============
torch.Size([3, 11, 14]) torch.Size([3, 40, 12])
Best init pose: tensor([[0.3289, 0.1400, 0.8311, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.4144, 0.1400, 0.8736, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.1400, 0.5905, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0585]); Best sim loss: tensor([0.0505], dtype=torch.float64)
Wrote profile results to control.py.lprof
