ENV:
  loss:
    soft_contact: False
    target_path: envs/assets/Chopsticks3D-v1.npy
    weight:
      contact: 1
      density: 10
      sdf: 10
  n_observed_particles: 200
PRIMITIVES: [{'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.35, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.2, 'r': 0.045, 'init_pos': '(0.65, 0.4, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.8, 0.8, 0.8)', 'friction': 1.0, 'action': {'dim': 6, 'scale': '(0.02, 0.02, 0.02, 0.04, 0.04, 0.04)'}}, {'shape': 'Capsule', 'h': 0.13, 'r': 0.025, 'init_pos': '(0.5, 0.1, 0.5)', 'init_rot': '(1., 0., 0., 0.)', 'color': '(0.2, 0.2, 0.2)', 'friction': 15.0}]
RENDERER:
  bake_size: 6
  camera_pos: (0.5, 1.2, 4.0)
  camera_pos_1: (0.5, 2.5, 2.2)
  camera_pos_2: (0.5, 2.5, 2.2)
  camera_pos_3: (0.5, 2.5, 2.2)
  camera_pos_4: (0.5, 2.5, 2.2)
  camera_rot: (0.2, 0)
  camera_rot_1: (0.8, 0.0)
  camera_rot_2: (0.8, 0.0)
  camera_rot_3: (0.8, 0.0)
  camera_rot_4: (0.8, 0.0)
  dx: 0.006666666666666667
  image_res: (512, 512)
  light_direction: (2.0, 1.0, 0.7)
  max_num_particles: 1000000
  max_ray_depth: 2
  sdf_threshold: 0.20720000000000002
  spp: 50
  target_res: (64, 64, 64)
  use_directional_light: False
  use_roulette: False
  voxel_res: (168, 168, 168)
SHAPES: [{'shape': 'box', 'width': '(0.25, 0.2, 0.25)', 'init_pos': '(0.5, 0.1, 0.5)', 'n_particles': 20000, 'color': '((150<<8)+ (150<<16))'}]
SIMULATOR:
  E: 5000.0
  dim: 3
  dtype: float64
  gravity: (0, -5, 0)
  ground_friction: 100.0
  max_steps: 1024
  n_particles: 9000
  nu: 0.2
  quality: 1
  yield_stress: 4000.0
VARIANTS: [{'ENV': {'loss': {'target_path': 'envs/assets/gripper-v1.npy'}}}]
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.35, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 6
  scale: (0.02, 0.02, 0.02, 0.04, 0.04, 0.04)
color: (0.8, 0.8, 0.8)
friction: 1.0
h: 0.2
init_pos: (0.65, 0.4, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.045
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
Building primitive
action:
  dim: 0
  scale: ()
color: (0.2, 0.2, 0.2)
friction: 15.0
h: 0.13
init_pos: (0.5, 0.1, 0.5)
init_rot: (1.0, 0.0, 0.0, 0.0)
lower_bound: (0.0, 0.0, 0.0)
r: 0.025
shape: Capsule
upper_bound: (1.0, 1.0, 1.0)
variations: None
{'width': (0.25, 0.2, 0.25), 'init_pos': (0.5, 0.1, 0.5), 'n_particles': 20000, 'color': 9868800}
Initialize Renderer
bake_size: 6  
camera_pos: (0.5, 1.2, 4.0)  
camera_pos_1: (0.5, 2.5, 2.2)  
camera_pos_2: (0.5, 2.5, 2.2)  
camera_pos_3: (0.5, 2.5, 2.2)  
camera_pos_4: (0.5, 2.5, 2.2)  
camera_rot: (0.2, 0)  
camera_rot_1: (0.8, 0.0)  
camera_rot_2: (0.8, 0.0)  
camera_rot_3: (0.8, 0.0)  
camera_rot_4: (0.8, 0.0)  
dx: 0.006666666666666667  
image_res: (512, 512)  
light_direction: (2.0, 1.0, 0.7)  
max_num_particles: 1000000  
max_ray_depth: 2  
sdf_threshold: 0.20720000000000002  
spp: 50  
target_res: (64, 64, 64)  
use_directional_light: False  
use_roulette: False  
voxel_res: (168, 168, 168)
[Taichi] materializing...
model_kp #params: 443560
GT shape: init pose: (1, 3, 11, 14); actions: (1, 3, 40, 12)
GT init pose: [[0.76359501 0.14       0.70473839 1.         0.         0.
  0.        ]
 [0.13751299 0.14       0.56262855 1.         0.         0.
  0.        ]
 [0.20403418 0.14       0.74794012 1.         0.         0.
  0.        ]]
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 49783 / 31818
[Open3D DEBUG] #   Got kernel density: 0.01125 (s), 5156.66 (MB) / 5156.66 (MB) / 5198 (MB)
[Open3D DEBUG] #     Got normal field: 0.084662 (s), 5160.78 (MB) / 5160.78 (MB) / 5198 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.997652e-05 / 9.944912e-01
[Open3D DEBUG] #       Finalized tree: 0.0804050 (s), 5164.59 (MB) / 5164.59 (MB) / 5198 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.377274 (s), 5164.59 (MB) / 5164.59 (MB) / 5198 (MB)
[Open3D DEBUG] #Set point constraints: 0.0352979 (s), 5164.59 (MB) / 5164.59 (MB) / 5198 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 336414 / 382016 / 2457
[Open3D DEBUG] Memory Usage: 5164.590 MB
[Open3D DEBUG] # Linear system solved: 4.22894 (s), 5164.59 (MB) / 5164.59 (MB) / 5198 (MB)
[Open3D DEBUG] Got average: 0.0172689 (s), 5164.59 (MB) / 5164.59 (MB) / 5198 (MB)
[Open3D DEBUG] Iso-Value: 4.966239e-01 = 2.472343e+04 / 4.978300e+04
[Open3D DEBUG] #          Total Solve:       7.5 (s),    5178.7 (MB)
TriangleMesh with 51100 points and 102188 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0589, mean: -0.0790, std: 0.0065
Selected top reward seqs: tensor([-0.0698, -0.0697, -0.0695, -0.0694, -0.0694, -0.0687, -0.0686, -0.0681,
        -0.0679, -0.0679, -0.0677, -0.0674, -0.0669, -0.0646, -0.0646, -0.0645,
        -0.0643, -0.0630, -0.0595, -0.0589])
Batch 0/20:
reward seqs after 4 iterations: tensor([-0.0621], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 18 iterations: tensor([-0.0629], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 49 iterations: tensor([-0.0624], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 12 iterations: tensor([-0.0685], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 9 iterations: tensor([-0.0652], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 7 iterations: tensor([-0.0656], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 6 iterations: tensor([-0.0640], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0668], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 10 iterations: tensor([-0.0607], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0687], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 8 iterations: tensor([-0.0671], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 8 iterations: tensor([-0.0640], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 17 iterations: tensor([-0.0637], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0630], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 9 iterations: tensor([-0.0634], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 17 iterations: tensor([-0.0637], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 5 iterations: tensor([-0.0629], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 12 iterations: tensor([-0.0598], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 9 iterations: tensor([-0.0560], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 9 iterations: tensor([-0.0601], grad_fn=<CatBackward>)
Loss: 0.055954378098249435
Optimal set of params:
mid_point: tensor([[0.5315, 0.1400, 0.4681],
        [0.5744, 0.1400, 0.4953]])
angle: tensor([0.4390, 0.5376], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1695, 0.1400, 0.6381, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2308, 0.1400, 0.7001, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 51024 / 44800
[Open3D DEBUG] #   Got kernel density: 0.0306969 (s), 6315.71 (MB) / 6315.71 (MB) / 6346 (MB)
[Open3D DEBUG] #     Got normal field: 0.132343 (s), 6318.28 (MB) / 6318.28 (MB) / 6346 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.545714e-05 / 2.829645e+00
[Open3D DEBUG] #       Finalized tree: 0.131426 (s), 6318.72 (MB) / 6318.72 (MB) / 6346 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.534841 (s), 6318.73 (MB) / 6318.73 (MB) / 6346 (MB)
[Open3D DEBUG] #Set point constraints: 0.0611432 (s), 6318.73 (MB) / 6318.73 (MB) / 6346 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 585656 / 545488 / 123833
[Open3D DEBUG] Memory Usage: 6318.730 MB
[Open3D DEBUG] # Linear system solved: 5.12785 (s), 6319.09 (MB) / 6319.09 (MB) / 6346 (MB)
[Open3D DEBUG] Got average: 0.028641 (s), 6319.09 (MB) / 6319.09 (MB) / 6346 (MB)
[Open3D DEBUG] Iso-Value: 5.017068e-01 = 2.559909e+04 / 5.102400e+04
[Open3D DEBUG] #          Total Solve:       9.2 (s),    6333.9 (MB)
TriangleMesh with 85505 points and 170936 triangles.
EMD: tensor([0.0456], dtype=torch.float64)
Chamfer: tensor([0.0497], dtype=torch.float64)
=============== Iteration 0 -> model_loss: tensor([0.0560]); sim_loss: tensor([0.0460], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 50353 / 43428
[Open3D DEBUG] #   Got kernel density: 0.0265479 (s), 6348.44 (MB) / 6348.44 (MB) / 6380 (MB)
[Open3D DEBUG] #     Got normal field: 0.119807 (s), 6349.93 (MB) / 6349.93 (MB) / 6380 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.264074e-05 / 2.650619e+00
[Open3D DEBUG] #       Finalized tree: 0.122503 (s), 6349.93 (MB) / 6349.93 (MB) / 6380 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.465149 (s), 6349.93 (MB) / 6349.93 (MB) / 6380 (MB)
[Open3D DEBUG] #Set point constraints: 0.053673 (s), 6349.93 (MB) / 6349.93 (MB) / 6380 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 540534 / 499496 / 118257
[Open3D DEBUG] Memory Usage: 6349.934 MB
[Open3D DEBUG] # Linear system solved: 4.49772 (s), 6350.33 (MB) / 6350.33 (MB) / 6380 (MB)
[Open3D DEBUG] Got average: 0.0266991 (s), 6350.33 (MB) / 6350.33 (MB) / 6380 (MB)
[Open3D DEBUG] Iso-Value: 5.024819e-01 = 2.530147e+04 / 5.035300e+04
[Open3D DEBUG] #          Total Solve:       8.2 (s),    6361.0 (MB)
TriangleMesh with 77903 points and 155728 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0557, mean: -0.0756, std: 0.0065
Selected top reward seqs: tensor([-0.0669, -0.0668, -0.0666, -0.0665, -0.0661, -0.0658, -0.0656, -0.0653,
        -0.0647, -0.0645, -0.0637, -0.0626, -0.0625, -0.0625, -0.0625, -0.0609,
        -0.0602, -0.0586, -0.0560, -0.0557])
Batch 0/20:
reward seqs after 8 iterations: tensor([-0.0645], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 2 iterations: tensor([-0.0608], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 9 iterations: tensor([-0.0636], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 28 iterations: tensor([-0.0657], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 8 iterations: tensor([-0.0630], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 19 iterations: tensor([-0.0644], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 33 iterations: tensor([-0.0640], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 11 iterations: tensor([-0.0641], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 6 iterations: tensor([-0.0636], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 4 iterations: tensor([-0.0608], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 6 iterations: tensor([-0.0619], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 6 iterations: tensor([-0.0598], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 25 iterations: tensor([-0.0595], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 28 iterations: tensor([-0.0573], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 30 iterations: tensor([-0.0589], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 17 iterations: tensor([-0.0579], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 4 iterations: tensor([-0.0528], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 28 iterations: tensor([-0.0555], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 12 iterations: tensor([-0.0553], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 21 iterations: tensor([-0.0472], grad_fn=<CatBackward>)
Loss: 0.04719686508178711
Optimal set of params:
mid_point: tensor([[0.5726, 0.1400, 0.4197],
        [0.5723, 0.1400, 0.5104]])
angle: tensor([1.3982, 0.4984], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0108, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.5039, 0.1400, 0.8137, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2210, 0.1400, 0.7016, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50050 / 42806
[Open3D DEBUG] #   Got kernel density: 0.0253761 (s), 6592.79 (MB) / 6592.79 (MB) / 6624 (MB)
[Open3D DEBUG] #     Got normal field: 0.130298 (s), 6594.34 (MB) / 6594.34 (MB) / 6624 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.588172e-05 / 2.296380e+00
[Open3D DEBUG] #       Finalized tree: 0.141173 (s), 6594.5 (MB) / 6594.5 (MB) / 6624 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.532218 (s), 6594.5 (MB) / 6594.5 (MB) / 6624 (MB)
[Open3D DEBUG] #Set point constraints: 0.0600619 (s), 6594.5 (MB) / 6594.5 (MB) / 6624 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 558804 / 564048 / 74585
[Open3D DEBUG] Memory Usage: 6594.496 MB
[Open3D DEBUG] # Linear system solved: 4.46726 (s), 6594.62 (MB) / 6594.62 (MB) / 6624 (MB)
[Open3D DEBUG] Got average: 0.0271499 (s), 6594.62 (MB) / 6594.62 (MB) / 6624 (MB)
[Open3D DEBUG] Iso-Value: 5.021787e-01 = 2.513404e+04 / 5.005000e+04
[Open3D DEBUG] #          Total Solve:       8.3 (s),    6605.2 (MB)
TriangleMesh with 88484 points and 176980 triangles.
EMD: tensor([0.0599], dtype=torch.float64)
Chamfer: tensor([0.0484], dtype=torch.float64)
=============== Iteration 1 -> model_loss: tensor([0.0472]); sim_loss: tensor([0.0588], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 51749 / 43995
[Open3D DEBUG] #   Got kernel density: 0.025543 (s), 6616.43 (MB) / 6616.43 (MB) / 6648 (MB)
[Open3D DEBUG] #     Got normal field: 0.131577 (s), 6616.43 (MB) / 6616.43 (MB) / 6648 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.642598e-05 / 2.402498e+00
[Open3D DEBUG] #       Finalized tree: 0.126339 (s), 6616.94 (MB) / 6616.94 (MB) / 6648 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.490362 (s), 6616.94 (MB) / 6616.94 (MB) / 6648 (MB)
[Open3D DEBUG] #Set point constraints: 0.0590210 (s), 6616.94 (MB) / 6616.94 (MB) / 6648 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 572069 / 571192 / 82601
[Open3D DEBUG] Memory Usage: 6616.941 MB
[Open3D DEBUG] # Linear system solved: 5.11282 (s), 6616.97 (MB) / 6616.97 (MB) / 6648 (MB)
[Open3D DEBUG] Got average: 0.0266252 (s), 6616.97 (MB) / 6616.97 (MB) / 6648 (MB)
[Open3D DEBUG] Iso-Value: 5.007910e-01 = 2.591543e+04 / 5.174900e+04
[Open3D DEBUG] #          Total Solve:       9.1 (s),    6627.4 (MB)
TriangleMesh with 89795 points and 179578 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0579, mean: -0.0782, std: 0.0074
Selected top reward seqs: tensor([-0.0668, -0.0666, -0.0665, -0.0665, -0.0661, -0.0658, -0.0657, -0.0656,
        -0.0655, -0.0655, -0.0648, -0.0647, -0.0647, -0.0646, -0.0636, -0.0632,
        -0.0627, -0.0615, -0.0611, -0.0579])
Batch 0/20:
reward seqs after 27 iterations: tensor([-0.0649], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 10 iterations: tensor([-0.0627], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 13 iterations: tensor([-0.0592], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 10 iterations: tensor([-0.0675], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 18 iterations: tensor([-0.0658], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0682], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 19 iterations: tensor([-0.0639], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 36 iterations: tensor([-0.0638], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 8 iterations: tensor([-0.0655], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 5 iterations: tensor([-0.0633], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 14 iterations: tensor([-0.0590], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 24 iterations: tensor([-0.0644], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0588], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 14 iterations: tensor([-0.0518], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 14 iterations: tensor([-0.0606], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 20 iterations: tensor([-0.0617], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 12 iterations: tensor([-0.0648], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 20 iterations: tensor([-0.0609], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 17 iterations: tensor([-0.0525], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 10 iterations: tensor([-0.0588], grad_fn=<CatBackward>)
Loss: 0.05176866799592972
Optimal set of params:
mid_point: tensor([[0.5749, 0.1400, 0.5005],
        [0.5523, 0.1400, 0.5156]])
angle: tensor([2.2596, 0.5514], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0000, 0.0108], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.8292, 0.1400, 0.8093, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2116, 0.1400, 0.7252, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50752 / 44247
[Open3D DEBUG] #   Got kernel density: 0.0291719 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] #     Got normal field: 0.128137 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.065479e-05 / 2.570832e+00
[Open3D DEBUG] #       Finalized tree: 0.134094 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.504351 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] #Set point constraints: 0.0614071 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 576619 / 558064 / 100929
[Open3D DEBUG] Memory Usage: 6633.219 MB
[Open3D DEBUG] # Linear system solved: 4.56076 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] Got average: 0.026618 (s), 6633.22 (MB) / 6633.22 (MB) / 6665 (MB)
[Open3D DEBUG] Iso-Value: 5.024045e-01 = 2.549803e+04 / 5.075200e+04
[Open3D DEBUG] #          Total Solve:       8.4 (s),    6643.4 (MB)
TriangleMesh with 88031 points and 176054 triangles.
EMD: tensor([0.0549], dtype=torch.float64)
Chamfer: tensor([0.0551], dtype=torch.float64)
=============== Iteration 2 -> model_loss: tensor([0.0518]); sim_loss: tensor([0.0549], dtype=torch.float64) ===============
=============== 1/2 ===============
[Open3D DEBUG] Input Points / Samples: 54841 / 35074
[Open3D DEBUG] #   Got kernel density: 0.0126629 (s), 6654.46 (MB) / 6654.46 (MB) / 6686 (MB)
[Open3D DEBUG] #     Got normal field: 0.0925262 (s), 6654.91 (MB) / 6654.91 (MB) / 6686 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 1.896236e-05 / 1.039915e+00
[Open3D DEBUG] #       Finalized tree: 0.0900521 (s), 6654.91 (MB) / 6654.91 (MB) / 6686 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.387635 (s), 6654.91 (MB) / 6654.91 (MB) / 6686 (MB)
[Open3D DEBUG] #Set point constraints: 0.042624 (s), 6654.91 (MB) / 6654.91 (MB) / 6686 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 369734 / 419992 / 2561
[Open3D DEBUG] Memory Usage: 6654.910 MB
[Open3D DEBUG] # Linear system solved: 4.37303 (s), 6654.91 (MB) / 6654.91 (MB) / 6686 (MB)
[Open3D DEBUG] Got average: 0.0189531 (s), 6654.91 (MB) / 6654.91 (MB) / 6686 (MB)
[Open3D DEBUG] Iso-Value: 5.051401e-01 = 2.770239e+04 / 5.484100e+04
[Open3D DEBUG] #          Total Solve:       7.9 (s),    6656.5 (MB)
TriangleMesh with 59464 points and 118916 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0529, mean: -0.0794, std: 0.0075
Selected top reward seqs: tensor([-0.0702, -0.0693, -0.0686, -0.0680, -0.0677, -0.0676, -0.0674, -0.0668,
        -0.0664, -0.0661, -0.0651, -0.0647, -0.0645, -0.0630, -0.0601, -0.0600,
        -0.0593, -0.0562, -0.0560, -0.0529])
Batch 0/20:
reward seqs after 7 iterations: tensor([-0.0666], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 7 iterations: tensor([-0.0680], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 11 iterations: tensor([-0.0670], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 7 iterations: tensor([-0.0675], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0661], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 11 iterations: tensor([-0.0632], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 11 iterations: tensor([-0.0653], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 27 iterations: tensor([-0.0649], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 14 iterations: tensor([-0.0633], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 19 iterations: tensor([-0.0646], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 15 iterations: tensor([-0.0651], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 12 iterations: tensor([-0.0642], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 12 iterations: tensor([-0.0610], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 11 iterations: tensor([-0.0636], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0586], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 8 iterations: tensor([-0.0582], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 11 iterations: tensor([-0.0532], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 21 iterations: tensor([-0.0527], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 10 iterations: tensor([-0.0563], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 16 iterations: tensor([-0.0512], grad_fn=<CatBackward>)
Loss: 0.05116743594408035
Optimal set of params:
mid_point: tensor([[0.4837, 0.1400, 0.4595],
        [0.5676, 0.1400, 0.5255]])
angle: tensor([0.8965, 0.6067], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0101, 0.0103], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.2339, 0.1400, 0.7719, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2390, 0.1400, 0.7535, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
=============== 2/2 ===============
[Open3D DEBUG] Input Points / Samples: 52333 / 46124
[Open3D DEBUG] #   Got kernel density: 0.029119 (s), 6755.03 (MB) / 6755.03 (MB) / 6787 (MB)
[Open3D DEBUG] #     Got normal field: 0.133385 (s), 6755.07 (MB) / 6755.07 (MB) / 6787 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 5.397305e-05 / 2.824571e+00
[Open3D DEBUG] #       Finalized tree: 0.131626 (s), 6755.07 (MB) / 6755.07 (MB) / 6787 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.527962 (s), 6755.07 (MB) / 6755.07 (MB) / 6787 (MB)
[Open3D DEBUG] #Set point constraints: 0.059828 (s), 6755.07 (MB) / 6755.07 (MB) / 6787 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 597745 / 560392 / 122745
[Open3D DEBUG] Memory Usage: 6755.070 MB
[Open3D DEBUG] # Linear system solved: 4.97081 (s), 6755.07 (MB) / 6755.07 (MB) / 6787 (MB)
[Open3D DEBUG] Got average: 0.027 (s), 6755.07 (MB) / 6755.07 (MB) / 6787 (MB)
[Open3D DEBUG] Iso-Value: 5.019113e-01 = 2.626652e+04 / 5.233300e+04
[Open3D DEBUG] #          Total Solve:       9.2 (s),    6764.9 (MB)
TriangleMesh with 88727 points and 177450 triangles.
state_cur: torch.Size([4, 300, 3]), state_goal: torch.Size([1, 300, 3])
sampling: max: -0.0610, mean: -0.0737, std: 0.0055
Selected top reward seqs: tensor([-0.0670, -0.0669, -0.0669, -0.0668, -0.0668, -0.0666, -0.0665, -0.0662,
        -0.0654, -0.0653, -0.0645, -0.0643, -0.0637, -0.0633, -0.0631, -0.0620,
        -0.0614, -0.0614, -0.0611, -0.0610])
Batch 0/20:
reward seqs after 15 iterations: tensor([-0.0665], grad_fn=<CatBackward>)
Batch 1/20:
reward seqs after 8 iterations: tensor([-0.0651], grad_fn=<CatBackward>)
Batch 2/20:
reward seqs after 28 iterations: tensor([-0.0679], grad_fn=<CatBackward>)
Batch 3/20:
reward seqs after 8 iterations: tensor([-0.0671], grad_fn=<CatBackward>)
Batch 4/20:
reward seqs after 13 iterations: tensor([-0.0651], grad_fn=<CatBackward>)
Batch 5/20:
reward seqs after 8 iterations: tensor([-0.0672], grad_fn=<CatBackward>)
Batch 6/20:
reward seqs after 7 iterations: tensor([-0.0680], grad_fn=<CatBackward>)
Batch 7/20:
reward seqs after 13 iterations: tensor([-0.0659], grad_fn=<CatBackward>)
Batch 8/20:
reward seqs after 17 iterations: tensor([-0.0666], grad_fn=<CatBackward>)
Batch 9/20:
reward seqs after 10 iterations: tensor([-0.0658], grad_fn=<CatBackward>)
Batch 10/20:
reward seqs after 14 iterations: tensor([-0.0631], grad_fn=<CatBackward>)
Batch 11/20:
reward seqs after 22 iterations: tensor([-0.0649], grad_fn=<CatBackward>)
Batch 12/20:
reward seqs after 8 iterations: tensor([-0.0636], grad_fn=<CatBackward>)
Batch 13/20:
reward seqs after 8 iterations: tensor([-0.0627], grad_fn=<CatBackward>)
Batch 14/20:
reward seqs after 8 iterations: tensor([-0.0629], grad_fn=<CatBackward>)
Batch 15/20:
reward seqs after 11 iterations: tensor([-0.0619], grad_fn=<CatBackward>)
Batch 16/20:
reward seqs after 13 iterations: tensor([-0.0603], grad_fn=<CatBackward>)
Batch 17/20:
reward seqs after 23 iterations: tensor([-0.0602], grad_fn=<CatBackward>)
Batch 18/20:
reward seqs after 6 iterations: tensor([-0.0621], grad_fn=<CatBackward>)
Batch 19/20:
reward seqs after 11 iterations: tensor([-0.0618], grad_fn=<CatBackward>)
Loss: 0.06020800396800041
Optimal set of params:
mid_point: tensor([[0.5435, 0.1400, 0.5086]])
angle: tensor([0.1953], grad_fn=<SelectBackward>)
gripper_rate: tensor([0.0105], grad_fn=<ClampBackward1>)
Optimal init pose seq: tensor([[0.1511, 0.1400, 0.5862, 1.0000, 0.0000, 0.0000, 0.0000]],
       grad_fn=<SliceBackward>)
[Open3D DEBUG] Input Points / Samples: 50075 / 42140
[Open3D DEBUG] #   Got kernel density: 0.0205941 (s), 6707.27 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] #     Got normal field: 0.120638 (s), 6707.27 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] Point weight / Estimated Area: 4.181807e-05 / 2.094040e+00
[Open3D DEBUG] #       Finalized tree: 0.121557 (s), 6707.27 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] #  Set FEM constraints: 0.460247 (s), 6707.27 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] #Set point constraints: 0.0534549 (s), 6707.27 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] Leaf Nodes / Active Nodes / Ghost Nodes: 544356 / 563992 / 58129
[Open3D DEBUG] Memory Usage: 6707.273 MB
[Open3D DEBUG] # Linear system solved: 3.9432 (s), 6707.5 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] Got average: 0.023114 (s), 6707.5 (MB) / 6764.94 (MB) / 6787 (MB)
[Open3D DEBUG] Iso-Value: 5.018975e-01 = 2.513252e+04 / 5.007500e+04
[Open3D DEBUG] #          Total Solve:       7.4 (s),    6764.9 (MB)
TriangleMesh with 87476 points and 174948 triangles.
EMD: tensor([0.0721], dtype=torch.float64)
Chamfer: tensor([0.0629], dtype=torch.float64)
=============== Iteration 3 -> model_loss: tensor([0.0602]); sim_loss: tensor([0.0711], dtype=torch.float64) ===============
torch.Size([2, 11, 14]) torch.Size([2, 40, 12])
Best init pose: tensor([[0.1695, 0.1400, 0.6381, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.2308, 0.1400, 0.7001, 1.0000, 0.0000, 0.0000, 0.0000]])
Best model loss: tensor([0.0560]); Best sim loss: tensor([0.0460], dtype=torch.float64)
Wrote profile results to control.py.lprof
